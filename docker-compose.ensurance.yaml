services:
  # Servicio de limpieza que se ejecuta antes que los demÃ¡s
  cleanup:
    image: docker:24-cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c "
        echo 'ðŸ§¹ Limpiando contenedores en puertos del backend de ensurance...';
        docker ps -q --filter 'publish=${ENS_BACKEND_HOST_PORT:-8081}' | xargs -r docker stop;
        docker ps -aq --filter 'publish=${ENS_BACKEND_HOST_PORT:-8081}' | xargs -r docker rm;
        echo 'ðŸ§¹ Limpiando contenedores en puerto 5175 (frontend ensurance)...';
        docker ps -q --filter 'publish=5175' | xargs -r docker stop;
        docker ps -aq --filter 'publish=5175' | xargs -r docker rm;
        echo 'âœ… Limpieza completada para servicios de ensurance';
      "
    profiles:
      - cleanup

  ensurance-backend:
    build:
      context: .
      dockerfile: Dockerfile.ensurance.backend  # backv4 (HTTP default 8080)
    environment:
      SERVER_HOST: "0.0.0.0"
      SERVER_PORT: "8080"
      # Variables para comunicaciÃ³n interna entre backends
      PHARM_BACKEND_API_URL: "${PHARM_BACKEND_API_URL:-http://localhost:8082/api2}"
      HOSPITAL_API_URL: "${HOSPITAL_API_URL:-http://localhost:8000/api}"
    ports:
      - "${ENS_BACKEND_HOST_PORT:-8081}:8080"   # host -> container:8080
    restart: unless-stopped

  ensurance-frontend:
    build:
      context: .
      dockerfile: Dockerfile.ensurance.frontend # Vite dev server (EXPOSE 5173)
    ports:
      - "5175:5173"                             # http://localhost:5175
    environment:
      # URLs base para que el frontend apunte al backend expuesto
      VITE_ENSURANCE_API_URL: "${VITE_ENSURANCE_API_URL:-http://localhost:8081/api}"
      VITE_PHARMACY_API_URL:  "${VITE_PHARMACY_API_URL:-http://localhost:8082/api2}"
    depends_on:
      - ensurance-backend
    restart: unless-stopped

