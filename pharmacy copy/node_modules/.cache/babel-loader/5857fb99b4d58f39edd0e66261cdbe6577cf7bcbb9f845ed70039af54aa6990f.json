{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"dashboard-container\"\n};\nconst _hoisted_3 = {\n  class: \"export-container\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"export-message success\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"export-message error\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_10 = {\n  class: \"summary-cards\"\n};\nconst _hoisted_11 = {\n  class: \"summary-card\"\n};\nconst _hoisted_12 = {\n  class: \"card-content\"\n};\nconst _hoisted_13 = {\n  class: \"card-value\"\n};\nconst _hoisted_14 = {\n  class: \"summary-card\"\n};\nconst _hoisted_15 = {\n  class: \"card-content\"\n};\nconst _hoisted_16 = {\n  class: \"card-value\"\n};\nconst _hoisted_17 = {\n  class: \"summary-card\"\n};\nconst _hoisted_18 = {\n  class: \"card-content\"\n};\nconst _hoisted_19 = {\n  class: \"card-value\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"loading-container\"\n};\nconst _hoisted_21 = {\n  class: \"dashboard-grid\"\n};\nconst _hoisted_22 = {\n  class: \"dashboard-card top-categories\"\n};\nconst _hoisted_23 = {\n  class: \"chart-container\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"chart-legend\"\n};\nconst _hoisted_25 = {\n  class: \"legend-label\"\n};\nconst _hoisted_26 = {\n  class: \"legend-value\"\n};\nconst _hoisted_27 = {\n  key: 1,\n  class: \"no-data-message\"\n};\nconst _hoisted_28 = {\n  class: \"dashboard-card sales\"\n};\nconst _hoisted_29 = {\n  class: \"chart-container\"\n};\nconst _hoisted_30 = {\n  class: \"sales-summary\"\n};\nconst _hoisted_31 = {\n  class: \"total-amount\"\n};\nconst _hoisted_32 = {\n  class: \"total-amount\"\n};\nconst _hoisted_33 = {\n  class: \"dashboard-card inventory\"\n};\nconst _hoisted_34 = {\n  class: \"chart-container\"\n};\nconst _hoisted_35 = {\n  class: \"inventory-status\"\n};\nconst _hoisted_36 = {\n  class: \"status-label\"\n};\nconst _hoisted_37 = {\n  class: \"status-value\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_2, [_cache[14] || (_cache[14] = _createElementVNode(\"h1\", {\n    class: \"dashboard-title\"\n  }, \"Dashboard Administrativo\", -1 /* HOISTED */)), _createCommentVNode(\" Bot칩n para exportar medicamentos en XML \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"export-btn\",\n    onClick: $setup.exportMedicinesXML,\n    disabled: $setup.isExportingXML\n  }, [$setup.isExportingXML ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _cache[0] || (_cache[0] = [_createElementVNode(\"span\", {\n    class: \"spinner-small\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Exportando... \")]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _cache[1] || (_cache[1] = [_createElementVNode(\"i\", {\n    class: \"export-icon\"\n  }, \"游닌\", -1 /* HOISTED */), _createTextVNode(\" Exportar Medicamentos XML \")])))], 8 /* PROPS */, _hoisted_4), $setup.exportSuccess ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" 춰Exportaci칩n exitosa! \")) : _createCommentVNode(\"v-if\", true), $setup.exportError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \" Error al exportar XML. Intente nuevamente. \")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Mensaje de error si hay problemas con las APIs \"), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Indicadores de resumen \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"card-icon\"\n  }, \"游눍\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_12, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", {\n    class: \"card-title\"\n  }, \"Total Categor칤as\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_13, _toDisplayString($setup.totalCategories), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_14, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"card-icon\"\n  }, \"游눯\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_15, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", {\n    class: \"card-title\"\n  }, \"Ventas Anuales\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_16, \" Q\" + _toDisplayString($setup.calculateTotalSales().toLocaleString()), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_17, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"card-icon\"\n  }, \"游늵\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", {\n    class: \"card-title\"\n  }, \"Inventario Total\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_19, _toDisplayString($setup.totalInventory) + \" unidades\", 1 /* TEXT */)])])]), _createCommentVNode(\" Pantalla de carga \"), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Cargando datos del dashboard...\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Contenido principal \"), _createElementVNode(\"div\", _hoisted_21, [_createCommentVNode(\" Gr치fica 1: Top Categor칤as \"), _createElementVNode(\"div\", _hoisted_22, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", {\n    class: \"card-title\"\n  }, \"Top 10 Categor칤as de Medicamentos\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_23, [_createVNode($setup[\"Pie\"], {\n    data: $setup.topCategoriesData,\n    options: $setup.categoryOptions,\n    height: 220\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]), $setup.topCategoriesData.labels.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.topCategoriesData.labels, (value, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"legend-item\"\n    }, [_createElementVNode(\"span\", {\n      class: \"color-box\",\n      style: _normalizeStyle({\n        backgroundColor: $setup.topCategoriesData.datasets[0].backgroundColor[index % 10]\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"span\", _hoisted_25, _toDisplayString(value) + \":\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_26, _toDisplayString($setup.topCategoriesData.datasets[0].data[index]) + \"%\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_27, \" No hay datos de categor칤as disponibles \"))]), _createCommentVNode(\" Gr치fica 2: Ventas Mensuales \"), _createElementVNode(\"div\", _hoisted_28, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", {\n    class: \"card-title\"\n  }, \"Ventas Mensuales\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_29, [_createVNode($setup[\"Bar\"], {\n    data: $setup.monthlySalesData,\n    options: $setup.salesOptions,\n    height: 220\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"p\", null, [_cache[10] || (_cache[10] = _createTextVNode(\" Total anual: \")), _createElementVNode(\"span\", _hoisted_31, \"Q\" + _toDisplayString($setup.calculateTotalSales().toLocaleString()), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[11] || (_cache[11] = _createTextVNode(\" Promedio mensual: \")), _createElementVNode(\"span\", _hoisted_32, \"Q\" + _toDisplayString(Math.round($setup.calculateTotalSales() / 12).toLocaleString()), 1 /* TEXT */)])])]), _createCommentVNode(\" Gr치fica 3: Estado del Inventario \"), _createElementVNode(\"div\", _hoisted_33, [_cache[13] || (_cache[13] = _createElementVNode(\"h2\", {\n    class: \"card-title\"\n  }, \"Estado del Inventario\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_34, [_createVNode($setup[\"Doughnut\"], {\n    data: $setup.inventoryStatusData,\n    options: $setup.inventoryOptions,\n    height: 180\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]), _createElementVNode(\"div\", _hoisted_35, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.inventoryStatusData.labels, (label, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"status-item\", `status-${label.toLowerCase().replace(' ', '-')}`])\n    }, [_createElementVNode(\"span\", _hoisted_36, _toDisplayString(label) + \":\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_37, _toDisplayString($setup.inventoryStatusData.datasets[0].data[index]) + \" productos\", 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_Header","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","onClick","$setup","exportMedicinesXML","disabled","isExportingXML","_hoisted_5","_cache","_createTextVNode","_hoisted_6","_hoisted_4","exportSuccess","_hoisted_7","exportError","_hoisted_8","error","_hoisted_9","_toDisplayString","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","totalCategories","_hoisted_14","_hoisted_15","_hoisted_16","calculateTotalSales","toLocaleString","_hoisted_17","_hoisted_18","_hoisted_19","totalInventory","isLoading","_hoisted_20","_Fragment","_hoisted_21","_hoisted_22","_hoisted_23","data","topCategoriesData","options","categoryOptions","height","labels","length","_hoisted_24","_renderList","value","index","style","_normalizeStyle","datasets","backgroundColor","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","monthlySalesData","salesOptions","_hoisted_30","_hoisted_31","_hoisted_32","Math","round","_hoisted_33","_hoisted_34","inventoryStatusData","inventoryOptions","_hoisted_35","label","_normalizeClass","toLowerCase","replace","_hoisted_36","_hoisted_37"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/AdminDash.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useUserStore } from \"@/stores/userStore\";\nimport { Bar, Pie, Doughnut } from \"vue-chartjs\";\nimport {\n  Chart,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadialLinearScale,\n} from \"chart.js\";\n\nimport axios from \"axios\";\n\n// Registrar componentes de Chart.js\nChart.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  RadialLinearScale\n);\n\nconst router = useRouter();\nconst userStore = useUserStore();\n\n// Obtener IP del servidor\nconst ip = process.env.VUE_APP_IP || \"127.0.0.1\";\nconsole.log(\"IP del servidor para API:\", ip);\n\n// Estado para almacenar los datos de las gr치ficas\nconst topCategoriesData = ref({\n  labels: [],\n  datasets: [\n    {\n      backgroundColor: [\n        \"#FF6384\",\n        \"#36A2EB\",\n        \"#FFCE56\",\n        \"#4BC0C0\",\n        \"#9966FF\",\n        \"#FF9F40\",\n        \"#C9CBCF\",\n        \"#7FB800\",\n        \"#00A6ED\",\n        \"#F6511D\",\n      ],\n      data: [],\n    },\n  ],\n});\n\nconst monthlySalesData = ref({\n  labels: [\n    \"Enero\",\n    \"Febrero\",\n    \"Marzo\",\n    \"Abril\",\n    \"Mayo\",\n    \"Junio\",\n    \"Julio\",\n    \"Agosto\",\n    \"Septiembre\",\n    \"Octubre\",\n    \"Noviembre\",\n    \"Diciembre\",\n  ],\n  datasets: [\n    {\n      label: \"Ventas Mensuales\",\n      backgroundColor: \"#4BC0C0\",\n      data: [],\n    },\n  ],\n});\n\nconst inventoryStatusData = ref({\n  labels: [\"En exceso\", \"칍ptimo\", \"Bajo\", \"Cr칤tico\"],\n  datasets: [\n    {\n      backgroundColor: [\"#48bb78\", \"#4299e1\", \"#ecc94b\", \"#f56565\"],\n      data: [],\n    },\n  ],\n});\n\n// Estad칤sticas de resumen\nconst totalCategories = ref(0);\nconst totalSales = ref(0);\nconst totalInventory = ref(0);\n\n// Opciones de gr치ficas\nconst categoryOptions = ref({\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    title: {\n      display: true,\n      text: \"Top 10 Categor칤as de Medicamentos\",\n    },\n    legend: {\n      position: \"right\",\n    },\n    tooltip: {\n      callbacks: {\n        label: function (context) {\n          return `${context.label}: ${context.raw}%`;\n        },\n      },\n    },\n  },\n});\n\nconst salesOptions = ref({\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    title: {\n      display: true,\n      text: \"Ventas Mensuales\",\n    },\n    legend: {\n      display: false,\n    },\n    tooltip: {\n      callbacks: {\n        label: function (context) {\n          return `Q${context.raw.toLocaleString()}`;\n        },\n      },\n    },\n  },\n  scales: {\n    y: {\n      beginAtZero: true,\n      ticks: {\n        callback: function (value) {\n          return \"Q\" + value.toLocaleString();\n        },\n      },\n    },\n  },\n});\n\nconst inventoryOptions = ref({\n  responsive: true,\n  maintainAspectRatio: false,\n  cutout: \"70%\",\n  plugins: {\n    title: {\n      display: true,\n      text: \"Estado del Inventario\",\n    },\n    legend: {\n      position: \"bottom\",\n    },\n  },\n});\n\n// Variables para estado de carga\nconst isLoading = ref(true);\nconst error = ref(null);\n\n// Variables para estado de la exportaci칩n XML\nconst isExportingXML = ref(false);\nconst exportSuccess = ref(false);\nconst exportError = ref(false);\n\n// Comprobar si el usuario es administrador\nconst checkAdminStatus = () => {\n  console.log(\"Verificando si el usuario es administrador\");\n\n  // M칠todo 1: Verificar en el store\n  if (userStore.isAdmin()) {\n    console.log(\"El usuario es admin seg칰n el store\");\n    return true;\n  }\n\n  // M칠todo 2: Verificar directamente en localStorage\n  try {\n    // Verificar en 'role'\n    const storedRole = localStorage.getItem(\"role\");\n    if (storedRole === \"admin\") {\n      console.log(\"Usuario es admin seg칰n localStorage.role\");\n      return true;\n    }\n\n    // Verificar en 'user'\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      if (parsedUser.role === \"admin\") {\n        console.log(\"Usuario es admin seg칰n localStorage.user\");\n        // Actualizar el store por si acaso\n        userStore.setUser(parsedUser);\n        return true;\n      }\n    }\n\n    // Verificar en 'session'\n    const storedSession = localStorage.getItem(\"session\");\n    if (storedSession) {\n      const parsedSession = JSON.parse(storedSession);\n      if (parsedSession.role === \"admin\") {\n        console.log(\"Usuario es admin seg칰n localStorage.session\");\n        // Actualizar el store por si acaso\n        userStore.setUser(parsedSession);\n        return true;\n      }\n    }\n  } catch (e) {\n    console.error(\"Error al verificar admin en localStorage:\", e);\n  }\n\n  // Si llegamos aqu칤, no es admin o no hay datos\n  console.log(\"No se encontr칩 rol admin. Redirigiendo...\");\n  router.push(\"/login\");\n  setTimeout(() => {\n    alert(\"Acceso denegado: Solo administradores pueden acceder a este panel\");\n  }, 500);\n  return false;\n};\n\n// Obtener datos de medicamentos y procesarlos para las gr치ficas\nconst fetchMedicinesData = async () => {\n  try {\n    console.log(\"Obteniendo datos de medicamentos\");\n    const response = await axios.get(`http://${ip}:8081/api2/medicines`);\n    const medicines = response.data;\n    console.log(\"Datos de medicamentos obtenidos:\", medicines);\n\n    // Verificar si hay datos\n    if (!medicines || medicines.length === 0) {\n      console.log(\"No hay datos de medicamentos, usando datos de ejemplo\");\n\n      // Datos de ejemplo\n      const exampleData = [\n        { name: \"Analg칠sicos\", value: 320, percentage: 32 },\n        { name: \"Antibi칩ticos\", value: 245, percentage: 24 },\n        { name: \"Antiinflamatorios\", value: 180, percentage: 18 },\n        { name: \"Antihistam칤nicos\", value: 95, percentage: 9 },\n        { name: \"Antidepresivos\", value: 70, percentage: 7 },\n        { name: \"Antihipertensivos\", value: 50, percentage: 5 },\n        { name: \"Antigripales\", value: 30, percentage: 3 },\n        { name: \"Vitaminas\", value: 10, percentage: 1 },\n        { name: \"Suplementos\", value: 5, percentage: 0.5 },\n        { name: \"Otros\", value: 5, percentage: 0.5 },\n      ];\n\n      // Actualizar datos de categor칤a\n      topCategoriesData.value.labels = exampleData.map((item) => item.name);\n      topCategoriesData.value.datasets[0].data = exampleData.map(\n        (item) => item.percentage\n      );\n\n      // Datos de ejemplo para inventario\n      inventoryStatusData.value.datasets[0].data = [15, 45, 20, 10];\n\n      // Actualizar estad칤sticas\n      totalCategories.value = exampleData.length;\n      totalInventory.value = 90;\n\n      return [];\n    }\n\n    // Procesar datos para categor칤as (usando activeMedicament como categor칤a)\n    const categories = {};\n    let totalInventoryCount = 0;\n\n    medicines.forEach((medicine) => {\n      const category = medicine.activeMedicament || \"Sin categor칤a\";\n      if (!categories[category]) {\n        categories[category] = 0;\n      }\n      // Sumar unidades vendidas (o unidades en stock si no hay vendidas)\n      categories[category] += medicine.soldUnits || 1;\n\n      // Contar inventario total\n      totalInventoryCount += medicine.stock || 0;\n    });\n\n    // Convertir a array y ordenar por ventas\n    let sortedCategories = Object.entries(categories)\n      .map(([name, value]) => ({ name, value }))\n      .sort((a, b) => b.value - a.value);\n\n    // Almacenar total de categor칤as\n    totalCategories.value = sortedCategories.length;\n\n    // Tomar solo las 10 primeras\n    sortedCategories = sortedCategories.slice(0, 10);\n\n    // Calcular porcentajes\n    const totalCategorySales = sortedCategories.reduce(\n      (sum, cat) => sum + cat.value,\n      0\n    );\n    sortedCategories.forEach((cat) => {\n      cat.percentage = Math.round((cat.value / totalCategorySales) * 100);\n    });\n\n    // Actualizar datos de gr치fica de categor칤as\n    topCategoriesData.value.labels = sortedCategories.map((cat) => cat.name);\n    topCategoriesData.value.datasets[0].data = sortedCategories.map(\n      (cat) => cat.percentage\n    );\n\n    // Procesar datos para estado de inventario\n    const inventoryStatus = {\n      \"En exceso\": 0,\n      칍ptimo: 0,\n      Bajo: 0,\n      Cr칤tico: 0,\n    };\n\n    medicines.forEach((medicine) => {\n      const stock = medicine.stock || 0;\n      if (stock > 50) {\n        inventoryStatus[\"En exceso\"]++;\n      } else if (stock > 20) {\n        inventoryStatus[\"칍ptimo\"]++;\n      } else if (stock > 5) {\n        inventoryStatus[\"Bajo\"]++;\n      } else {\n        inventoryStatus[\"Cr칤tico\"]++;\n      }\n    });\n\n    // Actualizar datos de gr치fica de inventario\n    inventoryStatusData.value.datasets[0].data = [\n      inventoryStatus[\"En exceso\"],\n      inventoryStatus[\"칍ptimo\"],\n      inventoryStatus[\"Bajo\"],\n      inventoryStatus[\"Cr칤tico\"],\n    ];\n\n    // Actualizar conteo total de inventario\n    totalInventory.value = totalInventoryCount;\n\n    return medicines;\n  } catch (error) {\n    console.error(\"Error al obtener datos de medicamentos:\", error);\n\n    // Datos de ejemplo en caso de error\n    const exampleData = [\n      { name: \"Analg칠sicos\", value: 320, percentage: 32 },\n      { name: \"Antibi칩ticos\", value: 245, percentage: 24 },\n      { name: \"Antiinflamatorios\", value: 180, percentage: 18 },\n      { name: \"Antihistam칤nicos\", value: 95, percentage: 9 },\n      { name: \"Antidepresivos\", value: 70, percentage: 7 },\n      { name: \"Antihipertensivos\", value: 50, percentage: 5 },\n      { name: \"Antigripales\", value: 30, percentage: 3 },\n      { name: \"Vitaminas\", value: 10, percentage: 1 },\n      { name: \"Suplementos\", value: 5, percentage: 0.5 },\n      { name: \"Otros\", value: 5, percentage: 0.5 },\n    ];\n\n    // Actualizar datos\n    topCategoriesData.value.labels = exampleData.map((item) => item.name);\n    topCategoriesData.value.datasets[0].data = exampleData.map(\n      (item) => item.percentage\n    );\n    inventoryStatusData.value.datasets[0].data = [15, 45, 20, 10];\n    totalCategories.value = exampleData.length;\n    totalInventory.value = 90;\n\n    throw error;\n  }\n};\n\n// Obtener datos de transacciones/ventas\nconst fetchTransactionsData = async () => {\n  try {\n    console.log(\"Obteniendo datos de transacciones/facturas\");\n    // Primero intentamos con la API de transacciones\n    let transactions = [];\n    try {\n      const response = await axios.get(`http://${ip}:8081/api2/transactions`);\n      transactions = response.data;\n      console.log(\"Datos de transacciones obtenidos:\", transactions);\n    } catch (e) {\n      console.log(\"Error al obtener transacciones, intentando con bills:\", e);\n      // Si falla, intentamos con la API de facturas\n      const response = await axios.get(`http://${ip}:8081/api2/bills`);\n      transactions = response.data;\n      console.log(\"Datos de facturas obtenidos:\", transactions);\n    }\n\n    // Inicializar datos de ventas mensuales\n    const monthlySales = Array(12).fill(0);\n\n    // Procesar transacciones por mes\n    transactions.forEach((transaction) => {\n      // Verificar si el campo fecha existe\n      const dateField = transaction.transDate || transaction.billDate || null;\n      if (dateField) {\n        const date = new Date(dateField);\n        const month = date.getMonth();\n        // Sumar el total de la transacci칩n\n        monthlySales[month] += transaction.total || 0;\n      }\n    });\n\n    // Si no hay datos, usar datos de ejemplo\n    if (monthlySales.every((value) => value === 0)) {\n      console.log(\"No hay datos reales de ventas, usando datos de ejemplo\");\n      for (let i = 0; i < 12; i++) {\n        monthlySales[i] = Math.floor(Math.random() * 10000) + 5000;\n      }\n    }\n\n    // Actualizar datos de gr치fica de ventas\n    monthlySalesData.value.datasets[0].data = monthlySales;\n\n    // Calcular total de ventas\n    totalSales.value = monthlySales.reduce((sum, value) => sum + value, 0);\n\n    return transactions;\n  } catch (error) {\n    console.error(\"Error al obtener datos de transacciones:\", error);\n    // Si no hay datos, generar datos de ejemplo\n    const monthlySales = [];\n    for (let i = 0; i < 12; i++) {\n      monthlySales.push(Math.floor(Math.random() * 10000) + 5000);\n    }\n    monthlySalesData.value.datasets[0].data = monthlySales;\n    totalSales.value = monthlySales.reduce((sum, value) => sum + value, 0);\n\n    throw error;\n  }\n};\n\n// Nuevo m칠todo para exportar medicamentos en XML\nconst exportMedicinesXML = async () => {\n  try {\n    // Mostrar indicador de carga\n    isExportingXML.value = true;\n\n    // Realizar solicitud al endpoint de XML\n    const response = await axios.get(`http://${ip}:8081/api2/medicines-xml`, {\n      responseType: \"blob\",\n    });\n\n    // Crear URL para el blob\n    const blob = new Blob([response.data], { type: \"application/xml\" });\n    const url = window.URL.createObjectURL(blob);\n\n    // Crear elemento de enlace para descarga\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"medicines.xml\");\n    document.body.appendChild(link);\n\n    // Iniciar descarga\n    link.click();\n\n    // Limpiar\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(link);\n\n    // Mostrar mensaje de 칠xito\n    exportSuccess.value = true;\n    setTimeout(() => {\n      exportSuccess.value = false;\n    }, 3000);\n  } catch (error) {\n    console.error(\"Error al exportar medicamentos en XML:\", error);\n    exportError.value = true;\n    setTimeout(() => {\n      exportError.value = false;\n    }, 3000);\n  } finally {\n    isExportingXML.value = false;\n  }\n};\n\n// Calcular el total de ventas\nconst calculateTotalSales = () => {\n  return totalSales.value;\n};\n\n// Cargar todos los datos\nconst loadAllData = async () => {\n  isLoading.value = true;\n  error.value = null;\n\n  try {\n    await Promise.all([fetchMedicinesData(), fetchTransactionsData()]);\n  } catch (err) {\n    console.error(\"Error al cargar datos:\", err);\n    error.value =\n      \"No se pudieron cargar algunos datos. Se muestran datos parciales o de ejemplo.\";\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Ejecutar al montar el componente\nonMounted(async () => {\n  if (checkAdminStatus()) {\n    await loadAllData();\n  }\n});\n</script>\n\n<template>\n  <div class=\"admin-dashboard\">\n    <Header />\n\n    <div class=\"dashboard-container\">\n      <h1 class=\"dashboard-title\">Dashboard Administrativo</h1>\n\n      <!-- Bot칩n para exportar medicamentos en XML -->\n      <div class=\"export-container\">\n        <button\n          class=\"export-btn\"\n          @click=\"exportMedicinesXML\"\n          :disabled=\"isExportingXML\"\n        >\n          <span v-if=\"isExportingXML\">\n            <span class=\"spinner-small\"></span> Exportando...\n          </span>\n          <span v-else>\n            <i class=\"export-icon\">游닌</i> Exportar Medicamentos XML\n          </span>\n        </button>\n        <div v-if=\"exportSuccess\" class=\"export-message success\">\n          춰Exportaci칩n exitosa!\n        </div>\n        <div v-if=\"exportError\" class=\"export-message error\">\n          Error al exportar XML. Intente nuevamente.\n        </div>\n      </div>\n\n      <!-- Mensaje de error si hay problemas con las APIs -->\n      <div v-if=\"error\" class=\"error-message\">\n        {{ error }}\n      </div>\n\n      <!-- Indicadores de resumen -->\n      <div class=\"summary-cards\">\n        <div class=\"summary-card\">\n          <div class=\"card-icon\">游눍</div>\n          <div class=\"card-content\">\n            <h3 class=\"card-title\">Total Categor칤as</h3>\n            <p class=\"card-value\">{{ totalCategories }}</p>\n          </div>\n        </div>\n\n        <div class=\"summary-card\">\n          <div class=\"card-icon\">游눯</div>\n          <div class=\"card-content\">\n            <h3 class=\"card-title\">Ventas Anuales</h3>\n            <p class=\"card-value\">\n              Q{{ calculateTotalSales().toLocaleString() }}\n            </p>\n          </div>\n        </div>\n\n        <div class=\"summary-card\">\n          <div class=\"card-icon\">游늵</div>\n          <div class=\"card-content\">\n            <h3 class=\"card-title\">Inventario Total</h3>\n            <p class=\"card-value\">{{ totalInventory }} unidades</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Pantalla de carga -->\n      <div v-if=\"isLoading\" class=\"loading-container\">\n        <div class=\"spinner\"></div>\n        <p>Cargando datos del dashboard...</p>\n      </div>\n\n      <!-- Contenido principal -->\n      <div v-else class=\"dashboard-grid\">\n        <!-- Gr치fica 1: Top Categor칤as -->\n        <div class=\"dashboard-card top-categories\">\n          <h2 class=\"card-title\">Top 10 Categor칤as de Medicamentos</h2>\n          <div class=\"chart-container\">\n            <Pie\n              :data=\"topCategoriesData\"\n              :options=\"categoryOptions\"\n              :height=\"220\"\n            />\n          </div>\n          <div v-if=\"topCategoriesData.labels.length > 0\" class=\"chart-legend\">\n            <div\n              v-for=\"(value, index) in topCategoriesData.labels\"\n              :key=\"index\"\n              class=\"legend-item\"\n            >\n              <span\n                class=\"color-box\"\n                :style=\"{\n                  backgroundColor:\n                    topCategoriesData.datasets[0].backgroundColor[index % 10],\n                }\"\n              ></span>\n              <span class=\"legend-label\">{{ value }}:</span>\n              <span class=\"legend-value\"\n                >{{ topCategoriesData.datasets[0].data[index] }}%</span\n              >\n            </div>\n          </div>\n          <div v-else class=\"no-data-message\">\n            No hay datos de categor칤as disponibles\n          </div>\n        </div>\n\n        <!-- Gr치fica 2: Ventas Mensuales -->\n        <div class=\"dashboard-card sales\">\n          <h2 class=\"card-title\">Ventas Mensuales</h2>\n          <div class=\"chart-container\">\n            <Bar\n              :data=\"monthlySalesData\"\n              :options=\"salesOptions\"\n              :height=\"220\"\n            />\n          </div>\n          <div class=\"sales-summary\">\n            <p>\n              Total anual:\n              <span class=\"total-amount\"\n                >Q{{ calculateTotalSales().toLocaleString() }}</span\n              >\n            </p>\n            <p>\n              Promedio mensual:\n              <span class=\"total-amount\"\n                >Q{{\n                  Math.round(calculateTotalSales() / 12).toLocaleString()\n                }}</span\n              >\n            </p>\n          </div>\n        </div>\n\n        <!-- Gr치fica 3: Estado del Inventario -->\n        <div class=\"dashboard-card inventory\">\n          <h2 class=\"card-title\">Estado del Inventario</h2>\n          <div class=\"chart-container\">\n            <Doughnut\n              :data=\"inventoryStatusData\"\n              :options=\"inventoryOptions\"\n              :height=\"180\"\n            />\n          </div>\n          <div class=\"inventory-status\">\n            <div\n              v-for=\"(label, index) in inventoryStatusData.labels\"\n              :key=\"index\"\n              class=\"status-item\"\n              :class=\"`status-${label.toLowerCase().replace(' ', '-')}`\"\n            >\n              <span class=\"status-label\">{{ label }}:</span>\n              <span class=\"status-value\"\n                >{{\n                  inventoryStatusData.datasets[0].data[index]\n                }}\n                productos</span\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.admin-dashboard {\n  background-color: #f8f9fa;\n  min-height: 100vh;\n}\n\n.dashboard-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.dashboard-title {\n  color: #1e40af;\n  font-size: 2rem;\n  font-weight: bold;\n  margin-bottom: 1rem;\n  text-align: center;\n}\n\n/* Estilos para exportaci칩n de XML */\n.export-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.export-btn {\n  background-color: #1e40af;\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: all 0.2s;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.export-btn:hover {\n  background-color: #1e3a8a;\n  transform: translateY(-2px);\n}\n\n.export-btn:disabled {\n  background-color: #a0aec0;\n  cursor: not-allowed;\n}\n\n.export-icon {\n  margin-right: 0.5rem;\n  font-style: normal;\n}\n\n.export-message {\n  margin-top: 0.75rem;\n  padding: 0.5rem 1rem;\n  border-radius: 0.25rem;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.export-message.success {\n  background-color: #c6f6d5;\n  color: #2f855a;\n}\n\n.export-message.error {\n  background-color: #fed7d7;\n  color: #c53030;\n}\n\n.spinner-small {\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: white;\n  animation: spin 1s linear infinite;\n  margin-right: 0.5rem;\n}\n\n.error-message {\n  background-color: #fecaca;\n  color: #b91c1c;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  margin-bottom: 1.5rem;\n  text-align: center;\n}\n\n.summary-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.summary-card {\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  display: flex;\n  align-items: center;\n  transition: transform 0.2s;\n}\n\n.summary-card:hover {\n  transform: translateY(-5px);\n}\n\n.card-icon {\n  font-size: 2rem;\n  margin-right: 1rem;\n}\n\n.card-title {\n  color: #4a5568;\n  font-size: 0.9rem;\n  margin-bottom: 0.5rem;\n}\n\n.card-value {\n  color: #1e40af;\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin: 0;\n}\n\n.dashboard-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: 2rem;\n}\n\n.dashboard-card {\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  transition: transform 0.2s;\n  overflow: hidden;\n}\n\n.dashboard-card:hover {\n  transform: translateY(-5px);\n}\n\n.card-title {\n  color: #1e40af;\n  font-size: 1.25rem;\n  font-weight: bold;\n  margin-bottom: 1rem;\n}\n\n.chart-container {\n  height: 220px;\n  position: relative;\n  margin-bottom: 1rem;\n}\n\n.no-data-message {\n  text-align: center;\n  color: #718096;\n  padding: 1rem;\n  background-color: #f7fafc;\n  border-radius: 0.25rem;\n}\n\n/* Leyenda para categor칤as */\n.chart-legend {\n  margin-top: 1rem;\n  max-height: 150px;\n  overflow-y: auto;\n  border-top: 1px solid #e2e8f0;\n  padding-top: 0.5rem;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.color-box {\n  width: 12px;\n  height: 12px;\n  border-radius: 2px;\n  margin-right: 0.5rem;\n}\n\n.legend-label {\n  flex: 1;\n  font-size: 0.85rem;\n}\n\n.legend-value {\n  font-weight: bold;\n  color: #1e40af;\n}\n\n/* Resumen de ventas */\n.sales-summary {\n  margin-top: 1rem;\n  text-align: right;\n  padding: 0.5rem;\n  background-color: #f8f9fa;\n  border-radius: 0.25rem;\n}\n\n.total-amount {\n  font-weight: bold;\n  color: #1e40af;\n}\n\n/* Estado de inventario */\n.inventory-status {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.5rem;\n  margin-top: 1rem;\n}\n\n.status-item {\n  background-color: #f8f9fa;\n  padding: 0.5rem;\n  border-radius: 0.25rem;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.85rem;\n}\n\n.status-label {\n  font-weight: 500;\n}\n\n.status-value {\n  font-weight: bold;\n}\n\n.status-en-exceso {\n  border-left: 3px solid #48bb78;\n  background-color: rgba(198, 246, 213, 0.3);\n}\n\n.status-칩ptimo {\n  border-left: 3px solid #4299e1;\n  background-color: rgba(190, 227, 248, 0.3);\n}\n\n.status-bajo {\n  border-left: 3px solid #ecc94b;\n  background-color: rgba(254, 252, 191, 0.3);\n}\n\n.status-cr칤tico {\n  border-left: 3px solid #f56565;\n  background-color: rgba(254, 215, 215, 0.3);\n}\n\n/* Pantalla de carga */\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem;\n}\n\n.spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #1e40af;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .dashboard-container {\n    padding: 1rem;\n  }\n\n  .dashboard-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .summary-cards {\n    grid-template-columns: 1fr;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}