{"ast":null,"code":"// src/stores/userStore.js\nimport { defineStore } from \"pinia\";\nexport const useUserStore = defineStore(\"user\", {\n  state: () => ({\n    user: {} // Aquí guardaremos el objeto de usuario (role, email, etc.)\n  }),\n  actions: {\n    // Por si más adelante necesitas un método de login dentro del store\n    setUser(userData) {\n      this.user = userData;\n      console.log(\"Guardando sesión en localStorage:\", userData);\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"session\", JSON.stringify(userData));\n      }\n    },\n    getUser() {\n      try {\n        const session = localStorage.getItem(\"session\");\n        if (session) {\n          return JSON.parse(session);\n        }\n      } catch (error) {\n        console.error(\"Error parsing session data:\", error);\n      }\n      return this.user;\n    },\n    logout() {\n      this.user = {};\n      if (import.meta.client) {\n        localStorage.setItem(\"session\", \"\");\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useUserStore","state","user","actions","setUser","userData","console","log","window","localStorage","setItem","JSON","stringify","getUser","session","getItem","parse","error","logout","import","meta","client"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/stores/userStore.js"],"sourcesContent":["// src/stores/userStore.js\nimport { defineStore } from \"pinia\";\n\nexport const useUserStore = defineStore(\"user\", {\n  state: () => ({\n    user: {}, // Aquí guardaremos el objeto de usuario (role, email, etc.)\n  }),\n  actions: {\n    // Por si más adelante necesitas un método de login dentro del store\n    setUser(userData) {\n      this.user = userData;\n      console.log(\"Guardando sesión en localStorage:\", userData);\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"session\", JSON.stringify(userData));\n      }\n    },\n    getUser() {\n      try {\n        const session = localStorage.getItem(\"session\");\n        if (session) {\n          return JSON.parse(session);\n        }\n      } catch (error) {\n        console.error(\"Error parsing session data:\", error);\n      }\n      return this.user;\n    },\n\n    logout() {\n      this.user = {};\n      if (import.meta.client) {\n        localStorage.setItem(\"session\", \"\");\n      }\n    },\n  },\n});\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC,MAAM,EAAE;EAC9CE,KAAK,EAAEA,CAAA,MAAO;IACZC,IAAI,EAAE,CAAC,CAAC,CAAE;EACZ,CAAC,CAAC;EACFC,OAAO,EAAE;IACP;IACAC,OAAOA,CAACC,QAAQ,EAAE;MAChB,IAAI,CAACH,IAAI,GAAGG,QAAQ;MACpBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,QAAQ,CAAC;MAC1D,IAAI,OAAOG,MAAM,KAAK,WAAW,EAAE;QACjCC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,CAAC;MAC3D;IACF,CAAC;IACDQ,OAAOA,CAAA,EAAG;MACR,IAAI;QACF,MAAMC,OAAO,GAAGL,YAAY,CAACM,OAAO,CAAC,SAAS,CAAC;QAC/C,IAAID,OAAO,EAAE;UACX,OAAOH,IAAI,CAACK,KAAK,CAACF,OAAO,CAAC;QAC5B;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;MACA,OAAO,IAAI,CAACf,IAAI;IAClB,CAAC;IAEDgB,MAAMA,CAAA,EAAG;MACP,IAAI,CAAChB,IAAI,GAAG,CAAC,CAAC;MACd,IAAIiB,MAAM,CAACC,IAAI,CAACC,MAAM,EAAE;QACtBZ,YAAY,CAACC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;MACrC;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}