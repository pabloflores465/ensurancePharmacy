{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useUserStore } from \"@/stores/userStore\";\nexport default {\n  __name: 'Prescriptions',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userStore = useUserStore();\n    const errorMessage = ref('');\n    const prescriptionCode = ref('');\n    const prescriptionFound = ref(null);\n    const ip = process.env.VUE_APP_API_IP || 'localhost';\n    const searchPrescription = async () => {\n      errorMessage.value = '';\n      prescriptionFound.value = null;\n      if (!prescriptionCode.value) {\n        errorMessage.value = 'Ingrese un código de receta.';\n        return;\n      }\n      try {\n        const response = await axios.get(`http://${ip}:8081/api2/prescription_medicines`);\n        const allPrescriptions = response.data;\n\n        // Filtrar recetas que coincidan con el código ingresado y pertenezcan al usuario actual\n        const filtered = allPrescriptions.filter(p => p.prescription.idPrescription == prescriptionCode.value && p.prescription.user.idUser == userStore.user.idUser);\n        if (filtered.length === 0) {\n          errorMessage.value = 'No se encontró la receta o no pertenece al usuario.';\n          return;\n        }\n\n        // Agrupar los registros de la receta\n        const grouped = {\n          prescription: filtered[0].prescription,\n          medicines: []\n        };\n        filtered.forEach(p => {\n          grouped.medicines.push({\n            medicine: p.medicine,\n            dosis: p.dosis,\n            frecuencia: p.frecuencia,\n            duracion: p.duracion\n          });\n        });\n        prescriptionFound.value = grouped;\n      } catch (error) {\n        console.error(\"Error al obtener la receta:\", error);\n        errorMessage.value = 'Error al obtener la receta. Por favor, inténtelo de nuevo.';\n      }\n    };\n    const __returned__ = {\n      userStore,\n      errorMessage,\n      prescriptionCode,\n      prescriptionFound,\n      ip,\n      searchPrescription,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useUserStore","userStore","errorMessage","prescriptionCode","prescriptionFound","ip","process","env","VUE_APP_API_IP","searchPrescription","value","response","get","allPrescriptions","data","filtered","filter","p","prescription","idPrescription","user","idUser","length","grouped","medicines","forEach","push","medicine","dosis","frecuencia","duracion","error","console"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/Prescriptions.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div class=\"prescriptions-container\">\n    <h2 class=\"text-2xl font-bold text-center text-blue-800 mb-4\">\n      Solicitar Receta\n    </h2>\n\n    <!-- Formulario para buscar receta -->\n    <div class=\"search-prescription mb-4 text-center\">\n      <input\n          v-model=\"prescriptionCode\"\n          placeholder=\"Ingrese el código de la receta\"\n          class=\"border p-2 mr-2\"\n      />\n      <button @click=\"searchPrescription\" class=\"bg-blue-500 text-white p-2 rounded\">\n        Buscar Receta\n      </button>\n    </div>\n\n    <!-- Mensaje de error si lo hay -->\n    <div v-if=\"errorMessage\" class=\"mb-4 text-red-600 text-center\">\n      {{ errorMessage }}\n    </div>\n\n    <!-- Mostrar receta encontrada -->\n    <div v-if=\"prescriptionFound\" class=\"prescriptions-list\">\n      <div class=\"prescription-item\">\n        <h3 class=\"text-xl font-bold\">{{ prescriptionFound.prescription.user.name }}</h3>\n        <p><strong>ID Receta:</strong> {{ prescriptionFound.prescription.idPrescription }}</p>\n        <p>\n          <strong>Diagnóstico:</strong>\n          {{ prescriptionFound.prescription.diagnosis || 'No especificado' }}\n        </p>\n        <p>\n          <strong>Fecha:</strong>\n          {{ prescriptionFound.prescription.date || 'No disponible' }}\n        </p>\n\n        <!-- Tabla de Medicinas -->\n        <table class=\"medicine-table mt-2\">\n          <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Concentración</th>\n            <th>Presentación</th>\n            <th>Dosis</th>\n            <th>Frecuencia</th>\n            <th>Duración</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr\n              v-for=\"(medicineEntry, index) in prescriptionFound.medicines\"\n              :key=\"index\"\n          >\n            <td>{{ medicineEntry.medicine.name }}</td>\n            <td>{{ medicineEntry.medicine.concentration }}</td>\n            <td>{{ medicineEntry.medicine.presentacion }}</td>\n            <td>{{ medicineEntry.dosis }}</td>\n            <td>{{ medicineEntry.frecuencia }}</td>\n            <td>{{ medicineEntry.duracion }} días</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useUserStore } from \"@/stores/userStore\";\nconst userStore = useUserStore();\n\nconst errorMessage = ref('');\nconst prescriptionCode = ref('');\nconst prescriptionFound = ref(null);\nconst ip = process.env.VUE_APP_API_IP || 'localhost';\n\nconst searchPrescription = async () => {\n  errorMessage.value = '';\n  prescriptionFound.value = null;\n  if (!prescriptionCode.value) {\n    errorMessage.value = 'Ingrese un código de receta.';\n    return;\n  }\n  try {\n    const response = await axios.get(`http://${ip}:8081/api2/prescription_medicines`);\n    const allPrescriptions = response.data;\n\n    // Filtrar recetas que coincidan con el código ingresado y pertenezcan al usuario actual\n    const filtered = allPrescriptions.filter(p =>\n        p.prescription.idPrescription == prescriptionCode.value &&\n        p.prescription.user.idUser == userStore.user.idUser\n    );\n    if (filtered.length === 0) {\n      errorMessage.value = 'No se encontró la receta o no pertenece al usuario.';\n      return;\n    }\n\n    // Agrupar los registros de la receta\n    const grouped = {\n      prescription: filtered[0].prescription,\n      medicines: []\n    };\n    filtered.forEach(p => {\n      grouped.medicines.push({\n        medicine: p.medicine,\n        dosis: p.dosis,\n        frecuencia: p.frecuencia,\n        duracion: p.duracion\n      });\n    });\n    prescriptionFound.value = grouped;\n  } catch (error) {\n    console.error(\"Error al obtener la receta:\", error);\n    errorMessage.value = 'Error al obtener la receta. Por favor, inténtelo de nuevo.';\n  }\n};\n</script>\n\n<style scoped>\n.prescriptions-container {\n  padding: 50px;\n  background-color: #f8f9fa;\n}\n\n.search-prescription input {\n  width: 250px;\n}\n\n.prescriptions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.prescription-item {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.medicine-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\n\n.medicine-table th,\n.medicine-table td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: center;\n}\n\n.medicine-table th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n</style>"],"mappings":";;;;AAsEA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,oBAAoB;;;;;;;IACjD,MAAMC,SAAS,GAAGD,YAAY,CAAC,CAAC;IAEhC,MAAME,YAAY,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMK,gBAAgB,GAAGL,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMM,iBAAiB,GAAGN,GAAG,CAAC,IAAI,CAAC;IACnC,MAAMO,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,IAAI,WAAW;IAEpD,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrCP,YAAY,CAACQ,KAAK,GAAG,EAAE;MACvBN,iBAAiB,CAACM,KAAK,GAAG,IAAI;MAC9B,IAAI,CAACP,gBAAgB,CAACO,KAAK,EAAE;QAC3BR,YAAY,CAACQ,KAAK,GAAG,8BAA8B;QACnD;MACF;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,UAAUP,EAAE,mCAAmC,CAAC;QACjF,MAAMQ,gBAAgB,GAAGF,QAAQ,CAACG,IAAI;;QAEtC;QACA,MAAMC,QAAQ,GAAGF,gBAAgB,CAACG,MAAM,CAACC,CAAC,IACtCA,CAAC,CAACC,YAAY,CAACC,cAAc,IAAIhB,gBAAgB,CAACO,KAAK,IACvDO,CAAC,CAACC,YAAY,CAACE,IAAI,CAACC,MAAM,IAAIpB,SAAS,CAACmB,IAAI,CAACC,MACjD,CAAC;QACD,IAAIN,QAAQ,CAACO,MAAM,KAAK,CAAC,EAAE;UACzBpB,YAAY,CAACQ,KAAK,GAAG,qDAAqD;UAC1E;QACF;;QAEA;QACA,MAAMa,OAAO,GAAG;UACdL,YAAY,EAAEH,QAAQ,CAAC,CAAC,CAAC,CAACG,YAAY;UACtCM,SAAS,EAAE;QACb,CAAC;QACDT,QAAQ,CAACU,OAAO,CAACR,CAAC,IAAI;UACpBM,OAAO,CAACC,SAAS,CAACE,IAAI,CAAC;YACrBC,QAAQ,EAAEV,CAAC,CAACU,QAAQ;YACpBC,KAAK,EAAEX,CAAC,CAACW,KAAK;YACdC,UAAU,EAAEZ,CAAC,CAACY,UAAU;YACxBC,QAAQ,EAAEb,CAAC,CAACa;UACd,CAAC,CAAC;QACJ,CAAC,CAAC;QACF1B,iBAAiB,CAACM,KAAK,GAAGa,OAAO;MACnC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD7B,YAAY,CAACQ,KAAK,GAAG,4DAA4D;MACnF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}