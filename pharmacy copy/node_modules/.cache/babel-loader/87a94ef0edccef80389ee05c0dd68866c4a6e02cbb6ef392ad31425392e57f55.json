{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"hospital-selector-overlay\"\n};\nconst _hoisted_2 = {\n  class: \"hospital-selector-content\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"flex items-center justify-center py-4\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"bg-red-100 p-4 mb-4 rounded border-l-4 border-red-500\"\n};\nconst _hoisted_5 = {\n  class: \"text-red-700\"\n};\nconst _hoisted_6 = {\n  key: 2,\n  class: \"bg-yellow-100 p-4 mb-4 rounded border-l-4 border-yellow-500\"\n};\nconst _hoisted_7 = {\n  key: 3\n};\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  class: \"mt-4 text-sm text-gray-600\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"text-red-600 mt-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return !$data.hospitalSelected ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-bold mb-4\"\n  }, \"Seleccionar Hospital\", -1 /* HOISTED */)), _cache[8] || (_cache[8] = _createElementVNode(\"p\", {\n    class: \"mb-4\"\n  }, \"Seleccione un hospital para continuar\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", {\n    class: \"ml-3\"\n  }, \"Cargando configuración...\", -1 /* HOISTED */)]))) : $data.loadError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString($data.loadError), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.loadHospitalPorts && $options.loadHospitalPorts(...args)),\n    class: \"mt-3 bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm\"\n  }, \" Reintentar \")])) : Object.keys($data.hospitalPorts).length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[4] || (_cache[4] = [_createElementVNode(\"p\", {\n    class: \"text-yellow-700\"\n  }, \"No se encontraron configuraciones de hospitales en env.json.\", -1 /* HOISTED */), _createElementVNode(\"p\", {\n    class: \"text-yellow-700 mt-2\"\n  }, \"Asegúrese de que el archivo contenga entradas VITE_HOSPITAL_PORT_X.\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedPort = $event),\n    class: \"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\n  }, [_cache[5] || (_cache[5] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\"\n  }, \"Seleccione un hospital\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.hospitalPorts, (port, key) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: key,\n      value: port\n    }, \" Hospital \" + _toDisplayString(key.split('_')[2]) + \" (Puerto: \" + _toDisplayString(port) + \") \", 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedPort]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.confirmSelection && $options.confirmSelection(...args)),\n    class: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg w-full\",\n    disabled: !$data.selectedPort\n  }, \" Continuar \", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createTextVNode(\"IP del servidor: \")), _createElementVNode(\"strong\", null, _toDisplayString($data.serverIP), 1 /* TEXT */)]), $data.serverIP === 'No configurada' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \" ¡Advertencia! No se ha configurado VUE_APP_IP en el archivo .env. \")) : _createCommentVNode(\"v-if\", true)])]))])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$data","hospitalSelected","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","loading","_hoisted_3","_cache","loadError","_hoisted_4","_hoisted_5","_toDisplayString","onClick","args","$options","loadHospitalPorts","Object","keys","hospitalPorts","length","_hoisted_6","_hoisted_7","$event","selectedPort","value","disabled","_Fragment","_renderList","port","split","_hoisted_8","confirmSelection","_hoisted_9","_hoisted_10","_createTextVNode","serverIP","_hoisted_11","_createCommentVNode"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy copy/src/components/HospitalSelector.vue"],"sourcesContent":["<template>\n  <div v-if=\"!hospitalSelected\" class=\"hospital-selector-overlay\">\n    <div class=\"hospital-selector-content\">\n      <h2 class=\"text-2xl font-bold mb-4\">Seleccionar Hospital</h2>\n      <p class=\"mb-4\">Seleccione un hospital para continuar</p>\n      \n      <div v-if=\"loading\" class=\"flex items-center justify-center py-4\">\n        <div class=\"spinner\"></div>\n        <span class=\"ml-3\">Cargando configuración...</span>\n      </div>\n      \n      <div v-else-if=\"loadError\" class=\"bg-red-100 p-4 mb-4 rounded border-l-4 border-red-500\">\n        <p class=\"text-red-700\">{{ loadError }}</p>\n        <button \n          @click=\"loadHospitalPorts\" \n          class=\"mt-3 bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm\"\n        >\n          Reintentar\n        </button>\n      </div>\n      \n      <div v-else-if=\"Object.keys(hospitalPorts).length === 0\" class=\"bg-yellow-100 p-4 mb-4 rounded border-l-4 border-yellow-500\">\n        <p class=\"text-yellow-700\">No se encontraron configuraciones de hospitales en env.json.</p>\n        <p class=\"text-yellow-700 mt-2\">Asegúrese de que el archivo contenga entradas VITE_HOSPITAL_PORT_X.</p>\n      </div>\n      \n      <div v-else>\n        <select \n          v-model=\"selectedPort\" \n          class=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\n        >\n          <option value=\"\" disabled>Seleccione un hospital</option>\n          <option \n            v-for=\"(port, key) in hospitalPorts\" \n            :key=\"key\" \n            :value=\"port\"\n          >\n            Hospital {{ key.split('_')[2] }} (Puerto: {{ port }})\n          </option>\n        </select>\n        \n        <button \n          @click=\"confirmSelection\"\n          class=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg w-full\"\n          :disabled=\"!selectedPort\"\n        >\n          Continuar\n        </button>\n        \n        <div class=\"mt-4 text-sm text-gray-600\">\n          <p>IP del servidor: <strong>{{ serverIP }}</strong></p>\n          <p v-if=\"serverIP === 'No configurada'\" class=\"text-red-600 mt-1\">\n            ¡Advertencia! No se ha configurado VUE_APP_IP en el archivo .env.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HospitalSelector',\n  data() {\n    return {\n      hospitalPorts: {},\n      hospitalSelected: false,\n      selectedPort: '',\n      loading: false,\n      loadError: '',\n      serverIP: process.env.VUE_APP_IP || 'No configurada'\n    };\n  },\n  emits: ['hospital-selected'],\n  mounted() {\n    this.loadHospitalPorts();\n  },\n  methods: {\n    async loadHospitalPorts() {\n      this.loading = true;\n      this.loadError = '';\n      \n      try {\n        const response = await fetch('/env.json');\n        if (!response.ok) {\n          throw new Error(`Error HTTP: ${response.status}`);\n        }\n        \n        const envData = await response.json();\n        \n        // Filter only VITE_HOSPITAL_PORT entries\n        const ports = {};\n        for (const key in envData) {\n          if (key.startsWith('VITE_HOSPITAL_PORT_')) {\n            ports[key] = envData[key];\n          }\n        }\n        \n        this.hospitalPorts = ports;\n        \n        // Si no hay puertos configurados, mostrar error\n        if (Object.keys(ports).length === 0) {\n          this.loadError = \"No se encontraron configuraciones de hospitales en env.json. Agregue al menos una entrada VITE_HOSPITAL_PORT_X.\";\n        }\n      } catch (error) {\n        console.error('Error loading hospital ports:', error);\n        this.loadError = `Error al cargar configuración: ${error.message || 'Error de conexión'}`;\n      } finally {\n        this.loading = false;\n      }\n    },\n    confirmSelection() {\n      if (this.selectedPort) {\n        localStorage.setItem('selectedHospitalPort', this.selectedPort);\n        this.hospitalSelected = true;\n        this.$emit('hospital-selected', this.selectedPort);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.hospital-selector-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n}\n\n.hospital-selector-content {\n  background-color: white;\n  padding: 2rem;\n  border-radius: 8px;\n  max-width: 400px;\n  width: 90%;\n}\n\n.spinner {\n  border: 3px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top: 3px solid #3498db;\n  width: 24px;\n  height: 24px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}