{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport Comentarios from '@/components/Comentarios.vue';\nimport axios from \"axios\";\n//import { useUserStore } from '@/stores/userStore';\n// const userStore = useUserStore();\n\nconst ip = process.env.VUE_APP_IP;\nexport default {\n  name: \"ProductoDetalle\",\n  components: {\n    Comentarios\n  },\n  // Se recibe el id del producto vía props (asegúrate de que el router lo pase correctamente)\n  props: [\"id\"],\n  data() {\n    return {\n      product: null,\n      quantity: 1,\n      productComments: [{\n        idComments: 1,\n        user: {\n          name: 'Juan'\n        },\n        commentText: '¡Muy buen producto!'\n      }, {\n        idComments: 2,\n        user: {\n          name: 'Maria'\n        },\n        commentText: 'Me ayudó mucho, gracias!'\n      }]\n    };\n  },\n  mounted() {\n    const routeId = this.$route.params.id;\n    axios.get(`http://${ip}:8081/api2/medicines`).then(response => {\n      //           console.log(\"Usuario: \",user)\n      const products = response.data;\n      console.log(this.$route.params.id);\n      this.product = products.find(prod => prod.idMedicine === Number(routeId));\n    }).catch(error => {\n      console.error('Error fetching medicines:', error);\n    });\n  },\n  methods: {\n    purchaseProduct() {\n      // Realiza el post con axios; la configuración la dejas como está para luego modificarla si lo deseas\n      axios.post(`http://${ip}:8081/api2/purchase`, {\n        productId: this.product.idMedicine,\n        quantity: this.quantity\n      }).then(response => {\n        console.log('Compra realizada:', response.data);\n      }).catch(error => {\n        console.error('Error en la compra:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Comentarios","axios","ip","process","env","VUE_APP_IP","name","components","props","data","product","quantity","productComments","idComments","user","commentText","mounted","routeId","$route","params","id","get","then","response","products","console","log","find","prod","idMedicine","Number","catch","error","methods","purchaseProduct","post","productId"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/ProductoDetalle.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n    <div>\n      <h1>Detalle del Producto</h1>\n\n      <!-- Si el producto existe, mostramos su información -->\n      <div v-if=\"product\">\n        <div class=\"product-container\" style=\"display: flex;\">\n          <div class=\"product-details\" style=\"flex: 1;\">\n            <h2>{{ product.name }}</h2>\n            <img\n              v-if=\"product.images && product.images.length\"\n              :src=\"product.images[0]\"\n              alt=\"Imagen principal del producto\"\n              style=\"width: 200px; border-radius: 8px;\"\n            />\n            <p><strong>Precio:</strong> Q{{ product.price }}</p>\n            <p><strong>Descripción:</strong> {{ product.description }}</p>\n            <p><strong>Inventario:</strong> {{ product.stock }} unidades</p>\n            <p><strong>Ingrediente Activo:</strong> {{ product.activeMedicament }}</p>\n            <p><strong>Descripción:</strong> {{ product.description }}</p>\n            <p><strong>Concentración:</strong> {{ product.concentration }}</p>\n            <p><strong>Presentación:</strong> {{ product.presentacion }}</p>\n            <p><strong>Marca:</strong> {{ product.brand }}</p>\n          </div>\n          <div class=\"purchase-section\" style=\"margin-left: 20px;\">\n            <label for=\"quantity\">Cantidad:</label>\n            <input\n              type=\"number\"\n              id=\"quantity\"\n              v-model.number=\"quantity\"\n              :min=\"1\"\n              :max=\"product.stock\"\n              style=\"width: 60px; margin-left: 10px;\"\n            />\n            <button\n              @click=\"purchaseProduct\"\n              :disabled=\"!quantity || quantity < 1 || quantity > product.stock\"\n              style=\"margin-left: 10px;\"\n            >\n              Comprar\n            </button>\n          </div>\n        </div>\n        <Comentarios :initialComments=\"productComments\" />\n      </div>\n      <!-- Si no existe el producto, mostramos un mensaje de error -->\n      <div v-else>\n        <p>Producto no encontrado.</p>\n      </div>\n    </div>\n  </template>\n\n  <script>\n  import Comentarios from '@/components/Comentarios.vue';\n  import axios from \"axios\";\n  //import { useUserStore } from '@/stores/userStore';\n // const userStore = useUserStore();\n\n  const ip = process.env.VUE_APP_IP;\n\n  export default {\n    name: \"ProductoDetalle\",\n    components: {\n      Comentarios\n    },\n    // Se recibe el id del producto vía props (asegúrate de que el router lo pase correctamente)\n    props: [\"id\"],\n    data() {\n      return {\n        product: null,\n        quantity: 1,\n        productComments: [\n          { idComments: 1, user: { name: 'Juan' }, commentText: '¡Muy buen producto!' },\n          { idComments: 2, user: { name: 'Maria' }, commentText: 'Me ayudó mucho, gracias!' }\n        ]\n      };\n    },\n    mounted() {\n      const routeId = this.$route.params.id;\n      axios.get(`http://${ip}:8081/api2/medicines`)\n          .then(response => {\n //           console.log(\"Usuario: \",user)\n            const products = response.data;\n            console.log(this.$route.params.id);\n            this.product = products.find(prod => prod.idMedicine === Number(routeId));\n          })\n          .catch(error => {\n            console.error('Error fetching medicines:', error);\n          });\n    },\n    methods: {\n      purchaseProduct() {\n        // Realiza el post con axios; la configuración la dejas como está para luego modificarla si lo deseas\n        axios.post(`http://${ip}:8081/api2/purchase`, {\n          productId: this.product.idMedicine,\n          quantity: this.quantity\n        })\n        .then(response => {\n          console.log('Compra realizada:', response.data);\n        })\n        .catch(error => {\n          console.error('Error en la compra:', error);\n        });\n      }\n    }\n  };\n  </script>\n\n  <style scoped>\n  /* Estilos opcionales */\n  </style>"],"mappings":";;AAsDE,OAAOA,WAAU,MAAO,8BAA8B;AACtD,OAAOC,KAAI,MAAO,OAAO;AACzB;AACD;;AAEC,MAAMC,EAAC,GAAIC,OAAO,CAACC,GAAG,CAACC,UAAU;AAEjC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVP;EACF,CAAC;EACD;EACAQ,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,CAAC;MACXC,eAAe,EAAE,CACf;QAAEC,UAAU,EAAE,CAAC;QAAEC,IAAI,EAAE;UAAER,IAAI,EAAE;QAAO,CAAC;QAAES,WAAW,EAAE;MAAsB,CAAC,EAC7E;QAAEF,UAAU,EAAE,CAAC;QAAEC,IAAI,EAAE;UAAER,IAAI,EAAE;QAAQ,CAAC;QAAES,WAAW,EAAE;MAA2B;IAEtF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IACrCnB,KAAK,CAACoB,GAAG,CAAC,UAAUnB,EAAE,sBAAsB,EACvCoB,IAAI,CAACC,QAAO,IAAK;MAC3B;MACW,MAAMC,QAAO,GAAID,QAAQ,CAACd,IAAI;MAC9BgB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;MAClC,IAAI,CAACV,OAAM,GAAIc,QAAQ,CAACG,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,UAAS,KAAMC,MAAM,CAACb,OAAO,CAAC,CAAC;IAC3E,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;MACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACR,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB;MACAjC,KAAK,CAACkC,IAAI,CAAC,UAAUjC,EAAE,qBAAqB,EAAE;QAC5CkC,SAAS,EAAE,IAAI,CAAC1B,OAAO,CAACmB,UAAU;QAClClB,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC,EACAW,IAAI,CAACC,QAAO,IAAK;QAChBE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACd,IAAI,CAAC;MACjD,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAK;QACdP,OAAO,CAACO,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}