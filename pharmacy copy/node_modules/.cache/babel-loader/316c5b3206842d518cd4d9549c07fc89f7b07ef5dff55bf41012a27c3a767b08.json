{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"purchase-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-section\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"medicine-details\"\n};\nconst _hoisted_4 = {\n  class: \"medicine-header\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"medicine-badge\"\n};\nconst _hoisted_6 = {\n  class: \"medicine-data\"\n};\nconst _hoisted_7 = {\n  class: \"data-grid\"\n};\nconst _hoisted_8 = {\n  class: \"data-item\"\n};\nconst _hoisted_9 = {\n  class: \"value\"\n};\nconst _hoisted_10 = {\n  class: \"data-item\"\n};\nconst _hoisted_11 = {\n  class: \"value\"\n};\nconst _hoisted_12 = {\n  class: \"data-item\"\n};\nconst _hoisted_13 = {\n  class: \"value price\"\n};\nconst _hoisted_14 = {\n  class: \"data-item\"\n};\nconst _hoisted_15 = {\n  class: \"value\"\n};\nconst _hoisted_16 = {\n  class: \"data-item\"\n};\nconst _hoisted_17 = {\n  class: \"value total\"\n};\nconst _hoisted_18 = {\n  class: \"card-icon\"\n};\nconst _hoisted_19 = {\n  class: \"card-content\"\n};\nconst _hoisted_20 = {\n  key: 0\n};\nconst _hoisted_21 = {\n  key: 1\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"prescription-section\"\n};\nconst _hoisted_23 = {\n  class: \"prescription-container\"\n};\nconst _hoisted_24 = {\n  class: \"prescription-list\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"loading-recipes\"\n};\nconst _hoisted_26 = {\n  key: 1,\n  class: \"no-recipes\"\n};\nconst _hoisted_27 = {\n  class: \"prescription-input\"\n};\nconst _hoisted_28 = {\n  key: 2\n};\nconst _hoisted_29 = [\"onClick\"];\nconst _hoisted_30 = {\n  class: \"recipe-header\"\n};\nconst _hoisted_31 = {\n  class: \"recipe-code\"\n};\nconst _hoisted_32 = {\n  class: \"recipe-date\"\n};\nconst _hoisted_33 = {\n  class: \"recipe-doctor\"\n};\nconst _hoisted_34 = {\n  class: \"prescription-detail\"\n};\nconst _hoisted_35 = {\n  key: 0,\n  class: \"recipe-detail-content\"\n};\nconst _hoisted_36 = {\n  class: \"recipe-info\"\n};\nconst _hoisted_37 = {\n  key: 0\n};\nconst _hoisted_38 = {\n  class: \"medicine-list\"\n};\nconst _hoisted_39 = {\n  key: 0\n};\nconst _hoisted_40 = {\n  key: 1\n};\nconst _hoisted_41 = {\n  key: 2,\n  class: \"calculation-details\"\n};\nconst _hoisted_42 = {\n  class: \"calculation-text\"\n};\nconst _hoisted_43 = {\n  class: \"calculation-text\"\n};\nconst _hoisted_44 = {\n  class: \"recipe-actions\"\n};\nconst _hoisted_45 = [\"disabled\"];\nconst _hoisted_46 = {\n  key: 1,\n  class: \"no-recipe-selected\"\n};\nconst _hoisted_47 = {\n  class: \"card-icon\"\n};\nconst _hoisted_48 = {\n  class: \"card-content\"\n};\nconst _hoisted_49 = {\n  key: 0\n};\nconst _hoisted_50 = {\n  key: 1\n};\nconst _hoisted_51 = {\n  class: \"payment-summary\"\n};\nconst _hoisted_52 = {\n  class: \"summary-item\"\n};\nconst _hoisted_53 = {\n  key: 0,\n  class: \"summary-item discount\"\n};\nconst _hoisted_54 = {\n  class: \"summary-item total\"\n};\nconst _hoisted_55 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_56 = [\"disabled\"];\nconst _hoisted_57 = {\n  key: 2,\n  class: \"error-container\"\n};\nconst _hoisted_58 = {\n  key: 3,\n  class: \"modal-overlay\"\n};\nconst _hoisted_59 = {\n  class: \"modal-content detail-modal\"\n};\nconst _hoisted_60 = {\n  key: 0,\n  class: \"detail-content\"\n};\nconst _hoisted_61 = {\n  class: \"detail-section\"\n};\nconst _hoisted_62 = {\n  class: \"detail-info\"\n};\nconst _hoisted_63 = {\n  class: \"detail-section\"\n};\nconst _hoisted_64 = {\n  class: \"detail-info\"\n};\nconst _hoisted_65 = {\n  key: 0\n};\nconst _hoisted_66 = {\n  key: 0,\n  class: \"detail-section\"\n};\nconst _hoisted_67 = {\n  class: \"detail-info\"\n};\nconst _hoisted_68 = {\n  key: 0,\n  class: \"calculation-details\"\n};\nconst _hoisted_69 = {\n  class: \"calculation-text\"\n};\nconst _hoisted_70 = {\n  class: \"calculation-text\"\n};\nconst _hoisted_71 = {\n  key: 1,\n  class: \"detail-section\"\n};\nconst _hoisted_72 = {\n  class: \"detail-section\"\n};\nconst _hoisted_73 = {\n  class: \"detail-info\"\n};\nconst _hoisted_74 = {\n  key: 0\n};\nconst _hoisted_75 = {\n  key: 1,\n  class: \"detail-content\"\n};\nconst _hoisted_76 = {\n  class: \"modal-actions\"\n};\nconst _hoisted_77 = [\"disabled\"];\nconst _hoisted_78 = {\n  key: 4,\n  class: \"modal-overlay\"\n};\nconst _hoisted_79 = {\n  class: \"modal-content\"\n};\nconst _hoisted_80 = {\n  class: \"confirmation-details\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Hospital Selector \"), _createVNode($setup[\"HospitalSelector\"], {\n    onHospitalSelected: $setup.onHospitalSelected\n  }), _cache[59] || (_cache[59] = _createElementVNode(\"div\", {\n    class: \"purchase-header\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"purchase-title\"\n  }, \"Verificación de Compra\"), _createElementVNode(\"p\", {\n    class: \"purchase-subtitle\"\n  }, \"Revisando disponibilidad y requisitos\")], -1 /* HOISTED */)), _createCommentVNode(\" Datos del medicamento \"), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Verificando información...\", -1 /* HOISTED */)]))) : $setup.medicine ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString($setup.medicine.name), 1 /* TEXT */), $setup.medicine.prescription ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"Requiere receta médica\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Principio Activo:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.medicine.activeMedicament), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Presentación:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_11, _toDisplayString($setup.medicine.presentacion), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Precio Unitario:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_13, \"Q\" + _toDisplayString($setup.medicine.price.toFixed(2)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_14, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Cantidad (paquetes):\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_15, _toDisplayString($setup.quantity), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Total:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_17, \"Q\" + _toDisplayString(($setup.medicine.price * $setup.quantity).toFixed(2)), 1 /* TEXT */)])])]), _createCommentVNode(\" Verificación de stock \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"verification-card stock-card\", {\n      'status-success': $setup.hasStock,\n      'status-error': !$setup.hasStock\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_18, _toDisplayString($setup.hasStock ? '✓' : '✗'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_19, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"Verificación de Stock\", -1 /* HOISTED */)), $setup.hasStock ? (_openBlock(), _createElementBlock(\"p\", _hoisted_20, \" Hay suficiente stock disponible (\" + _toDisplayString($setup.medicine.stock) + \" unidades) \", 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_21, \" No hay suficiente stock disponible. Solo quedan \" + _toDisplayString($setup.medicine.stock) + \" unidades. \", 1 /* TEXT */))])], 2 /* CLASS */), _createCommentVNode(\" Verificación de receta médica \"), $setup.medicine.prescription ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_cache[21] || (_cache[21] = _createElementVNode(\"h3\", null, \"Recetas Médicas Disponibles\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_23, [_createCommentVNode(\" Lista de recetas a la izquierda \"), _createElementVNode(\"div\", _hoisted_24, [$setup.isPrescriptionPending ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, _cache[7] || (_cache[7] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner-small\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Cargando recetas...\", -1 /* HOISTED */)]))) : !$setup.userRecipes || $setup.userRecipes.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_cache[10] || (_cache[10] = _createElementVNode(\"p\", null, \"No se encontraron recetas disponibles\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: $setup.recargarRecetas,\n    class: \"reload-button\"\n  }, _cache[8] || (_cache[8] = [_createElementVNode(\"span\", {\n    class: \"reload-icon\"\n  }, \"⟳\", -1 /* HOISTED */), _createTextVNode(\" Recargar recetas \")])), _createElementVNode(\"div\", _hoisted_27, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"prescription\"\n  }, \"Adjuntar nueva receta:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"prescription\",\n    onChange: $setup.handlePrescriptionUpload\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: $setup.verifyPrescription,\n    class: \"verify-button\"\n  }, \"Verificar receta\")])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"div\", {\n    class: \"recipe-actions top\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.recargarRecetas,\n    class: \"reload-button small\"\n  }, _cache[11] || (_cache[11] = [_createElementVNode(\"span\", {\n    class: \"reload-icon\"\n  }, \"⟳\", -1 /* HOISTED */), _createTextVNode(\" Actualizar \")]))]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.userRecipes, recipe => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: recipe._id,\n      class: _normalizeClass([\"recipe-item\", {\n        'active': $setup.selectedRecipe && $setup.selectedRecipe._id === recipe._id\n      }]),\n      onClick: $event => $setup.forceSelectRecipe(recipe)\n    }, [_createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"span\", _hoisted_31, _toDisplayString(recipe.formatted_code), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_32, _toDisplayString(recipe.formatted_date), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_33, \"Dr. \" + _toDisplayString(recipe.doctor), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_29);\n  }), 128 /* KEYED_FRAGMENT */))]))]), _createCommentVNode(\" Detalle de la receta a la derecha \"), _createElementVNode(\"div\", _hoisted_34, [$setup.selectedRecipe ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_cache[18] || (_cache[18] = _createElementVNode(\"h4\", null, \"Detalle de la Receta\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"p\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"strong\", null, \"Código:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedRecipe.formatted_code), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"strong\", null, \"Fecha:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedRecipe.formatted_date), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"strong\", null, \"Doctor:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedRecipe.doctor), 1 /* TEXT */)]), $setup.selectedRecipe.special_notes ? (_openBlock(), _createElementBlock(\"p\", _hoisted_37, [_cache[15] || (_cache[15] = _createElementVNode(\"strong\", null, \"Notas:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedRecipe.special_notes), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _cache[19] || (_cache[19] = _createElementVNode(\"h4\", null, \"Medicamentos recetados:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_38, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selectedRecipe.medicines, (med, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"medicine-item\", {\n        'matching-medicine': $setup.medicine && med.principioActivo === $setup.medicine.activeMedicament\n      }])\n    }, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(med.principioActivo), 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(med.concentracion), 1 /* TEXT */)]), med.presentacion ? (_openBlock(), _createElementBlock(\"p\", _hoisted_39, \"Presentación: \" + _toDisplayString(med.presentacion), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, \"Dosis: \" + _toDisplayString(med.dosis) + \" unidades | Frecuencia: \" + _toDisplayString(med.frecuencia) + \" veces al día | Duración: \" + _toDisplayString(med.duracion) + \" días\", 1 /* TEXT */), med.diagnostico ? (_openBlock(), _createElementBlock(\"p\", _hoisted_40, \"Diagnóstico: \" + _toDisplayString(med.diagnostico), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.medicine && med.principioActivo === $setup.medicine.activeMedicament ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, [_createElementVNode(\"p\", _hoisted_42, [_cache[16] || (_cache[16] = _createElementVNode(\"strong\", null, \"Cálculo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(med.dosis) + \" unidades × \" + _toDisplayString(med.frecuencia) + \" veces/día × \" + _toDisplayString(med.duracion) + \" días = \", 1 /* TEXT */), _createElementVNode(\"strong\", null, _toDisplayString(parseInt(med.dosis) * parseInt(med.frecuencia) * parseInt(med.duracion)) + \" unidades totales\", 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_43, [_cache[17] || (_cache[17] = _createElementVNode(\"strong\", null, \"Paquetes necesarios:\", -1 /* HOISTED */)), _createTextVNode(\" ⌈\" + _toDisplayString(parseInt(med.dosis) * parseInt(med.frecuencia) * parseInt(med.duracion)) + \" ÷ \" + _toDisplayString($setup.medicine.presentacion) + \"⌉ = \", 1 /* TEXT */), _createElementVNode(\"strong\", null, _toDisplayString(Math.ceil(parseInt(med.dosis) * parseInt(med.frecuencia) * parseInt(med.duracion) / $setup.medicine.presentacion)) + \" paquete(s)\", 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_44, [_createElementVNode(\"button\", {\n    onClick: $setup.useSelectedRecipe,\n    class: \"use-recipe-button\",\n    disabled: !$setup.canUseSelectedRecipe\n  }, \" Usar esta receta \", 8 /* PROPS */, _hoisted_45)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_46, _cache[20] || (_cache[20] = [_createElementVNode(\"p\", null, \"Seleccione una receta para ver detalles\", -1 /* HOISTED */)])))])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Verificación de seguro \"), $setup.userStore.user ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass([\"verification-card insurance-card\", {\n      'status-success': $setup.hasInsurance,\n      'status-neutral': !$setup.hasInsurance\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_47, _toDisplayString($setup.hasInsurance ? '✓' : 'ⓘ'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_48, [_cache[22] || (_cache[22] = _createElementVNode(\"h3\", null, \"Seguro Médico\", -1 /* HOISTED */)), $setup.hasInsurance ? (_openBlock(), _createElementBlock(\"p\", _hoisted_49, \" Su seguro médico cubrirá \" + _toDisplayString($setup.coveragePercentage) + \"% del costo \", 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_50, \" No se detectó seguro médico. Pagará el precio completo. \"))])], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Resumen de pago \"), _createElementVNode(\"div\", _hoisted_51, [_cache[25] || (_cache[25] = _createElementVNode(\"h3\", null, \"Resumen de Pago\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_52, [_cache[23] || (_cache[23] = _createElementVNode(\"span\", null, \"Subtotal:\", -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"Q\" + _toDisplayString(($setup.medicine.price * $setup.quantity).toFixed(2)), 1 /* TEXT */)]), $setup.hasInsurance ? (_openBlock(), _createElementBlock(\"div\", _hoisted_53, [_createElementVNode(\"span\", null, \"Cobertura del seguro (\" + _toDisplayString($setup.coveragePercentage) + \"%):\", 1 /* TEXT */), _createElementVNode(\"span\", null, \"-Q\" + _toDisplayString(($setup.medicine.price * $setup.quantity * ($setup.coveragePercentage / 100)).toFixed(2)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_54, [_cache[24] || (_cache[24] = _createElementVNode(\"span\", null, \"Total a pagar:\", -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"Q\" + _toDisplayString($setup.calculateTotalToPay().toFixed(2)), 1 /* TEXT */)])]), _createCommentVNode(\" Botones de acción \"), _createElementVNode(\"div\", _hoisted_55, [_createElementVNode(\"button\", {\n    onClick: $setup.goBack,\n    class: \"cancel-button\"\n  }, \"Cancelar\"), _createElementVNode(\"button\", {\n    onClick: $setup.viewDetail,\n    class: \"detail-button\"\n  }, \"Ver Detalle\"), _createElementVNode(\"button\", {\n    onClick: $setup.confirmPurchase,\n    class: \"confirm-button\",\n    disabled: !$setup.canConfirmPurchase\n  }, \" Confirmar Compra \", 8 /* PROPS */, _hoisted_56)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_57, [_cache[26] || (_cache[26] = _createElementVNode(\"h2\", null, \"Producto no encontrado\", -1 /* HOISTED */)), _cache[27] || (_cache[27] = _createElementVNode(\"p\", null, \"No se pudo encontrar el medicamento solicitado.\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: $setup.goBack,\n    class: \"back-button\"\n  }, \"Volver al catálogo\")])), _createCommentVNode(\" Modal de detalle de compra \"), $setup.showDetailModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_58, [_createElementVNode(\"div\", _hoisted_59, [_createElementVNode(\"div\", {\n    class: \"modal-header\"\n  }, [_cache[28] || (_cache[28] = _createElementVNode(\"h3\", null, \"Detalle de la Compra\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: $setup.closeDetailModal,\n    class: \"close-icon\"\n  }, \"×\")]), $setup.medicine ? (_openBlock(), _createElementBlock(\"div\", _hoisted_60, [_createElementVNode(\"div\", _hoisted_61, [_cache[33] || (_cache[33] = _createElementVNode(\"h4\", null, \"Medicamento\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_62, [_createElementVNode(\"p\", null, [_cache[29] || (_cache[29] = _createElementVNode(\"strong\", null, \"Nombre:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.medicine.name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[30] || (_cache[30] = _createElementVNode(\"strong\", null, \"Principio Activo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.medicine.activeMedicament), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[31] || (_cache[31] = _createElementVNode(\"strong\", null, \"Presentación:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.medicine.presentacion), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[32] || (_cache[32] = _createElementVNode(\"strong\", null, \"Precio Unitario:\", -1 /* HOISTED */)), _createTextVNode(\" Q\" + _toDisplayString($setup.medicine.price.toFixed(2)), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_63, [_cache[38] || (_cache[38] = _createElementVNode(\"h4\", null, \"Detalles de la Compra\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_64, [_createElementVNode(\"p\", null, [_cache[34] || (_cache[34] = _createElementVNode(\"strong\", null, \"Cantidad (paquetes):\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.quantity), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[35] || (_cache[35] = _createElementVNode(\"strong\", null, \"Subtotal:\", -1 /* HOISTED */)), _createTextVNode(\" Q\" + _toDisplayString(($setup.medicine.price * $setup.quantity).toFixed(2)), 1 /* TEXT */)]), $setup.hasInsurance ? (_openBlock(), _createElementBlock(\"p\", _hoisted_65, [_cache[36] || (_cache[36] = _createElementVNode(\"strong\", null, \"Descuento Seguro:\", -1 /* HOISTED */)), _createTextVNode(\" Q\" + _toDisplayString(($setup.medicine.price * $setup.quantity * ($setup.coveragePercentage / 100)).toFixed(2)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_cache[37] || (_cache[37] = _createElementVNode(\"strong\", null, \"Total a Pagar:\", -1 /* HOISTED */)), _createTextVNode(\" Q\" + _toDisplayString($setup.calculateTotalToPay().toFixed(2)), 1 /* TEXT */)])])]), $setup.selectedRecipe ? (_openBlock(), _createElementBlock(\"div\", _hoisted_66, [_cache[44] || (_cache[44] = _createElementVNode(\"h4\", null, \"Receta Médica Utilizada\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_67, [_createElementVNode(\"p\", null, [_cache[39] || (_cache[39] = _createElementVNode(\"strong\", null, \"Código:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedRecipe.formatted_code), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[40] || (_cache[40] = _createElementVNode(\"strong\", null, \"Fecha:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedRecipe.formatted_date), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[41] || (_cache[41] = _createElementVNode(\"strong\", null, \"Doctor:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.selectedRecipe.doctor), 1 /* TEXT */)]), $setup.medicineMatch ? (_openBlock(), _createElementBlock(\"div\", _hoisted_68, [_createElementVNode(\"p\", _hoisted_69, [_cache[42] || (_cache[42] = _createElementVNode(\"strong\", null, \"Cálculo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.medicineMatch.dosis) + \" unidades × \" + _toDisplayString($setup.medicineMatch.frecuencia) + \" veces/día × \" + _toDisplayString($setup.medicineMatch.duracion) + \" días = \", 1 /* TEXT */), _createElementVNode(\"strong\", null, _toDisplayString(parseInt($setup.medicineMatch.dosis) * parseInt($setup.medicineMatch.frecuencia) * parseInt($setup.medicineMatch.duracion)) + \" unidades totales\", 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_70, [_cache[43] || (_cache[43] = _createElementVNode(\"strong\", null, \"Paquetes necesarios:\", -1 /* HOISTED */)), _createTextVNode(\" ⌈\" + _toDisplayString(parseInt($setup.medicineMatch.dosis) * parseInt($setup.medicineMatch.frecuencia) * parseInt($setup.medicineMatch.duracion)) + \" ÷ \" + _toDisplayString($setup.medicine.presentacion) + \"⌉ = \", 1 /* TEXT */), _createElementVNode(\"strong\", null, _toDisplayString(Math.ceil(parseInt($setup.medicineMatch.dosis) * parseInt($setup.medicineMatch.frecuencia) * parseInt($setup.medicineMatch.duracion) / $setup.medicine.presentacion)) + \" paquete(s)\", 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])])) : $setup.medicine.prescription ? (_openBlock(), _createElementBlock(\"div\", _hoisted_71, _cache[45] || (_cache[45] = [_createElementVNode(\"h4\", null, \"Receta Médica\", -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"detail-info\"\n  }, [_createElementVNode(\"p\", {\n    class: \"status-warning\"\n  }, \"Se requiere receta, pero no se ha seleccionado ninguna.\")], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_72, [_cache[52] || (_cache[52] = _createElementVNode(\"h4\", null, \"Estado de la Compra\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_73, [_createElementVNode(\"p\", null, [_cache[46] || (_cache[46] = _createElementVNode(\"strong\", null, \"Stock disponible:\", -1 /* HOISTED */)), _cache[47] || (_cache[47] = _createTextVNode()), _createElementVNode(\"span\", {\n    class: _normalizeClass($setup.hasStock ? 'status-ok' : 'status-error')\n  }, _toDisplayString($setup.hasStock ? 'Sí' : 'No'), 3 /* TEXT, CLASS */)]), $setup.medicine.prescription ? (_openBlock(), _createElementBlock(\"p\", _hoisted_74, [_cache[48] || (_cache[48] = _createElementVNode(\"strong\", null, \"Receta médica:\", -1 /* HOISTED */)), _cache[49] || (_cache[49] = _createTextVNode()), _createElementVNode(\"span\", {\n    class: _normalizeClass($setup.hasPrescription ? 'status-ok' : 'status-pending')\n  }, _toDisplayString($setup.hasPrescription ? 'Validada' : 'Pendiente/No seleccionada'), 3 /* TEXT, CLASS */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_cache[50] || (_cache[50] = _createElementVNode(\"strong\", null, \"Seguro médico:\", -1 /* HOISTED */)), _cache[51] || (_cache[51] = _createTextVNode()), _createElementVNode(\"span\", {\n    class: _normalizeClass($setup.hasInsurance ? 'status-ok' : 'status-info')\n  }, _toDisplayString($setup.hasInsurance ? `Cobertura del ${$setup.coveragePercentage}%` : 'No disponible'), 3 /* TEXT, CLASS */)])])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_75, _cache[53] || (_cache[53] = [_createElementVNode(\"p\", null, \"Cargando detalles...\", -1 /* HOISTED */)]))), _createElementVNode(\"div\", _hoisted_76, [_createElementVNode(\"button\", {\n    onClick: $setup.closeDetailModal,\n    class: \"cancel-button\"\n  }, \"Cerrar\"), _createElementVNode(\"button\", {\n    onClick: $setup.confirmPurchase,\n    class: \"confirm-button\",\n    disabled: !$setup.canConfirmPurchase\n  }, \" Confirmar Compra \", 8 /* PROPS */, _hoisted_77)])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Modal de confirmación \"), $setup.showConfirmationModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_78, [_createElementVNode(\"div\", _hoisted_79, [_cache[57] || (_cache[57] = _createElementVNode(\"h3\", null, \"¡Compra Exitosa!\", -1 /* HOISTED */)), _cache[58] || (_cache[58] = _createElementVNode(\"p\", null, \"Su compra ha sido procesada correctamente.\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_80, [_createElementVNode(\"p\", null, [_cache[54] || (_cache[54] = _createElementVNode(\"strong\", null, \"Medicamento:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.medicine?.name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[55] || (_cache[55] = _createElementVNode(\"strong\", null, \"Cantidad:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.quantity), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[56] || (_cache[56] = _createElementVNode(\"strong\", null, \"Total pagado:\", -1 /* HOISTED */)), _createTextVNode(\" Q\" + _toDisplayString($setup.calculateTotalToPay().toFixed(2)), 1 /* TEXT */)])]), _createElementVNode(\"button\", {\n    onClick: $setup.finishPurchase,\n    class: \"finish-button\"\n  }, \"Continuar\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","$setup","onHospitalSelected","_createElementVNode","isLoading","_hoisted_2","_cache","medicine","_hoisted_3","_hoisted_4","_toDisplayString","name","prescription","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","activeMedicament","_hoisted_10","_hoisted_11","presentacion","_hoisted_12","_hoisted_13","price","toFixed","_hoisted_14","_hoisted_15","quantity","_hoisted_16","_hoisted_17","_normalizeClass","hasStock","_hoisted_18","_hoisted_19","_hoisted_20","stock","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","isPrescriptionPending","_hoisted_25","userRecipes","length","_hoisted_26","onClick","recargarRecetas","_createTextVNode","_hoisted_27","for","type","id","onChange","handlePrescriptionUpload","verifyPrescription","_hoisted_28","_Fragment","_renderList","recipe","_id","selectedRecipe","$event","forceSelectRecipe","_hoisted_30","_hoisted_31","formatted_code","_hoisted_32","formatted_date","_hoisted_33","doctor","_hoisted_29","_hoisted_34","_hoisted_35","_hoisted_36","special_notes","_hoisted_37","_hoisted_38","medicines","med","index","principioActivo","concentracion","_hoisted_39","dosis","frecuencia","duracion","diagnostico","_hoisted_40","_hoisted_41","_hoisted_42","parseInt","_hoisted_43","Math","ceil","_hoisted_44","useSelectedRecipe","disabled","canUseSelectedRecipe","_hoisted_45","_hoisted_46","userStore","user","hasInsurance","_hoisted_47","_hoisted_48","_hoisted_49","coveragePercentage","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","calculateTotalToPay","_hoisted_55","goBack","viewDetail","confirmPurchase","canConfirmPurchase","_hoisted_56","_hoisted_57","showDetailModal","_hoisted_58","_hoisted_59","closeDetailModal","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","medicineMatch","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","hasPrescription","_hoisted_75","_hoisted_76","_hoisted_77","showConfirmationModal","_hoisted_78","_hoisted_79","_hoisted_80","finishPurchase"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/VerificarCompra.vue"],"sourcesContent":["<template>\n  <div class=\"purchase-container\">\n    <!-- Hospital Selector -->\n    <HospitalSelector @hospital-selected=\"onHospitalSelected\" />\n\n    <div class=\"purchase-header\">\n      <h1 class=\"purchase-title\">Verificación de Compra</h1>\n      <p class=\"purchase-subtitle\">Revisando disponibilidad y requisitos</p>\n    </div>\n\n    <!-- Datos del medicamento -->\n    <div v-if=\"isLoading\" class=\"loading-section\">\n      <div class=\"loading-spinner\"></div>\n      <p>Verificando información...</p>\n    </div>\n\n    <div v-else-if=\"medicine\" class=\"medicine-details\">\n      <div class=\"medicine-header\">\n        <h2>{{ medicine.name }}</h2>\n        <span class=\"medicine-badge\" v-if=\"medicine.prescription\">Requiere receta médica</span>\n      </div>\n\n      <div class=\"medicine-data\">\n        <div class=\"data-grid\">\n          <div class=\"data-item\">\n            <span class=\"label\">Principio Activo:</span>\n            <span class=\"value\">{{ medicine.activeMedicament }}</span>\n          </div>\n          <div class=\"data-item\">\n            <span class=\"label\">Presentación:</span>\n            <span class=\"value\">{{ medicine.presentacion }}</span>\n          </div>\n          <div class=\"data-item\">\n            <span class=\"label\">Precio Unitario:</span>\n            <span class=\"value price\">Q{{ medicine.price.toFixed(2) }}</span>\n          </div>\n          <div class=\"data-item\">\n            <span class=\"label\">Cantidad (paquetes):</span>\n            <span class=\"value\">{{ quantity }}</span>\n          </div>\n          <div class=\"data-item\">\n            <span class=\"label\">Total:</span>\n            <span class=\"value total\">Q{{ (medicine.price * quantity).toFixed(2) }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Verificación de stock -->\n      <div class=\"verification-card stock-card\" :class=\"{ 'status-success': hasStock, 'status-error': !hasStock }\">\n        <div class=\"card-icon\">{{ hasStock ? '✓' : '✗' }}</div>\n        <div class=\"card-content\">\n          <h3>Verificación de Stock</h3>\n          <p v-if=\"hasStock\">\n            Hay suficiente stock disponible ({{ medicine.stock }} unidades)\n          </p>\n          <p v-else>\n            No hay suficiente stock disponible. Solo quedan {{ medicine.stock }} unidades.\n          </p>\n        </div>\n      </div>\n\n      <!-- Verificación de receta médica -->\n      <div v-if=\"medicine.prescription\" class=\"prescription-section\">\n        <h3>Recetas Médicas Disponibles</h3>\n         <div class=\"prescription-container\">\n            <!-- Lista de recetas a la izquierda -->\n            <div class=\"prescription-list\">\n              <div v-if=\"isPrescriptionPending\" class=\"loading-recipes\">\n                <div class=\"loading-spinner-small\"></div>\n                <p>Cargando recetas...</p>\n              </div>\n              \n              <div v-else-if=\"!userRecipes || userRecipes.length === 0\" class=\"no-recipes\">\n                <p>No se encontraron recetas disponibles</p>\n                <button @click=\"recargarRecetas\" class=\"reload-button\">\n                  <span class=\"reload-icon\">⟳</span> Recargar recetas\n                </button>\n                <div class=\"prescription-input\">\n                  <label for=\"prescription\">Adjuntar nueva receta:</label>\n                  <input type=\"file\" id=\"prescription\" @change=\"handlePrescriptionUpload\" />\n                  <button @click=\"verifyPrescription\" class=\"verify-button\">Verificar receta</button>\n                </div>\n              </div>\n              \n              <div v-else>\n                <div class=\"recipe-actions top\">\n                  <button @click=\"recargarRecetas\" class=\"reload-button small\">\n                    <span class=\"reload-icon\">⟳</span> Actualizar\n                  </button>\n                </div>\n                <div \n                  v-for=\"recipe in userRecipes\" \n                  :key=\"recipe._id\" \n                  class=\"recipe-item\"\n                  :class=\"{ 'active': selectedRecipe && selectedRecipe._id === recipe._id }\"\n                  @click=\"forceSelectRecipe(recipe)\"\n                >\n                  <div class=\"recipe-header\">\n                    <span class=\"recipe-code\">{{ recipe.formatted_code }}</span>\n                    <span class=\"recipe-date\">{{ recipe.formatted_date }}</span>\n                  </div>\n                  <div class=\"recipe-doctor\">Dr. {{ recipe.doctor }}</div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Detalle de la receta a la derecha -->\n            <div class=\"prescription-detail\">\n              <div v-if=\"selectedRecipe\" class=\"recipe-detail-content\">\n                <h4>Detalle de la Receta</h4>\n                <div class=\"recipe-info\">\n                  <p><strong>Código:</strong> {{ selectedRecipe.formatted_code }}</p>\n                  <p><strong>Fecha:</strong> {{ selectedRecipe.formatted_date }}</p>\n                  <p><strong>Doctor:</strong> {{ selectedRecipe.doctor }}</p>\n                  <p v-if=\"selectedRecipe.special_notes\"><strong>Notas:</strong> {{ selectedRecipe.special_notes }}</p>\n                </div>\n                \n                <h4>Medicamentos recetados:</h4>\n                <div class=\"medicine-list\">\n                  <div v-for=\"(med, index) in selectedRecipe.medicines\" :key=\"index\" class=\"medicine-item\"\n                       :class=\"{'matching-medicine': medicine && med.principioActivo === medicine.activeMedicament}\">\n                    <p><strong>{{ med.principioActivo }}</strong> {{ med.concentracion }}</p>\n                    <p v-if=\"med.presentacion\">Presentación: {{ med.presentacion }}</p>\n                    <p>Dosis: {{ med.dosis }} unidades | Frecuencia: {{ med.frecuencia }} veces al día | Duración: {{ med.duracion }} días</p>\n                    <p v-if=\"med.diagnostico\">Diagnóstico: {{ med.diagnostico }}</p>\n                    <div v-if=\"medicine && med.principioActivo === medicine.activeMedicament\" class=\"calculation-details\">\n                      <p class=\"calculation-text\">\n                        <strong>Cálculo:</strong> \n                        {{ med.dosis }} unidades × \n                        {{ med.frecuencia }} veces/día × \n                        {{ med.duracion }} días = \n                        <strong>{{ parseInt(med.dosis) * parseInt(med.frecuencia) * parseInt(med.duracion) }} unidades totales</strong>\n                      </p>\n                      <p class=\"calculation-text\">\n                        <strong>Paquetes necesarios:</strong> \n                        ⌈{{ parseInt(med.dosis) * parseInt(med.frecuencia) * parseInt(med.duracion) }} \n                        ÷ {{ medicine.presentacion }}⌉ = \n                        <strong>{{ Math.ceil((parseInt(med.dosis) * parseInt(med.frecuencia) * parseInt(med.duracion)) / medicine.presentacion) }} paquete(s)</strong>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"recipe-actions\">\n                  <button \n                    @click=\"useSelectedRecipe\" \n                    class=\"use-recipe-button\"\n                    :disabled=\"!canUseSelectedRecipe\"\n                  >\n                    Usar esta receta\n                  </button>\n                </div>\n              </div>\n              \n              <div v-else class=\"no-recipe-selected\">\n                <p>Seleccione una receta para ver detalles</p>\n              </div>\n            </div>\n          </div>\n      </div>\n\n      <!-- Verificación de seguro -->\n      <div v-if=\"userStore.user\" class=\"verification-card insurance-card\" :class=\"{ 'status-success': hasInsurance, 'status-neutral': !hasInsurance }\">\n        <div class=\"card-icon\">{{ hasInsurance ? '✓' : 'ⓘ' }}</div>\n        <div class=\"card-content\">\n          <h3>Seguro Médico</h3>\n          <p v-if=\"hasInsurance\">\n            Su seguro médico cubrirá {{ coveragePercentage }}% del costo\n          </p>\n          <p v-else>\n            No se detectó seguro médico. Pagará el precio completo.\n          </p>\n        </div>\n      </div>\n\n      <!-- Resumen de pago -->\n      <div class=\"payment-summary\">\n        <h3>Resumen de Pago</h3>\n        <div class=\"summary-item\">\n          <span>Subtotal:</span>\n          <span>Q{{ (medicine.price * quantity).toFixed(2) }}</span>\n        </div>\n        <div v-if=\"hasInsurance\" class=\"summary-item discount\">\n          <span>Cobertura del seguro ({{ coveragePercentage }}%):</span>\n          <span>-Q{{ ((medicine.price * quantity) * (coveragePercentage / 100)).toFixed(2) }}</span>\n        </div>\n        <div class=\"summary-item total\">\n          <span>Total a pagar:</span>\n          <span>Q{{ calculateTotalToPay().toFixed(2) }}</span>\n        </div>\n      </div>\n\n      <!-- Botones de acción -->\n      <div class=\"action-buttons\">\n        <button @click=\"goBack\" class=\"cancel-button\">Cancelar</button>\n        <button @click=\"viewDetail\" class=\"detail-button\">Ver Detalle</button>\n        <button \n          @click=\"confirmPurchase\" \n          class=\"confirm-button\"\n          :disabled=\"!canConfirmPurchase\" \n        >\n          Confirmar Compra\n        </button>\n      </div>\n    </div>\n\n    <div v-else class=\"error-container\">\n      <h2>Producto no encontrado</h2>\n      <p>No se pudo encontrar el medicamento solicitado.</p>\n      <button @click=\"goBack\" class=\"back-button\">Volver al catálogo</button>\n    </div>\n\n    <!-- Modal de detalle de compra -->\n    <div v-if=\"showDetailModal\" class=\"modal-overlay\">\n      <div class=\"modal-content detail-modal\">\n          <div class=\"modal-header\">\n            <h3>Detalle de la Compra</h3>\n            <button @click=\"closeDetailModal\" class=\"close-icon\">&times;</button>\n          </div>\n          \n          <div class=\"detail-content\" v-if=\"medicine\"> \n            <div class=\"detail-section\">\n              <h4>Medicamento</h4>\n              <div class=\"detail-info\">\n                <p><strong>Nombre:</strong> {{ medicine.name }}</p>\n                <p><strong>Principio Activo:</strong> {{ medicine.activeMedicament }}</p>\n                <p><strong>Presentación:</strong> {{ medicine.presentacion }}</p>\n                <p><strong>Precio Unitario:</strong> Q{{ medicine.price.toFixed(2) }}</p>\n              </div>\n            </div>\n            \n            <div class=\"detail-section\">\n              <h4>Detalles de la Compra</h4>\n              <div class=\"detail-info\">\n                <p><strong>Cantidad (paquetes):</strong> {{ quantity }}</p>\n                <p><strong>Subtotal:</strong> Q{{ (medicine.price * quantity).toFixed(2) }}</p>\n                <p v-if=\"hasInsurance\"><strong>Descuento Seguro:</strong> Q{{ ((medicine.price * quantity) * (coveragePercentage / 100)).toFixed(2) }}</p>\n                <p><strong>Total a Pagar:</strong> Q{{ calculateTotalToPay().toFixed(2) }}</p>\n              </div>\n            </div>\n            \n            <div v-if=\"selectedRecipe\" class=\"detail-section\">\n              <h4>Receta Médica Utilizada</h4>\n              <div class=\"detail-info\">\n                <p><strong>Código:</strong> {{ selectedRecipe.formatted_code }}</p>\n                <p><strong>Fecha:</strong> {{ selectedRecipe.formatted_date }}</p>\n                <p><strong>Doctor:</strong> {{ selectedRecipe.doctor }}</p>\n                <div v-if=\"medicineMatch\" class=\"calculation-details\">\n                  <p class=\"calculation-text\">\n                    <strong>Cálculo:</strong> \n                    {{ medicineMatch.dosis }} unidades × \n                    {{ medicineMatch.frecuencia }} veces/día × \n                    {{ medicineMatch.duracion }} días = \n                    <strong>{{ parseInt(medicineMatch.dosis) * parseInt(medicineMatch.frecuencia) * parseInt(medicineMatch.duracion) }} unidades totales</strong>\n                  </p>\n                  <p class=\"calculation-text\">\n                    <strong>Paquetes necesarios:</strong> \n                    ⌈{{ parseInt(medicineMatch.dosis) * parseInt(medicineMatch.frecuencia) * parseInt(medicineMatch.duracion) }} \n                    ÷ {{ medicine.presentacion }}⌉ = \n                    <strong>{{ Math.ceil((parseInt(medicineMatch.dosis) * parseInt(medicineMatch.frecuencia) * parseInt(medicineMatch.duracion)) / medicine.presentacion) }} paquete(s)</strong>\n                  </p>\n                </div>\n              </div>\n            </div>\n             <div v-else-if=\"medicine.prescription\" class=\"detail-section\">\n                <h4>Receta Médica</h4>\n                 <div class=\"detail-info\">\n                    <p class=\"status-warning\">Se requiere receta, pero no se ha seleccionado ninguna.</p>\n                 </div>\n             </div>\n            \n            <div class=\"detail-section\">\n              <h4>Estado de la Compra</h4>\n              <div class=\"detail-info\">\n                <p><strong>Stock disponible:</strong> <span :class=\"hasStock ? 'status-ok' : 'status-error'\">{{ hasStock ? 'Sí' : 'No' }}</span></p>\n                <p v-if=\"medicine.prescription\"><strong>Receta médica:</strong> <span :class=\"hasPrescription ? 'status-ok' : 'status-pending'\">{{ hasPrescription ? 'Validada' : 'Pendiente/No seleccionada' }}</span></p>\n                <p><strong>Seguro médico:</strong> <span :class=\"hasInsurance ? 'status-ok' : 'status-info'\">{{ hasInsurance ? `Cobertura del ${coveragePercentage}%` : 'No disponible' }}</span></p>\n              </div>\n            </div>\n          </div>\n           <div v-else class=\"detail-content\">\n                <p>Cargando detalles...</p>\n           </div>\n          \n          <div class=\"modal-actions\">\n            <button @click=\"closeDetailModal\" class=\"cancel-button\">Cerrar</button>\n            <button \n              @click=\"confirmPurchase\" \n              class=\"confirm-button\"\n              :disabled=\"!canConfirmPurchase\"\n            >\n              Confirmar Compra\n            </button>\n          </div>\n        </div>\n    </div>\n\n    <!-- Modal de confirmación -->\n    <div v-if=\"showConfirmationModal\" class=\"modal-overlay\">\n      <div class=\"modal-content\">\n        <h3>¡Compra Exitosa!</h3>\n        <p>Su compra ha sido procesada correctamente.</p>\n        <div class=\"confirmation-details\">\n          <p><strong>Medicamento:</strong> {{ medicine?.name }}</p>\n          <p><strong>Cantidad:</strong> {{ quantity }}</p>\n          <p><strong>Total pagado:</strong> Q{{ calculateTotalToPay().toFixed(2) }}</p>\n        </div>\n        <button @click=\"finishPurchase\" class=\"finish-button\">Continuar</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useUserStore } from '@/stores/userStore';\nimport axios from 'axios';\nimport HospitalSelector from '../components/HospitalSelector.vue';\n\nconst pharmacy = parseInt(window.location.port);\nconst pharmacy_port = pharmacy-30;\nconst route = useRoute();\nconst router = useRouter();\nconst userStore = useUserStore();\nconst selectedPort = ref(localStorage.getItem('selectedHospitalPort') || '');\n\n// URL base computada usando las variables de entorno\nconst apiBaseUrl = computed(() => {\n  const serverIp = process.env.VUE_APP_IP || '192.168.0.3';\n  const port = selectedPort.value || pharmacy_port;\n  return `http://${serverIp}:${port}/api2`;\n});\n\n// Manejar la selección del hospital\nconst onHospitalSelected = (port) => {\n  selectedPort.value = port;\n  if (isLoading.value === false && !medicine.value) {\n    loadMedicineData();\n  }\n};\n\n// Estados\nconst medicine = ref(null);\nconst quantity = ref(1);\nconst isLoading = ref(true);\nconst hasStock = ref(false);\nconst hasPrescription = ref(false);\nconst isPrescriptionPending = ref(false);\nconst hasInsurance = ref(false);\nconst coveragePercentage = ref(0);\nconst showConfirmationModal = ref(false);\nconst userRecipes = ref([]);\nconst selectedRecipe = ref(null);\nconst showDetailModal = ref(false);\nconst medicineMatch = ref(null);\n\n// Verificar si el usuario puede realizar la compra\nconst canConfirmPurchase = computed(() => {\n  return hasStock.value;\n});\n\n// Verificar si se puede usar la receta seleccionada\nconst canUseSelectedRecipe = computed(() => {\n  if (!selectedRecipe.value || !medicine.value) return false;\n  \n  // Verificar si la receta contiene el medicamento actual\n  const matchFound = selectedRecipe.value.medicines.find(med => \n    med.principioActivo === medicine.value.activeMedicament\n  );\n  \n  return !!matchFound;\n});\n\n// Verificar stock disponible\nfunction verificarStock() {\n  if (!medicine.value) {\n    console.error('No hay un medicamento para verificar stock');\n    hasStock.value = false;\n    return false;\n  }\n  \n  // Verificar si hay suficiente stock (siempre para cantidad 1)\n  hasStock.value = medicine.value.stock >= 1;\n  \n  console.log(`Verificación de stock: ${medicine.value.stock} disponibles, resultado: ${hasStock.value ? 'Disponible' : 'No disponible'}`);\n  \n  return hasStock.value;\n}\n\n// Forzar la selección de receta con cálculo visible\nfunction forceSelectRecipe(recipe) {\n  console.log('Forzando selección de receta:', recipe);\n  selectedRecipe.value = recipe;\n  \n  if (!medicine.value) {\n    console.warn('No hay medicamento cargado');\n    return;\n  }\n  \n  // Encuentra el medicamento que coincide\n  const matchingMedicine = recipe.medicines.find(med => \n    med.principioActivo === medicine.value.activeMedicament\n  );\n  \n  if (matchingMedicine) {\n    medicineMatch.value = matchingMedicine;\n    hasPrescription.value = true;\n    \n    // Calcular explícitamente\n    const dosis = parseInt(matchingMedicine.dosis) || 0;\n    const frecuencia = parseInt(matchingMedicine.frecuencia) || 0;\n    const duracion = parseInt(matchingMedicine.duracion) || 0;\n    const unidadesTotales = dosis * frecuencia * duracion;\n    const paquetesNecesarios = Math.ceil(unidadesTotales / medicine.value.presentacion);\n    \n    // Actualizar cantidad\n    quantity.value = paquetesNecesarios || 1;\n    \n    console.log('Resultado del cálculo:', {\n      dosis,\n      frecuencia, \n      duracion,\n      unidadesTotales,\n      unidadesPorPresentacion: medicine.value.presentacion,\n      paquetesNecesarios\n    });\n    \n    // Aplicar seguro si existe\n    if (recipe.has_insurance && userStore.user && userStore.user.policy) {\n      hasInsurance.value = true;\n      coveragePercentage.value = 70;\n    } else {\n      hasInsurance.value = false;\n      coveragePercentage.value = 0;\n    }\n  } else {\n    medicineMatch.value = null;\n    hasPrescription.value = false;\n    quantity.value = 1;\n    alert('Esta receta no contiene el medicamento seleccionado');\n  }\n}\n\n// Seleccionar una receta\nfunction selectRecipe(recipe) {\n  forceSelectRecipe(recipe);\n}\n\n// Cargar recetas\nasync function loadRecipes() {\n  isPrescriptionPending.value = true;\n  try {\n    if (userStore.user && userStore.user.idUser) {\n      // En un entorno real, deberías obtener las recetas del usuario desde el backend\n      console.log('Cargando recetas para el usuario:', userStore.user.idUser);\n      \n      // Simulamos una llamada a la API\n      // En producción, aquí iría: const response = await axios.get(`http://${ip}:${apiPort}/api2/prescriptions/user/${userStore.user.idUser}`);\n      \n      // Por ahora, usamos datos de ejemplo\n      setTimeout(() => {\n        const recetasEjemplo = [\n          {\n            _id: \"680f14e94d748efc0c04188b\",\n            patient: userStore.user.idUser || \"user123\",\n            doctor: \"67dcd3224d8c7c0ed8f0c01fe\",\n            formatted_code: \"00256-20250427-3478\",\n            formatted_date: \"27/04/2025 23:40:57\",\n            has_insurance: userStore.user.policy ? true : false,\n            insurance_code: userStore.user.policy || null,\n            special_notes: \"2\",\n            created_at: \"2025-04-27T23:40:57.300+00:00\",\n            medicines: [\n              {\n                _id: \"med-paracetamol-500\",\n                principioActivo: \"Paracetamol2\",\n                concentracion: \"500 MG\",\n                presentacion: 30,\n                dosis: \"2\",\n                frecuencia: \"1\",\n                duracion: \"4\",\n                diagnostico: \"2\"\n              }\n            ]\n          }\n        ];\n        \n        userRecipes.value = recetasEjemplo;\n        console.log('Recetas cargadas:', userRecipes.value);\n        isPrescriptionPending.value = false;\n      }, 500);\n    } else {\n      console.warn('No hay usuario logueado para cargar recetas');\n      isPrescriptionPending.value = false;\n    }\n  } catch (error) {\n    console.error('Error al cargar recetas:', error);\n    isPrescriptionPending.value = false;\n  }\n}\n\n// Manejar carga de archivo\nfunction handlePrescriptionUpload(event) {\n  const file = event.target.files[0];\n  if (file) {\n    console.log('Archivo de receta seleccionado:', file.name);\n  } else {\n    console.log('No se seleccionó ningún archivo');\n  }\n}\n\n// Calcular total a pagar\nfunction calculateTotalToPay() {\n  if (!medicine.value) return 0;\n  \n  const subtotal = medicine.value.price * quantity.value;\n  if (hasInsurance.value) {\n    const discount = subtotal * (coveragePercentage.value / 100);\n    return subtotal - discount;\n  }\n  return subtotal;\n}\n\n// Ver detalle de la compra (abre el modal)\nfunction viewDetail() {\n  showDetailModal.value = true;\n}\n\n// Cerrar modal de detalle\nfunction closeDetailModal() {\n  showDetailModal.value = false;\n}\n\n// Función para confirmar la compra\nasync function confirmPurchase() {\n  console.log('[VerificarCompra] Iniciando confirmPurchase...');\n  try {\n    isLoading.value = true;\n    \n    if (!medicine.value || !medicine.value.idMedicine) {\n      console.error('No hay un medicamento válido para la compra');\n      alert('No se pudo completar la compra: datos de medicamento incompletos');\n      isLoading.value = false;\n      return;\n    }\n    \n    if (!userStore.user || !userStore.user.idUser) {\n      console.error('No hay información del usuario para la compra');\n      alert('Debe iniciar sesión para completar la compra');\n      isLoading.value = false;\n      return;\n    }\n    \n    // Verificar stock nuevamente antes de procesar\n    if (!verificarStock()) {\n      alert('No hay suficiente stock para completar la compra');\n      isLoading.value = false;\n      return;\n    }\n    \n    console.log('Iniciando proceso de compra:', {\n      medicineId: medicine.value.idMedicine,\n      userId: userStore.user.idUser,\n      quantity: quantity.value,\n      recipeId: selectedRecipe.value?._id // Incluir ID de receta si está seleccionada\n    });\n    \n    // 1. Crear orden de compra\n    const orderData = {\n      user: { idUser: userStore.user.idUser },\n      status: 'Completado'\n    };\n    \n    try {\n      const orderResponse = await axios.post(`${apiBaseUrl.value}/orders`, orderData);\n      const order = orderResponse.data;\n      console.log('Orden creada:', order);\n      \n      // 2. Añadir medicamento a la orden\n      const orderMedicineData = {\n        orders: order,\n        medicine: { idMedicine: medicine.value.idMedicine },\n        quantity: quantity.value,\n        cost: medicine.value.price,\n        total: medicine.value.price * quantity.value\n      };\n      \n      await axios.post(`${apiBaseUrl.value}/order_medicines`, orderMedicineData);\n      console.log('Medicamento añadido a la orden');\n      \n      // 3. Actualizar el stock del medicamento\n      const updatedMedicine = { ...medicine.value };\n      updatedMedicine.stock = updatedMedicine.stock - quantity.value;\n      await axios.put(`${apiBaseUrl.value}/medicines/${medicine.value.idMedicine}`, updatedMedicine);\n      console.log('Stock actualizado');\n      \n      // 4. Si hay seguro o receta, generar registro de factura\n      if (hasInsurance.value || selectedRecipe.value) {\n        const insuranceAmount = hasInsurance.value ? (medicine.value.price * quantity.value) * (coveragePercentage.value / 100) : 0;\n        const patientAmount = (medicine.value.price * quantity.value) - insuranceAmount;\n        \n        const billData = {\n          prescription: selectedRecipe.value ? selectedRecipe.value._id : null,\n          total: medicine.value.price * quantity.value,\n          subtotal: medicine.value.price * quantity.value,\n          taxes: 0,\n          coveredAmount: insuranceAmount,\n          patientAmount: patientAmount,\n          copay: hasInsurance.value ? coveragePercentage.value : 0,\n          status: 'Pagado',\n          insuranceApprovalCode: hasInsurance.value ? 'AP' + Math.floor(Math.random() * 100000) : null\n        };\n        \n        console.log('Creando factura con datos:', billData);\n        await axios.post(`${apiBaseUrl.value}/bills`, billData);\n        console.log('Factura creada');\n      }\n      \n      console.log('Compra completada exitosamente');\n      isLoading.value = false;\n      \n      // Cerrar cualquier modal abierto\n      closeDetailModal();\n      \n      // Mostrar confirmación\n      showConfirmationModal.value = true;\n    } catch (error) {\n      console.error('Error en proceso de compra (llamadas API):', error);\n      if (error.response) {\n        console.error('Respuesta del servidor:', error.response.data);\n        alert(`Error del servidor: ${error.response.status} - ${error.response.data?.message || 'Error desconocido'}`);\n      } else {\n        alert('Ocurrió un error al procesar su compra (API). Por favor, inténtelo de nuevo.');\n      }\n      isLoading.value = false;\n    }\n  } catch (error) {\n    console.error('Error general procesando la compra:', error);\n    isLoading.value = false;\n    alert('Ocurrió un error al procesar su compra. Por favor, inténtelo de nuevo.');\n  }\n}\n\n// Finalizar proceso y redirigir\nfunction finishPurchase() {\n  // Cerrar todos los modales\n  showConfirmationModal.value = false;\n  showDetailModal.value = false;\n  \n  // Redireccionar al catálogo\n  router.push('/catalogo');\n}\n\n// Volver atrás\nfunction goBack() {\n  router.back();\n}\n\n// Usar la receta seleccionada (marcarla como usada)\nfunction useSelectedRecipe() {\n  if (selectedRecipe.value && canUseSelectedRecipe.value) {\n    hasPrescription.value = true; // Ya debería ser true por selectRecipe\n    console.log('Usando receta:', selectedRecipe.value._id);\n    \n    // Mostrar confirmación visual (si es necesario)\n    // ... (código para cambiar estilo del botón si se desea)\n  } else {\n    alert('Esta receta no es válida para el medicamento actual.');\n  }\n}\n\n// Simular verificación de receta subida\nfunction verifyPrescription() {\n  const fileInput = document.getElementById('prescription');\n  if (!fileInput || !fileInput.files || fileInput.files.length === 0) {\n    alert('Por favor, adjunte una receta médica.');\n    return;\n  }\n  \n  isPrescriptionPending.value = true;\n  console.log('Simulando verificación de receta subida...');\n  \n  setTimeout(() => {\n    // Generar cantidades aleatorias pero realistas para la receta\n    const dosis = Math.floor(Math.random() * 2) + 1; // 1 o 2 unidades por dosis\n    const frecuencia = Math.floor(Math.random() * 3) + 1; // 1 a 3 veces al día\n    const duracion = Math.floor(Math.random() * 7) + 3; // 3 a 10 días\n    \n    const nuevaReceta = {\n      _id: \"receta-\" + Math.floor(Math.random() * 10000),\n      patient: userStore.user?.idUser || \"usuario-actual\",\n      doctor: \"Doctor Subido\",\n      formatted_code: \"SUBIDA-\" + new Date().toISOString().substring(0, 10),\n      formatted_date: new Date().toLocaleDateString(),\n      has_insurance: false,\n      special_notes: \"Receta subida manualmente\",\n      medicines: [\n        {\n          _id: \"med-\" + Math.floor(Math.random() * 10000),\n          principioActivo: medicine.value?.activeMedicament || 'Desconocido',\n          concentracion: medicine.value?.concentration || \"N/A\",\n          presentacion: medicine.value?.presentacion || 'N/A',\n          dosis: dosis.toString(),\n          frecuencia: frecuencia.toString(),\n          duracion: duracion.toString(),\n          diagnostico: \"Subido manualmente\"\n        }\n      ]\n    };\n    \n    userRecipes.value.unshift(nuevaReceta);\n    forceSelectRecipe(nuevaReceta); // Seleccionar y validar la nueva receta\n    isPrescriptionPending.value = false;\n    console.log('Receta subida y verificada (simulado) con cantidades:', {\n      dosis,\n      frecuencia,\n      duracion,\n      totalUnidades: dosis * frecuencia * duracion\n    });\n  }, 1500);\n}\n\n// Recargar recetas (simulación)\nfunction recargarRecetas() {\n  isPrescriptionPending.value = true;\n  console.log('Recargando recetas...');\n  setTimeout(() => {\n    loadRecipes();\n    isPrescriptionPending.value = false;\n  }, 1000);\n}\n\n// Cargar datos del medicamento\nconst loadMedicineData = async () => {\n  // Si no hay puerto seleccionado, no continuar\n  if (!selectedPort.value) {\n    console.log('Esperando selección de hospital...');\n    return;\n  }\n  \n  isLoading.value = true;\n  try {\n    const activeMedicamentName = route.params.id;\n    console.log('Buscando medicamento con principio activo:', activeMedicamentName);\n    \n    const searchUrl = `${apiBaseUrl.value}/medicines/search?activeMedicament=${activeMedicamentName}`;\n    console.log('URL de búsqueda:', searchUrl);\n    \n    const response = await axios.get(searchUrl);\n    console.log('Respuesta de búsqueda:', response.data);\n    \n    if (response.data && response.data.length > 0) {\n      medicine.value = response.data[0];\n      console.log('Medicamento encontrado:', medicine.value);\n      \n      // Verificar stock\n      if (medicine.value.stock > 0) {\n        hasStock.value = true;\n      }\n      \n      // Cargar recetas\n      await loadRecipes();\n      \n      // Si hay receta, seleccionar\n      if (route.query.recipeId) {\n        const recipeToSelect = userRecipes.value.find(r => r._id === route.query.recipeId);\n        if (recipeToSelect) {\n          console.log('Seleccionando receta inicial:', recipeToSelect);\n          selectRecipe(recipeToSelect);\n        }\n      }\n    } else {\n      console.warn('No se encontró el medicamento');\n      medicine.value = null;\n    }\n  } catch (error) {\n    console.error('Error al buscar el medicamento:', error);\n    medicine.value = null;\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Cargar datos del medicamento\nonMounted(() => {\n  // Solo cargar datos si ya hay un puerto seleccionado\n  if (selectedPort.value) {\n    loadMedicineData();\n  }\n});\n\n</script>\n\n<style scoped>\n.purchase-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: #f8fafc;\n}\n\n.purchase-header {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.purchase-title {\n  font-size: 2rem;\n  font-weight: 700;\n  color: #1e40af;\n  margin-bottom: 0.5rem;\n}\n\n.purchase-subtitle {\n  font-size: 1.1rem;\n  color: #64748b;\n}\n\n.loading-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #e2e8f0;\n  border-top: 4px solid #1e40af;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.medicine-details {\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n  margin-bottom: 2rem;\n}\n\n.medicine-header {\n  padding: 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.medicine-header h2 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0;\n}\n\n.medicine-badge {\n  background-color: #ef4444;\n  color: white;\n  padding: 0.3rem 0.6rem;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  font-weight: 600;\n}\n\n.medicine-data {\n  padding: 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.data-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n}\n\n.data-item {\n  display: flex;\n  flex-direction: column;\n}\n\n.data-item .label {\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: #64748b;\n  margin-bottom: 0.3rem;\n}\n\n.data-item .value {\n  font-size: 1.1rem;\n  color: #1e293b;\n}\n\n.quantity-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.quantity-btn {\n  width: 25px;\n  height: 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #e2e8f0;\n  border: none;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n}\n\n.quantity-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.data-item .price,\n.data-item .total {\n  font-weight: 700;\n  color: #16a34a;\n}\n\n.verification-card {\n  display: flex;\n  padding: 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n  gap: 1rem;\n}\n\n.card-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  font-weight: bold;\n  flex-shrink: 0;\n}\n\n.status-success .card-icon {\n  background-color: #dcfce7;\n  color: #16a34a;\n}\n\n.status-error .card-icon {\n  background-color: #fee2e2;\n  color: #dc2626;\n}\n\n.status-pending .card-icon {\n  background-color: #fef3c7;\n  color: #d97706;\n}\n\n.status-neutral .card-icon {\n  background-color: #e0f2fe;\n  color: #0284c7;\n}\n\n.card-content {\n  flex: 1;\n}\n\n.card-content h3 {\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin: 0 0 0.5rem 0;\n}\n\n/* Sección de recetas */\n.prescription-section {\n  padding: 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.prescription-section h3 {\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin: 0 0 1rem 0;\n}\n\n.prescription-container {\n  display: flex;\n  gap: 1.5rem;\n  min-height: 300px;\n}\n\n.prescription-list {\n  flex: 1;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #f8fafc;\n}\n\n.loading-recipes {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 150px;\n}\n\n.loading-spinner-small {\n  width: 20px;\n  height: 20px;\n  border: 3px solid #e2e8f0;\n  border-top: 3px solid #1e40af;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin: 0 auto 0.5rem;\n}\n\n.no-recipes {\n  padding: 1.5rem;\n  text-align: center;\n}\n\n.reload-button {\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  padding: 0.6rem 1rem;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.3rem;\n  margin: 0.75rem auto;\n}\n\n.reload-button.small {\n  padding: 0.3rem 0.6rem;\n  font-size: 0.8rem;\n}\n\n.reload-icon {\n  display: inline-block;\n  font-size: 1.2rem;\n}\n\n.reload-button:hover {\n  background-color: #2563eb;\n}\n\n.recipe-item {\n  padding: 1rem;\n  border-bottom: 1px solid #e2e8f0;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.recipe-item:hover {\n  background-color: #e0f2fe;\n}\n\n.recipe-item.active {\n  background-color: #bfdbfe;\n}\n\n.recipe-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n}\n\n.recipe-code {\n  font-weight: 600;\n  font-size: 0.9rem;\n}\n\n.recipe-date {\n  font-size: 0.8rem;\n  color: #64748b;\n}\n\n.recipe-doctor {\n  font-size: 0.9rem;\n  color: #0f172a;\n}\n\n.prescription-detail {\n  flex: 1.5;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background-color: white;\n  padding: 1.5rem;\n}\n\n.no-recipe-selected {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #64748b;\n  font-style: italic;\n}\n\n.recipe-detail-content h4 {\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin: 0 0 1rem 0;\n  color: #1e40af;\n}\n\n.recipe-info {\n  background-color: #f8fafc;\n  padding: 1rem;\n  border-radius: 8px;\n  margin-bottom: 1.5rem;\n}\n\n.recipe-info p {\n  margin: 0.5rem 0;\n}\n\n.medicine-list {\n  margin-top: 1rem;\n}\n\n.medicine-item {\n  padding: 1rem;\n  background-color: #f8fafc;\n  border-radius: 8px;\n  margin-bottom: 0.75rem;\n}\n\n.medicine-item.matching-medicine {\n  background-color: #e0f2fe;\n  border: 1px solid #60a5fa;\n}\n\n.medicine-item p {\n  margin: 0.3rem 0;\n}\n\n.calculation-details {\n  margin-top: 0.8rem;\n  padding: 0.8rem;\n  background-color: #f0f9ff;\n  border-radius: 6px;\n  border-left: 3px solid #3b82f6;\n}\n\n.calculation-text {\n  font-size: 0.9rem;\n  margin: 0.5rem 0;\n  color: #334155;\n  line-height: 1.5;\n}\n\n.recipe-actions {\n  margin-top: 1.5rem;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.recipe-actions.top {\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.use-recipe-button {\n  background-color: #1e40af;\n  color: white;\n  border: none;\n  padding: 0.6rem 1.2rem;\n  border-radius: 6px;\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.use-recipe-button:disabled {\n  background-color: #94a3b8;\n  cursor: not-allowed;\n}\n\n.prescription-input {\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.verify-button {\n  background-color: #0284c7;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  align-self: flex-start;\n}\n\n.payment-summary {\n  padding: 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.payment-summary h3 {\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin: 0 0 1rem 0;\n}\n\n.summary-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem 0;\n}\n\n.summary-item.discount {\n  color: #16a34a;\n}\n\n.summary-item.total {\n  font-weight: 700;\n  font-size: 1.2rem;\n  padding-top: 1rem;\n  margin-top: 0.5rem;\n  border-top: 1px solid #e2e8f0;\n}\n\n.action-buttons {\n  padding: 1.5rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n}\n\n.cancel-button,\n.confirm-button,\n.back-button,\n.finish-button,\n.detail-button {\n  padding: 0.8rem 1.5rem;\n  border-radius: 6px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  border: none;\n}\n\n.cancel-button,\n.back-button {\n  background-color: #f1f5f9;\n  color: #334155;\n}\n\n.confirm-button,\n.finish-button {\n  background-color: #1e40af;\n  color: white;\n}\n\n.detail-button {\n  background-color: #0284c7;\n  color: white;\n}\n\n.confirm-button:disabled {\n  background-color: #94a3b8;\n  cursor: not-allowed;\n}\n\n.error-container {\n  text-align: center;\n  padding: 3rem;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  backdrop-filter: blur(4px);\n}\n\n.modal-content {\n  background-color: white;\n  border-radius: 12px;\n  padding: 0; /* Ajustado para header/content/actions */\n  width: 90%;\n  max-width: 600px; /* Aumentado para más espacio */\n  text-align: center;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\n  overflow: hidden; /* Para border-radius */\n}\n\n.detail-modal .modal-header {\n  padding: 1rem 1.5rem;\n  background-color: #f8fafc;\n  border-bottom: 1px solid #e2e8f0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.detail-modal h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.close-icon {\n  background: none;\n  border: none;\n  font-size: 1.75rem;\n  cursor: pointer;\n  color: #64748b;\n  line-height: 1;\n}\n\n.detail-modal .detail-content {\n  padding: 1.5rem;\n  text-align: left;\n  max-height: 60vh;\n  overflow-y: auto;\n}\n\n.detail-section {\n  margin-bottom: 1.5rem;\n}\n\n.detail-section h4 {\n  font-size: 1rem;\n  font-weight: 600;\n  color: #1e40af;\n  margin: 0 0 0.75rem 0;\n  border-bottom: 1px solid #e2e8f0;\n  padding-bottom: 0.5rem;\n}\n\n.detail-info {\n  background-color: #f8fafc;\n  padding: 0.75rem 1rem;\n  border-radius: 8px;\n}\n\n.detail-info p {\n  margin: 0.4rem 0;\n  font-size: 0.9rem;\n}\n\n.detail-info p strong {\n  color: #334155;\n}\n\n.status-ok {\n  color: #16a34a;\n  font-weight: 600;\n}\n\n.status-error {\n  color: #dc2626;\n  font-weight: 600;\n}\n\n.status-pending,\n.status-warning { /* Unificamos estilos */\n  color: #d97706;\n  font-weight: 600;\n}\n\n.status-info {\n  color: #0284c7;\n  font-weight: 600;\n}\n\n.detail-modal .modal-actions {\n  padding: 1rem 1.5rem;\n  background-color: #f8fafc;\n  border-top: 1px solid #e2e8f0;\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n}\n\n.modal-content h3 {\n  /* Estilo para modal de confirmación (asegurar especificidad si es necesario) */\n  &.confirmation-title { /* Ejemplo de clase para especificidad */\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: #16a34a;\n    margin-bottom: 1rem;\n  }\n}\n\n.confirmation-details {\n  background-color: #f8fafc;\n  border-radius: 8px;\n  padding: 1rem;\n  text-align: left;\n  margin: 1.5rem 0;\n}\n\n@media (max-width: 768px) {\n  .prescription-container {\n    flex-direction: column;\n  }\n\n  .prescription-list,\n  .prescription-detail {\n    width: 100%;\n  }\n}\n\n@media (max-width: 640px) {\n  .data-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .verification-card {\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n  }\n\n  .action-buttons {\n    flex-direction: column;\n  }\n\n  .cancel-button,\n  .confirm-button,\n  .detail-button {\n    width: 100%;\n  }\n}\n\n.quantity-controls.disabled {\n  opacity: 0.7;\n}\n\n.quantity-locked {\n  font-size: 0.8rem;\n  color: #64748b;\n  margin-left: 0.5rem;\n  font-style: italic;\n}\n\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}