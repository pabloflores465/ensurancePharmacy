{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"prescriptions-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-prescription mb-4 text-center\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"mb-4 text-red-600 text-center\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"prescriptions-list\"\n};\nconst _hoisted_5 = {\n  class: \"prescription-item\"\n};\nconst _hoisted_6 = {\n  class: \"text-xl font-bold\"\n};\nconst _hoisted_7 = {\n  class: \"medicine-table mt-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-bold text-center text-blue-800 mb-4\"\n  }, \" Solicitar Receta \", -1 /* HOISTED */)), _createCommentVNode(\" Formulario para buscar receta \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.prescriptionCode = $event),\n    placeholder: \"Ingrese el código de la receta\",\n    class: \"border p-2 mr-2\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.prescriptionCode]]), _createElementVNode(\"button\", {\n    onClick: $setup.searchPrescription,\n    class: \"bg-blue-500 text-white p-2 rounded\"\n  }, \" Buscar Receta \")]), _createCommentVNode(\" Mensaje de error si lo hay \"), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Mostrar receta encontrada \"), $setup.prescriptionFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h3\", _hoisted_6, _toDisplayString($setup.prescriptionFound.prescription.user.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"ID Receta:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.prescriptionFound.prescription.idPrescription), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Diagnóstico:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.prescriptionFound.prescription.diagnosis || 'No especificado'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Fecha:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.prescriptionFound.prescription.date || 'No disponible'), 1 /* TEXT */)]), _createCommentVNode(\" Tabla de Medicinas \"), _createElementVNode(\"table\", _hoisted_7, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Nombre\"), _createElementVNode(\"th\", null, \"Concentración\"), _createElementVNode(\"th\", null, \"Presentación\"), _createElementVNode(\"th\", null, \"Dosis\"), _createElementVNode(\"th\", null, \"Frecuencia\"), _createElementVNode(\"th\", null, \"Duración\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.prescriptionFound.medicines, (medicineEntry, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(medicineEntry.medicine.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.medicine.concentration), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.medicine.presentacion), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.dosis), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.frecuencia), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.duracion) + \" días\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_cache","$event","$setup","prescriptionCode","placeholder","onClick","searchPrescription","errorMessage","_hoisted_3","_toDisplayString","prescriptionFound","_hoisted_4","_hoisted_5","_hoisted_6","prescription","user","name","_createTextVNode","idPrescription","diagnosis","date","_hoisted_7","_Fragment","_renderList","medicines","medicineEntry","index","medicine","concentration","presentacion","dosis","frecuencia","duracion"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/Prescriptions.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div class=\"prescriptions-container\">\n    <h2 class=\"text-2xl font-bold text-center text-blue-800 mb-4\">\n      Solicitar Receta\n    </h2>\n\n    <!-- Formulario para buscar receta -->\n    <div class=\"search-prescription mb-4 text-center\">\n      <input\n          v-model=\"prescriptionCode\"\n          placeholder=\"Ingrese el código de la receta\"\n          class=\"border p-2 mr-2\"\n      />\n      <button @click=\"searchPrescription\" class=\"bg-blue-500 text-white p-2 rounded\">\n        Buscar Receta\n      </button>\n    </div>\n\n    <!-- Mensaje de error si lo hay -->\n    <div v-if=\"errorMessage\" class=\"mb-4 text-red-600 text-center\">\n      {{ errorMessage }}\n    </div>\n\n    <!-- Mostrar receta encontrada -->\n    <div v-if=\"prescriptionFound\" class=\"prescriptions-list\">\n      <div class=\"prescription-item\">\n        <h3 class=\"text-xl font-bold\">{{ prescriptionFound.prescription.user.name }}</h3>\n        <p><strong>ID Receta:</strong> {{ prescriptionFound.prescription.idPrescription }}</p>\n        <p>\n          <strong>Diagnóstico:</strong>\n          {{ prescriptionFound.prescription.diagnosis || 'No especificado' }}\n        </p>\n        <p>\n          <strong>Fecha:</strong>\n          {{ prescriptionFound.prescription.date || 'No disponible' }}\n        </p>\n\n        <!-- Tabla de Medicinas -->\n        <table class=\"medicine-table mt-2\">\n          <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Concentración</th>\n            <th>Presentación</th>\n            <th>Dosis</th>\n            <th>Frecuencia</th>\n            <th>Duración</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr\n              v-for=\"(medicineEntry, index) in prescriptionFound.medicines\"\n              :key=\"index\"\n          >\n            <td>{{ medicineEntry.medicine.name }}</td>\n            <td>{{ medicineEntry.medicine.concentration }}</td>\n            <td>{{ medicineEntry.medicine.presentacion }}</td>\n            <td>{{ medicineEntry.dosis }}</td>\n            <td>{{ medicineEntry.frecuencia }}</td>\n            <td>{{ medicineEntry.duracion }} días</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useUserStore } from \"@/stores/userStore\";\nconst userStore = useUserStore();\nconst userId = userStore.getUser().idUser\n\nconst errorMessage = ref('');\nconst prescriptionCode = ref('');\nconst prescriptionFound = ref(null);\nconst ip = process.env.VUE_APP_API_IP || 'localhost';\n\nconst searchPrescription = async () => {\n  errorMessage.value = '';\n  prescriptionFound.value = null;\n  if (!prescriptionCode.value) {\n    errorMessage.value = 'Ingrese un código de receta.';\n    return;\n  }\n  try {\n    const response = await axios.get(`http://${ip}:8081/api2/orders?id=${prescriptionCode.value}`);\n    const order = response.data;\n    if (!order) {\n      errorMessage.value = 'No se encontró la receta.';\n      return;\n    }\n    console.log(order.user.idUser, userStore.user.idUser)\n    // Verificar que la orden pertenezca al usuario actual\n    if (order.user.idUser != userId) {\n      errorMessage.value = 'La receta no pertenece al usuario.';\n      return;\n    }\n    // Asumir que la orden puede incluir un arreglo de medicines\n    prescriptionFound.value = {\n      prescription: order,\n      medicines: order.medicines || []\n    };\n  } catch (error) {\n    console.error('Error al obtener la receta:', error);\n    errorMessage.value = 'Error al obtener la receta. Por favor, inténtelo de nuevo.';\n  }\n};\n</script>\n\n<style scoped>\n.prescriptions-container {\n  padding: 50px;\n  background-color: #f8f9fa;\n}\n\n.search-prescription input {\n  width: 250px;\n}\n\n.prescriptions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.prescription-item {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.medicine-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\n\n.medicine-table th,\n.medicine-table td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: center;\n}\n\n.medicine-table th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}