{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"prescriptions-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"mb-4 text-red-600 text-center\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"prescriptions-list\"\n};\nconst _hoisted_4 = {\n  class: \"text-xl font-bold\"\n};\nconst _hoisted_5 = {\n  class: \"medicine-table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-bold text-center text-blue-800 mb-4\"\n  }, \" Todas las Recetas \", -1 /* HOISTED */)), _createCommentVNode(\" Mensaje de error si lo hay \"), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Lista de recetas \"), $setup.prescriptions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.prescriptions, prescription => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: prescription.id.prescriptionId,\n      class: \"prescription-item\"\n    }, [_createElementVNode(\"h3\", _hoisted_4, _toDisplayString(prescription.prescription.user.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"ID Receta:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(prescription.id.prescriptionId), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Diagnóstico:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(prescription.prescription.diagnosis || 'No especificado'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Fecha:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(prescription.prescription.date || 'No disponible'), 1 /* TEXT */)]), _createCommentVNode(\" Tabla de Medicamentos \"), _createElementVNode(\"table\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Nombre\"), _createElementVNode(\"th\", null, \"Concentración\"), _createElementVNode(\"th\", null, \"Presentación\"), _createElementVNode(\"th\", null, \"Dosis\"), _createElementVNode(\"th\", null, \"Frecuencia\"), _createElementVNode(\"th\", null, \"Duración\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(prescription.medicine.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(prescription.medicine.concentration), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(prescription.medicine.presentacion), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(prescription.dosis), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(prescription.frecuencia), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(prescription.duracion) + \" días\", 1 /* TEXT */)])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Mensaje si no hay recetas \"), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"text-center text-gray-600\"\n  }, \" No hay recetas disponibles. \", -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$setup","errorMessage","_hoisted_2","_toDisplayString","prescriptions","length","_hoisted_3","_Fragment","_renderList","prescription","id","prescriptionId","_hoisted_4","user","name","_createTextVNode","diagnosis","date","_hoisted_5","medicine","concentration","presentacion","dosis","frecuencia","duracion"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/Prescriptions.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div class=\"prescriptions-container\">\n    <h2 class=\"text-2xl font-bold text-center text-blue-800 mb-4\">\n      Todas las Recetas\n    </h2>\n\n    <!-- Mensaje de error si lo hay -->\n    <div v-if=\"errorMessage\" class=\"mb-4 text-red-600 text-center\">\n      {{ errorMessage }}\n    </div>\n\n    <!-- Lista de recetas -->\n    <div v-if=\"prescriptions.length > 0\" class=\"prescriptions-list\">\n      <div v-for=\"prescription in prescriptions\" :key=\"prescription.id.prescriptionId\" class=\"prescription-item\">\n        <h3 class=\"text-xl font-bold\">{{ prescription.prescription.user.name }}</h3>\n        <p><strong>ID Receta:</strong> {{ prescription.id.prescriptionId }}</p>\n        <p><strong>Diagnóstico:</strong> {{ prescription.prescription.diagnosis || 'No especificado' }}</p>\n        <p><strong>Fecha:</strong> {{ prescription.prescription.date || 'No disponible' }}</p>\n\n        <!-- Tabla de Medicamentos -->\n        <table class=\"medicine-table\">\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Concentración</th>\n              <th>Presentación</th>\n              <th>Dosis</th>\n              <th>Frecuencia</th>\n              <th>Duración</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{{ prescription.medicine.name }}</td>\n              <td>{{ prescription.medicine.concentration }}</td>\n              <td>{{ prescription.medicine.presentacion }}</td>\n              <td>{{ prescription.dosis }}</td>\n              <td>{{ prescription.frecuencia }}</td>\n              <td>{{ prescription.duracion }} días</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <!-- Mensaje si no hay recetas -->\n    <div v-else class=\"text-center text-gray-600\">\n      No hay recetas disponibles.\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\n\nconst prescriptions = ref([]);\nconst errorMessage = ref('');\nconst ip = process.env.VUE_APP_API_IP || 'localhost';\n\n// Nuevo: Obtener el ID del usuario actual, por ejemplo desde localStorage\nconst userId = localStorage.getItem('userId') || 'defaultUserId'; // ajustar según implementación\n\nconst fetchPrescriptions = async () => {\n  try {\n    const response = await axios.get(`http://${ip}:8081/api2/prescription_medicines`);\n    const allPrescriptions = response.data;\n\n    // Filtrar recetas que pertenecen al usuario actual\n    prescriptions.value = allPrescriptions.filter(p => p.prescription.user.idUser == userId);\n\n    console.log(\"RECETAS FILTRADAS:\", prescriptions.value, userId);\n  } catch (error) {\n    console.error(\"Error al obtener las recetas:\", error);\n    errorMessage.value = 'Error al obtener las recetas. Por favor, inténtelo de nuevo.';\n  }\n};\n\nonMounted(() => {\n  fetchPrescriptions();\n});\n</script>\n\n<style scoped>\n.prescriptions-container {\n  padding: 50px;\n  background-color: #f8f9fa;\n}\n\n.prescriptions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.prescription-item {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.medicine-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\n\n.medicine-table th, .medicine-table td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: center;\n}\n\n.medicine-table th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAyB;;EAFtCC,GAAA;EAQ6BD,KAAK,EAAC;;;EARnCC,GAAA;EAayCD,KAAK,EAAC;;;EAEnCA,KAAK,EAAC;AAAmB;;EAMtBA,KAAK,EAAC;AAAgB;;uBAnBnCE,mBAAA,CAgDM,OAhDNC,UAgDM,G,0BA/CJC,mBAAA,CAEK;IAFDJ,KAAK,EAAC;EAAmD,GAAC,qBAE9D,sBAEAK,mBAAA,gCAAmC,EACxBC,MAAA,CAAAC,YAAY,I,cAAvBL,mBAAA,CAEM,OAFNM,UAEM,EAAAC,gBAAA,CADDH,MAAA,CAAAC,YAAY,oBATrBF,mBAAA,gBAYIA,mBAAA,sBAAyB,EACdC,MAAA,CAAAI,aAAa,CAACC,MAAM,Q,cAA/BT,mBAAA,CA+BM,OA/BNU,UA+BM,I,kBA9BJV,mBAAA,CA6BMW,SAAA,QA3CZC,WAAA,CAckCR,MAAA,CAAAI,aAAa,EAA7BK,YAAY;yBAAxBb,mBAAA,CA6BM;MA7BsCD,GAAG,EAAEc,YAAY,CAACC,EAAE,CAACC,cAAc;MAAEjB,KAAK,EAAC;QACrFI,mBAAA,CAA4E,MAA5Ec,UAA4E,EAAAT,gBAAA,CAA3CM,YAAY,CAACA,YAAY,CAACI,IAAI,CAACC,IAAI,kBACpEhB,mBAAA,CAAuE,Y,0BAApEA,mBAAA,CAA2B,gBAAnB,YAAU,sBAhB7BiB,gBAAA,CAgBsC,GAAC,GAAAZ,gBAAA,CAAGM,YAAY,CAACC,EAAE,CAACC,cAAc,iB,GAChEb,mBAAA,CAAmG,Y,0BAAhGA,mBAAA,CAA6B,gBAArB,cAAY,sBAjB/BiB,gBAAA,CAiBwC,GAAC,GAAAZ,gBAAA,CAAGM,YAAY,CAACA,YAAY,CAACO,SAAS,sC,GACvElB,mBAAA,CAAsF,Y,0BAAnFA,mBAAA,CAAuB,gBAAf,QAAM,sBAlBzBiB,gBAAA,CAkBkC,GAAC,GAAAZ,gBAAA,CAAGM,YAAY,CAACA,YAAY,CAACQ,IAAI,oC,GAE5DlB,mBAAA,2BAA8B,EAC9BD,mBAAA,CAqBQ,SArBRoB,UAqBQ,G,0BApBNpB,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAiB,YAAb,UAAQ,E,wBAGhBA,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAyC,YAAAK,gBAAA,CAAlCM,YAAY,CAACU,QAAQ,CAACL,IAAI,kBACjChB,mBAAA,CAAkD,YAAAK,gBAAA,CAA3CM,YAAY,CAACU,QAAQ,CAACC,aAAa,kBAC1CtB,mBAAA,CAAiD,YAAAK,gBAAA,CAA1CM,YAAY,CAACU,QAAQ,CAACE,YAAY,kBACzCvB,mBAAA,CAAiC,YAAAK,gBAAA,CAA1BM,YAAY,CAACa,KAAK,kBACzBxB,mBAAA,CAAsC,YAAAK,gBAAA,CAA/BM,YAAY,CAACc,UAAU,kBAC9BzB,mBAAA,CAAyC,YAAAK,gBAAA,CAAlCM,YAAY,CAACe,QAAQ,IAAG,OAAK,gB;qDAQ9C5B,mBAAA,CAEMW,SAAA;IAjDVZ,GAAA;EAAA,IA8CII,mBAAA,+BAAkC,E,0BAClCD,mBAAA,CAEM;IAFMJ,KAAK,EAAC;EAA2B,GAAC,+BAE9C,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}