{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"prescriptions-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"mb-4 text-red-600 text-center\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"prescriptions-list\"\n};\nconst _hoisted_4 = {\n  class: \"text-xl font-bold\"\n};\nconst _hoisted_5 = {\n  class: \"medicine-table\"\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-bold text-center text-blue-800 mb-4\"\n  }, \" Todas las Recetas \", -1 /* HOISTED */)), _createCommentVNode(\" Mensaje de error si lo hay \"), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Lista de recetas \"), $setup.prescriptions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.prescriptions, group => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: group.prescription.idPrescription,\n      class: \"prescription-item\"\n    }, [_createElementVNode(\"h3\", _hoisted_4, _toDisplayString(group.prescription.user.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"ID Receta:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(group.prescription.idPrescription), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Diagnóstico:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(group.prescription.diagnosis || 'No especificado'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Fecha:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(group.prescription.date || 'No disponible'), 1 /* TEXT */)]), _createCommentVNode(\" Tabla de Medicinas \"), _createElementVNode(\"table\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Nombre\"), _createElementVNode(\"th\", null, \"Concentración\"), _createElementVNode(\"th\", null, \"Presentación\"), _createElementVNode(\"th\", null, \"Dosis\"), _createElementVNode(\"th\", null, \"Frecuencia\"), _createElementVNode(\"th\", null, \"Duración\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(group.medicines, medicineEntry => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: medicineEntry.medicine.idMedicine\n      }, [_createElementVNode(\"td\", null, _toDisplayString(medicineEntry.medicine.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.medicine.concentration), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.medicine.presentacion), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.dosis), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.frecuencia), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicineEntry.duracion) + \" días\", 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.$router.push({\n        name: 'PrescriptionPay',\n        params: {\n          id: group.prescription.idPrescription\n        }\n      })\n    }, \"Comprar\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Mensaje si no hay recetas \"), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"text-center text-gray-600\"\n  }, \" No hay recetas disponibles. \", -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$setup","errorMessage","_hoisted_2","_toDisplayString","prescriptions","length","_hoisted_3","_Fragment","_renderList","group","prescription","idPrescription","_hoisted_4","user","name","_createTextVNode","diagnosis","date","_hoisted_5","medicines","medicineEntry","medicine","idMedicine","concentration","presentacion","dosis","frecuencia","duracion","onClick","$event","_ctx","$router","push","params","id","_hoisted_6"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/Prescriptions.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div class=\"prescriptions-container\">\n    <h2 class=\"text-2xl font-bold text-center text-blue-800 mb-4\">\n      Todas las Recetas\n    </h2>\n\n    <!-- Mensaje de error si lo hay -->\n    <div v-if=\"errorMessage\" class=\"mb-4 text-red-600 text-center\">\n      {{ errorMessage }}\n    </div>\n\n    <!-- Lista de recetas -->\n    <div v-if=\"prescriptions.length > 0\" class=\"prescriptions-list\">\n      <div v-for=\"group in prescriptions\" :key=\"group.prescription.idPrescription\" class=\"prescription-item\">\n        <h3 class=\"text-xl font-bold\">{{ group.prescription.user.name }}</h3>\n        <p><strong>ID Receta:</strong> {{ group.prescription.idPrescription }}</p>\n        <p><strong>Diagnóstico:</strong> {{ group.prescription.diagnosis || 'No especificado' }}</p>\n        <p><strong>Fecha:</strong> {{ group.prescription.date || 'No disponible' }}</p>\n\n        <!-- Tabla de Medicinas -->\n        <table class=\"medicine-table\">\n          <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Concentración</th>\n            <th>Presentación</th>\n            <th>Dosis</th>\n            <th>Frecuencia</th>\n            <th>Duración</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"medicineEntry in group.medicines\" :key=\"medicineEntry.medicine.idMedicine\">\n            <td>{{ medicineEntry.medicine.name }}</td>\n            <td>{{ medicineEntry.medicine.concentration }}</td>\n            <td>{{ medicineEntry.medicine.presentacion }}</td>\n            <td>{{ medicineEntry.dosis }}</td>\n            <td>{{ medicineEntry.frecuencia }}</td>\n            <td>{{ medicineEntry.duracion }} días</td>\n          </tr>\n          </tbody>\n        </table>\n        <button @click=\"$router.push({ name: 'PrescriptionPay', params: { id: group.prescription.idPrescription } })\">Comprar</button>\n      </div>\n    </div>\n\n    <!-- Mensaje si no hay recetas -->\n    <div v-else class=\"text-center text-gray-600\">\n      No hay recetas disponibles.\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { useUserStore } from \"@/stores/userStore\";\nconst userStore = useUserStore();\n\nconst prescriptions = ref([]);\nconst errorMessage = ref('');\nconst ip = process.env.VUE_APP_API_IP || 'localhost';\n\nconst fetchPrescriptions = async () => {\n  try {\n    const response = await axios.get(`http://${ip}:8081/api2/prescription_medicines`);\n    const allPrescriptions = response.data;\n\n    // Filtrar recetas que pertenecen al usuario actual\n    const userPrescriptions = allPrescriptions.filter(p => p.prescription.user.idUser == userStore.user.idUser);\n\n    // Agrupar recetas por prescriptionId\n    const grouped = {};\n    userPrescriptions.forEach(p => {\n      const prescId = p.id.prescriptionId;\n      if (!grouped[prescId]) {\n        grouped[prescId] = {\n          prescription: p.prescription,\n          medicines: []\n        };\n      }\n      grouped[prescId].medicines.push({\n        medicine: p.medicine,\n        dosis: p.dosis,\n        frecuencia: p.frecuencia,\n        duracion: p.duracion\n      });\n    });\n    const groupsArray = Object.values(grouped);\n    const filteredGroups = [];\n\n    // Para cada receta, llamar a la API de orders y omitir si status es \"Completado\"\n    for (const group of groupsArray) {\n      try {\n        const orderResponse = await axios.get(`http://${ip}:8081/api2/orders?id=${group.prescription.idPrescription}`);\n        const orderData = Array.isArray(orderResponse.data) ? orderResponse.data[0] : orderResponse.data;\n        if (!orderData || orderData.status === 'Completado') {\n          continue;\n        }\n        filteredGroups.push(group);\n      } catch (err) {\n        if (err.response?.status === 404) {\n          // No existe orden → incluir receta\n          filteredGroups.push(group);\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    prescriptions.value = filteredGroups;\n    console.log(\"RECETAS AGRUPADAS:\", prescriptions.value);\n  } catch (error) {\n    console.error(\"Error al obtener las recetas:\", error);\n    errorMessage.value = 'Error al obtener las recetas. Por favor, inténtelo de nuevo.';\n  }\n};\n\nonMounted(() => {\n  fetchPrescriptions();\n});\n</script>\n\n<style scoped>\n.prescriptions-container {\n  padding: 50px;\n  background-color: #f8f9fa;\n}\n\n.prescriptions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.prescription-item {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.medicine-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\n\n.medicine-table th, .medicine-table td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: center;\n}\n\n.medicine-table th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}