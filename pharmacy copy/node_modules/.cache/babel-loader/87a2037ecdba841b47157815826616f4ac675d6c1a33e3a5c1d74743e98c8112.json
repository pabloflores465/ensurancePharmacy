{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cart-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Carrito de Compras\", -1 /* HOISTED */)), _createCommentVNode(\" Si no existe una orden en progreso \"), !$setup.currentOrder ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"No tienes una orden en progreso.\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Si existe una orden en progreso, se muestran los ítems \"), _createElementVNode(\"div\", null, [_createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Medicamento\"), _createElementVNode(\"th\", null, \"Cantidad\"), _createElementVNode(\"th\", null, \"Costo Unitario\"), _createElementVNode(\"th\", null, \"Total\"), _createElementVNode(\"th\", null, \"Eliminar\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.medicine.idMedicine\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.medicine.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.cost), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.total), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.removeItem(item)\n    }, \"X\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$setup","currentOrder","_hoisted_2","_cache","_Fragment","_renderList","cartItems","item","medicine","idMedicine","_toDisplayString","name","quantity","cost","total","onClick","$event","removeItem","_hoisted_3"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/components/Cart.vue"],"sourcesContent":["<template>\n  <div class=\"cart-container\">\n    <h1>Carrito de Compras</h1>\n\n    <!-- Si no existe una orden en progreso -->\n    <div v-if=\"!currentOrder\">\n      <p>No tienes una orden en progreso.</p>\n    </div>\n\n    <!-- Si existe una orden en progreso, se muestran los ítems -->\n    <div v-else>\n      <table>\n        <thead>\n        <tr>\n          <th>Medicamento</th>\n          <th>Cantidad</th>\n          <th>Costo Unitario</th>\n          <th>Total</th>\n          <th>Eliminar</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"item in cartItems\" :key=\"item.medicine.idMedicine\">\n          <td>{{ item.medicine.name }}</td>\n          <td>{{ item.quantity }}</td>\n          <td>{{ item.cost }}</td>\n          <td>{{ item.total }}</td>\n          <td>\n            <button @click=\"removeItem(item)\">X</button>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\nimport { useUserStore } from '@/stores/userStore'\nimport { useRouter } from 'vue-router'\n\nconst userStore = useUserStore()\nconst router = useRouter()\nconst ip = process.env.VUE_APP_API_IP || 'localhost'\n\nconst currentOrder = ref(null)\nconst cartItems = ref([])\n\n// Buscar la orden en progreso para el usuario actual\nconst fetchCurrentOrder = async () => {\n  try {\n    const ordersResponse = await axios.get(`http://${ip}:8081/api2/orders`)\n    const orders = ordersResponse.data\n    const userId = userStore.getUser().idUser\n    const inProgressOrder = orders.find(o => o.user.idUser === userId && o.status === 'En progreso')\n    currentOrder.value = inProgressOrder || null\n  } catch (error) {\n    console.error('Error fetching current order:', error)\n  }\n}\n\n// Obtener los ítems (OrderMedicine) de la orden en progreso\nconst fetchCartItems = async (orderId) => {\n  try {\n    const response = await axios.get(`http://${ip}:8081/api2/order_medicines`)\n    const allItems = response.data\n    // Filtrar solo los ítems que corresponden a la orden en progreso\n    cartItems.value = allItems.filter(item => item.orders.idOrder === orderId)\n  } catch (error) {\n    console.error('Error fetching cart items:', error)\n  }\n}\n\n// Eliminar un ítem del carrito (se elimina directamente de la DB)\nconst removeItem = async (item) => {\n  try {\n    const orderId = item.orders.idOrder\n    const medicineId = item.medicine.idMedicine\n    await axios.delete(`http://${ip}:8081/api2/order_medicines?id=${orderId},${medicineId}`)\n    // Actualizar la lista local eliminando el ítem borrado\n    cartItems.value = cartItems.value.filter(i => i.medicine.idMedicine !== medicineId)\n  } catch (error) {\n    console.error('Error removing item from cart:', error)\n  }\n}\n\nonMounted(async () => {\n  await fetchCurrentOrder()\n  if (currentOrder.value) {\n    await fetchCartItems(currentOrder.value.idOrder)\n  }\n})\n</script>\n\n<style scoped>\n.cart-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\nth, td {\n  padding: 8px;\n  border: 1px solid #ccc;\n  text-align: left;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;AAAA;mBAAA;;uBACEC,mBAAA,CAiCM,OAjCNC,UAiCM,G,0BAhCJC,mBAAA,CAA2B,YAAvB,oBAAkB,sBAEtBC,mBAAA,wCAA2C,E,CAC/BC,MAAA,CAAAC,YAAY,I,cAAxBL,mBAAA,CAEM,OAPVM,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAMML,mBAAA,CAAuC,WAApC,kCAAgC,oB,qBAIrCF,mBAAA,CAuBMQ,SAAA;IAjCVT,GAAA;EAAA,IASII,mBAAA,4DAA+D,EAC/DD,mBAAA,CAuBM,cAtBJA,mBAAA,CAqBQ,gB,0BApBNA,mBAAA,CAQQ,gBAPRA,mBAAA,CAMK,aALHA,mBAAA,CAAoB,YAAhB,aAAW,GACfA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAuB,YAAnB,gBAAc,GAClBA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAiB,YAAb,UAAQ,E,wBAGdA,mBAAA,CAUQ,iB,kBATRF,mBAAA,CAQKQ,SAAA,QA9BbC,WAAA,CAsB2BL,MAAA,CAAAM,SAAS,EAAjBC,IAAI;yBAAfX,mBAAA,CAQK;MAR0BD,GAAG,EAAEY,IAAI,CAACC,QAAQ,CAACC;QAChDX,mBAAA,CAAiC,YAAAY,gBAAA,CAA1BH,IAAI,CAACC,QAAQ,CAACG,IAAI,kBACzBb,mBAAA,CAA4B,YAAAY,gBAAA,CAArBH,IAAI,CAACK,QAAQ,kBACpBd,mBAAA,CAAwB,YAAAY,gBAAA,CAAjBH,IAAI,CAACM,IAAI,kBAChBf,mBAAA,CAAyB,YAAAY,gBAAA,CAAlBH,IAAI,CAACO,KAAK,kBACjBhB,mBAAA,CAEK,aADHA,mBAAA,CAA4C;MAAnCiB,OAAK,EAAAC,MAAA,IAAEhB,MAAA,CAAAiB,UAAU,CAACV,IAAI;OAAG,GAAC,iBA5B/CW,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}