{"ast":null,"code":"export default {\n  name: 'HospitalSelector',\n  data() {\n    return {\n      hospitalPorts: {},\n      hospitalSelected: false,\n      selectedPort: '',\n      loading: false,\n      loadError: '',\n      serverIP: process.env.VUE_APP_IP || 'No configurada'\n    };\n  },\n  emits: ['hospital-selected'],\n  mounted() {\n    this.loadHospitalPorts();\n  },\n  methods: {\n    async loadHospitalPorts() {\n      this.loading = true;\n      this.loadError = '';\n      try {\n        const response = await fetch('/env.json');\n        if (!response.ok) {\n          throw new Error(`Error HTTP: ${response.status}`);\n        }\n        const envData = await response.json();\n\n        // Filter only VITE_HOSPITAL_PORT entries\n        const ports = {};\n        for (const key in envData) {\n          if (key.startsWith('VITE_HOSPITAL_PORT_')) {\n            ports[key] = envData[key];\n          }\n        }\n        this.hospitalPorts = ports;\n\n        // Si no hay puertos configurados, mostrar error\n        if (Object.keys(ports).length === 0) {\n          this.loadError = \"No se encontraron configuraciones de hospitales en env.json. Agregue al menos una entrada VITE_HOSPITAL_PORT_X.\";\n        }\n      } catch (error) {\n        console.error('Error loading hospital ports:', error);\n        this.loadError = `Error al cargar configuración: ${error.message || 'Error de conexión'}`;\n      } finally {\n        this.loading = false;\n      }\n    },\n    confirmSelection() {\n      if (this.selectedPort) {\n        localStorage.setItem('selectedHospitalPort', this.selectedPort);\n        this.hospitalSelected = true;\n        this.$emit('hospital-selected', this.selectedPort);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","hospitalPorts","hospitalSelected","selectedPort","loading","loadError","serverIP","process","env","VUE_APP_IP","emits","mounted","loadHospitalPorts","methods","response","fetch","ok","Error","status","envData","json","ports","key","startsWith","Object","keys","length","error","console","message","confirmSelection","localStorage","setItem","$emit"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/components/HospitalSelector.vue"],"sourcesContent":["<template>\n  <div v-if=\"!hospitalSelected\" class=\"hospital-selector-overlay\">\n    <div class=\"hospital-selector-content\">\n      <h2 class=\"text-2xl font-bold mb-4\">Seleccionar Hospital</h2>\n      <p class=\"mb-4\">Seleccione un hospital para continuar</p>\n      \n      <div v-if=\"loading\" class=\"flex items-center justify-center py-4\">\n        <div class=\"spinner\"></div>\n        <span class=\"ml-3\">Cargando configuración...</span>\n      </div>\n      \n      <div v-else-if=\"loadError\" class=\"bg-red-100 p-4 mb-4 rounded border-l-4 border-red-500\">\n        <p class=\"text-red-700\">{{ loadError }}</p>\n        <button \n          @click=\"loadHospitalPorts\" \n          class=\"mt-3 bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm\"\n        >\n          Reintentar\n        </button>\n      </div>\n      \n      <div v-else-if=\"Object.keys(hospitalPorts).length === 0\" class=\"bg-yellow-100 p-4 mb-4 rounded border-l-4 border-yellow-500\">\n        <p class=\"text-yellow-700\">No se encontraron configuraciones de hospitales en env.json.</p>\n        <p class=\"text-yellow-700 mt-2\">Asegúrese de que el archivo contenga entradas VITE_HOSPITAL_PORT_X.</p>\n      </div>\n      \n      <div v-else>\n        <select \n          v-model=\"selectedPort\" \n          class=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\n        >\n          <option value=\"\" disabled>Seleccione un hospital</option>\n          <option \n            v-for=\"(port, key) in hospitalPorts\" \n            :key=\"key\" \n            :value=\"port\"\n          >\n            Hospital {{ key.split('_')[2] }} (Puerto: {{ port }})\n          </option>\n        </select>\n        \n        <button \n          @click=\"confirmSelection\"\n          class=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg w-full\"\n          :disabled=\"!selectedPort\"\n        >\n          Continuar\n        </button>\n        \n        <div class=\"mt-4 text-sm text-gray-600\">\n          <p>IP del servidor: <strong>{{ serverIP }}</strong></p>\n          <p v-if=\"serverIP === 'No configurada'\" class=\"text-red-600 mt-1\">\n            ¡Advertencia! No se ha configurado VUE_APP_IP en el archivo .env.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HospitalSelector',\n  data() {\n    return {\n      hospitalPorts: {},\n      hospitalSelected: false,\n      selectedPort: '',\n      loading: false,\n      loadError: '',\n      serverIP: process.env.VUE_APP_IP || 'No configurada'\n    };\n  },\n  emits: ['hospital-selected'],\n  mounted() {\n    this.loadHospitalPorts();\n  },\n  methods: {\n    async loadHospitalPorts() {\n      this.loading = true;\n      this.loadError = '';\n      \n      try {\n        const response = await fetch('/env.json');\n        if (!response.ok) {\n          throw new Error(`Error HTTP: ${response.status}`);\n        }\n        \n        const envData = await response.json();\n        \n        // Filter only VITE_HOSPITAL_PORT entries\n        const ports = {};\n        for (const key in envData) {\n          if (key.startsWith('VITE_HOSPITAL_PORT_')) {\n            ports[key] = envData[key];\n          }\n        }\n        \n        this.hospitalPorts = ports;\n        \n        // Si no hay puertos configurados, mostrar error\n        if (Object.keys(ports).length === 0) {\n          this.loadError = \"No se encontraron configuraciones de hospitales en env.json. Agregue al menos una entrada VITE_HOSPITAL_PORT_X.\";\n        }\n      } catch (error) {\n        console.error('Error loading hospital ports:', error);\n        this.loadError = `Error al cargar configuración: ${error.message || 'Error de conexión'}`;\n      } finally {\n        this.loading = false;\n      }\n    },\n    confirmSelection() {\n      if (this.selectedPort) {\n        localStorage.setItem('selectedHospitalPort', this.selectedPort);\n        this.hospitalSelected = true;\n        this.$emit('hospital-selected', this.selectedPort);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.hospital-selector-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n}\n\n.hospital-selector-content {\n  background-color: white;\n  padding: 2rem;\n  border-radius: 8px;\n  max-width: 400px;\n  width: 90%;\n}\n\n.spinner {\n  border: 3px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top: 3px solid #3498db;\n  width: 24px;\n  height: 24px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style> "],"mappings":"AA6DA,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,CAAC,CAAC;MACjBC,gBAAgB,EAAE,KAAK;MACvBC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAS,IAAK;IACtC,CAAC;EACH,CAAC;EACDC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI,CAACR,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,SAAQ,GAAI,EAAE;MAEnB,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMC,KAAK,CAAC,WAAW,CAAC;QACzC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,eAAeH,QAAQ,CAACI,MAAM,EAAE,CAAC;QACnD;QAEA,MAAMC,OAAM,GAAI,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;;QAErC;QACA,MAAMC,KAAI,GAAI,CAAC,CAAC;QAChB,KAAK,MAAMC,GAAE,IAAKH,OAAO,EAAE;UACzB,IAAIG,GAAG,CAACC,UAAU,CAAC,qBAAqB,CAAC,EAAE;YACzCF,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACG,GAAG,CAAC;UAC3B;QACF;QAEA,IAAI,CAACrB,aAAY,GAAIoB,KAAK;;QAE1B;QACA,IAAIG,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,MAAK,KAAM,CAAC,EAAE;UACnC,IAAI,CAACrB,SAAQ,GAAI,iHAAiH;QACpI;MACF,EAAE,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACtB,SAAQ,GAAI,kCAAkCsB,KAAK,CAACE,OAAM,IAAK,mBAAmB,EAAE;MAC3F,UAAU;QACR,IAAI,CAACzB,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACD0B,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAAC3B,YAAY,EAAE;QACrB4B,YAAY,CAACC,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC7B,YAAY,CAAC;QAC/D,IAAI,CAACD,gBAAe,GAAI,IAAI;QAC5B,IAAI,CAAC+B,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC9B,YAAY,CAAC;MACpD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}