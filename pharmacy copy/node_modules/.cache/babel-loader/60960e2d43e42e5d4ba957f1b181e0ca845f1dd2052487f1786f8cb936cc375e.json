{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  __name: 'DetalleReceta',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const ip = process.env.VUE_APP_API_IP || 'localhost';\n\n    // Estado\n    const isLoading = ref(true);\n    const receta = ref(null);\n    const error = ref(null);\n    const pharmacy = parseInt(window.location.port);\n    const pharmacy_port = pharmacy - 30;\n    // Propiedades computadas\n    const puedeComprar = computed(() => {\n      return receta.value && receta.value.medicines && receta.value.medicines.length > 0;\n    });\n    function goBack() {\n      router.back();\n    }\n    function procesarCompra() {\n      // Redireccionar a la página de compra con la receta\n      router.push({\n        name: 'PrescriptionPay',\n        params: {\n          id: receta.value.id.prescriptionId\n        }\n      });\n    }\n    async function fetchReceta() {\n      isLoading.value = true;\n      error.value = null;\n      try {\n        const prescriptionId = route.params.id;\n        if (!prescriptionId) {\n          throw new Error('ID de receta no proporcionado');\n        }\n\n        // Usar la misma API que funciona en PrescriptionPay\n        const response = await axios.get(`http://${ip}:8081/api2/prescription_medicines`);\n        const allData = response.data;\n\n        // Filtrar solo las recetas que coinciden con el id de la receta\n        const filtered = allData.filter(p => p.id.prescriptionId == prescriptionId);\n        if (filtered.length > 0) {\n          // Agrupar los datos por prescriptionId para consolidar las medicinas\n          const grouped = {};\n          filtered.forEach(p => {\n            const prescId = p.id.prescriptionId;\n            if (!grouped[prescId]) {\n              grouped[prescId] = {\n                ...p,\n                // Copiar todas las propiedades\n                medicines: []\n              };\n            }\n            grouped[prescId].medicines.push({\n              ...p.medicine,\n              dosis: p.dosis,\n              frecuencia: p.frecuencia,\n              duracion: p.duracion\n            });\n          });\n          receta.value = grouped[prescriptionId];\n          console.log('Receta procesada:', receta.value);\n        } else {\n          error.value = 'No se encontró la receta.';\n          receta.value = null;\n        }\n      } catch (err) {\n        console.error('Error al obtener la receta:', err);\n        error.value = err.message || 'Error al cargar la receta';\n        receta.value = null;\n      } finally {\n        isLoading.value = false;\n      }\n    }\n\n    // Cargar la receta al montar el componente\n    onMounted(() => {\n      fetchReceta();\n    });\n    const __returned__ = {\n      route,\n      router,\n      ip,\n      isLoading,\n      receta,\n      error,\n      pharmacy,\n      pharmacy_port,\n      puedeComprar,\n      goBack,\n      procesarCompra,\n      fetchReceta,\n      ref,\n      computed,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRoute","useRouter","axios","route","router","ip","process","env","VUE_APP_API_IP","isLoading","receta","error","pharmacy","parseInt","window","location","port","pharmacy_port","puedeComprar","value","medicines","length","goBack","back","procesarCompra","push","name","params","id","prescriptionId","fetchReceta","Error","response","get","allData","data","filtered","filter","p","grouped","forEach","prescId","medicine","dosis","frecuencia","duracion","console","log","err","message"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/DetalleReceta.vue"],"sourcesContent":["<template>\n  <div class=\"recipe-detail-container\">\n    <h1 class=\"title\">Detalle de la Receta</h1>\n    \n    <!-- Indicador de carga -->\n    <div v-if=\"isLoading\" class=\"loading-section\">\n      <div class=\"loading-spinner\"></div>\n      <p>Cargando receta...</p>\n    </div>\n    \n    <!-- Mensaje de error si no se encuentra la receta -->\n    <div v-else-if=\"!receta\" class=\"error-section\">\n      <p>{{ error || 'No se encontró la receta.' }}</p>\n      <button @click=\"fetchReceta\" class=\"retry-button\">Intentar de nuevo</button>\n    </div>\n    \n    <!-- Detalle de la receta -->\n    <div v-else class=\"recipe-card\">\n      <div class=\"recipe-header\">\n        <h2>Receta #{{ receta.id.prescriptionId }}</h2>\n        <span class=\"recipe-date\">{{ receta.prescription.date }}</span>\n      </div>\n      \n      <div class=\"recipe-info\">\n        <div class=\"info-section\">\n          <h3>Información General</h3>\n          <div class=\"info-grid\">\n            <div class=\"info-item\">\n              <span class=\"label\">Doctor:</span>\n              <span class=\"value\">{{ receta.prescription.doctor.name }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">Diagnóstico:</span>\n              <span class=\"value\">{{ receta.prescription.diagnosis }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">Paciente:</span>\n              <span class=\"value\">{{ receta.prescription.user.name }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">Email:</span>\n              <span class=\"value\">{{ receta.prescription.user.email }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">Hospital:</span>\n              <span class=\"value\">{{ receta.prescription.hospital.name }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"medications-section\">\n          <h3>Medicamentos</h3>\n          <div v-if=\"receta.medicines && receta.medicines.length\" class=\"medications-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Medicamento</th>\n                  <th>Concentración</th>\n                  <th>Presentación</th>\n                  <th>Dosis</th>\n                  <th>Frecuencia</th>\n                  <th>Duración</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"medicine in receta.medicines\" :key=\"medicine.idMedicine\">\n                  <td>{{ medicine.name }}</td>\n                  <td>{{ medicine.concentration }}</td>\n                  <td>{{ medicine.presentacion }}</td>\n                  <td>{{ medicine.dosis }}</td>\n                  <td>{{ medicine.frecuencia }} horas</td>\n                  <td>{{ medicine.duracion }} días</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <p v-else class=\"no-medicines\">No hay medicamentos registrados en esta receta.</p>\n        </div>\n        \n        <div class=\"recipe-actions\">\n          <button @click=\"goBack\" class=\"back-button\">Volver</button>\n          <button @click=\"procesarCompra\" class=\"buy-button\" v-if=\"puedeComprar\">Comprar</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nconst route = useRoute();\nconst router = useRouter();\nconst ip = process.env.VUE_APP_API_IP || 'localhost';\n\n// Estado\nconst isLoading = ref(true);\nconst receta = ref(null);\nconst error = ref(null);\nconst pharmacy = parseInt(window.location.port);\nconst pharmacy_port = pharmacy-30;\n// Propiedades computadas\nconst puedeComprar = computed(() => {\n  return receta.value && receta.value.medicines && receta.value.medicines.length > 0;\n});\n\nfunction goBack() {\n  router.back();\n}\n\nfunction procesarCompra() {\n  // Redireccionar a la página de compra con la receta\n  router.push({\n    name: 'PrescriptionPay',\n    params: { id: receta.value.id.prescriptionId }\n  });\n}\n\nasync function fetchReceta() {\n  isLoading.value = true;\n  error.value = null;\n  \n  try {\n    const prescriptionId = route.params.id;\n    if (!prescriptionId) {\n      throw new Error('ID de receta no proporcionado');\n    }\n    \n    // Usar la misma API que funciona en PrescriptionPay\n    const response = await axios.get(`http://${ip}:8081/api2/prescription_medicines`);\n    const allData = response.data;\n    \n    // Filtrar solo las recetas que coinciden con el id de la receta\n    const filtered = allData.filter(p => p.id.prescriptionId == prescriptionId);\n\n    if (filtered.length > 0) {\n      // Agrupar los datos por prescriptionId para consolidar las medicinas\n      const grouped = {};\n      filtered.forEach(p => {\n        const prescId = p.id.prescriptionId;\n        if (!grouped[prescId]) {\n          grouped[prescId] = {\n            ...p, // Copiar todas las propiedades\n            medicines: []\n          };\n        }\n        grouped[prescId].medicines.push({\n          ...p.medicine,\n          dosis: p.dosis,\n          frecuencia: p.frecuencia,\n          duracion: p.duracion\n        });\n      });\n      \n      receta.value = grouped[prescriptionId];\n      console.log('Receta procesada:', receta.value);\n    } else {\n      error.value = 'No se encontró la receta.';\n      receta.value = null;\n    }\n  } catch (err) {\n    console.error('Error al obtener la receta:', err);\n    error.value = err.message || 'Error al cargar la receta';\n    receta.value = null;\n  } finally {\n    isLoading.value = false;\n  }\n}\n\n// Cargar la receta al montar el componente\nonMounted(() => {\n  fetchReceta();\n});\n</script>\n\n<style scoped>\n.recipe-detail-container {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.title {\n  text-align: center;\n  font-size: 2rem;\n  color: #1e40af;\n  margin-bottom: 2rem;\n}\n\n.loading-section, .error-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  text-align: center;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #e2e8f0;\n  border-top: 4px solid #1e40af;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.retry-button {\n  padding: 0.5rem 1rem;\n  background-color: #1e40af;\n  color: white;\n  border: none;\n  border-radius: 0.25rem;\n  cursor: pointer;\n  margin-top: 1rem;\n}\n\n.recipe-card {\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.recipe-header {\n  background-color: #1e40af;\n  color: white;\n  padding: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.recipe-header h2 {\n  margin: 0;\n  font-size: 1.5rem;\n}\n\n.recipe-date {\n  font-size: 0.875rem;\n  opacity: 0.9;\n}\n\n.recipe-info {\n  padding: 1.5rem;\n}\n\n.info-section, .medications-section {\n  margin-bottom: 2rem;\n}\n\n.info-section h3, .medications-section h3 {\n  border-bottom: 2px solid #e2e8f0;\n  padding-bottom: 0.5rem;\n  margin-bottom: 1rem;\n  color: #1e40af;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n}\n\n.label {\n  font-size: 0.875rem;\n  color: #64748b;\n  margin-bottom: 0.25rem;\n}\n\n.value {\n  font-weight: 500;\n}\n\n.medications-table {\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  padding: 0.75rem;\n  border-bottom: 1px solid #e2e8f0;\n  text-align: left;\n}\n\nth {\n  background-color: #f1f5f9;\n  font-weight: 600;\n}\n\n.no-medicines {\n  color: #64748b;\n  font-style: italic;\n  text-align: center;\n  padding: 1rem;\n}\n\n.recipe-actions {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n}\n\n.back-button, .buy-button {\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.25rem;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.back-button {\n  background-color: #e2e8f0;\n  color: #334155;\n}\n\n.buy-button {\n  background-color: #16a34a;\n  color: white;\n}\n\n@media (max-width: 640px) {\n  .recipe-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .recipe-date {\n    margin-top: 0.5rem;\n  }\n  \n  .info-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .recipe-actions {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .back-button, .buy-button {\n    width: 100%;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}