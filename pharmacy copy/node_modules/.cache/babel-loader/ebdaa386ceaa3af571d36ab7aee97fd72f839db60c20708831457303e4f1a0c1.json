{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"prescription-pay-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"mb-4 text-red-600 text-center\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"medicine-table\"\n};\nconst _hoisted_6 = {\n  key: 2\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-bold text-center text-blue-800 mb-4\"\n  }, \"Detalle de la Receta\", -1 /* HOISTED */)), _createCommentVNode(\" Mensaje de error si lo hay \"), _ctx.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_ctx.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Mostrar la receta cuando se cargue \"), _ctx.prescription ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"ID Receta:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.prescription.idPrescription), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Diagnóstico:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.prescription.diagnosis || 'No especificado'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Fecha:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.prescription.date || 'No disponible'), 1 /* TEXT */)]), _createCommentVNode(\" Tabla de Medicinas si existen \"), _ctx.prescription.medicines && _ctx.prescription.medicines.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Nombre\"), _createElementVNode(\"th\", null, \"Concentración\"), _createElementVNode(\"th\", null, \"Presentación\"), _createElementVNode(\"th\", null, \"Dosis\"), _createElementVNode(\"th\", null, \"Frecuencia\"), _createElementVNode(\"th\", null, \"Duración\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.prescription.medicines, medicine => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: medicine.idMedicine\n    }, [_createElementVNode(\"td\", null, _toDisplayString(medicine.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicine.concentration), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicine.presentacion), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicine.dosis), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicine.frecuencia), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(medicine.duracion) + \" días\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[4] || (_cache[4] = [_createElementVNode(\"p\", null, \"Cargando receta...\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_ctx","errorMessage","_hoisted_2","_toDisplayString","prescription","_hoisted_3","_createTextVNode","idPrescription","diagnosis","date","medicines","length","_hoisted_4","_hoisted_5","_Fragment","_renderList","medicine","idMedicine","name","concentration","presentacion","dosis","frecuencia","duracion","_hoisted_6","_cache"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/PrescriptionPay.vue"],"sourcesContent":["<template>\n  <div class=\"prescription-pay-container\">\n    <h2 class=\"text-2xl font-bold text-center text-blue-800 mb-4\">Detalle de la Receta</h2>\n\n    <!-- Mensaje de error si lo hay -->\n    <div v-if=\"errorMessage\" class=\"mb-4 text-red-600 text-center\">\n      {{ errorMessage }}\n    </div>\n\n    <!-- Mostrar la receta cuando se cargue -->\n    <div v-if=\"prescription\">\n      <p><strong>ID Receta:</strong> {{ prescription.idPrescription }}</p>\n      <p><strong>Diagnóstico:</strong> {{ prescription.diagnosis || 'No especificado' }}</p>\n      <p><strong>Fecha:</strong> {{ prescription.date || 'No disponible' }}</p>\n\n      <!-- Tabla de Medicinas si existen -->\n      <div v-if=\"prescription.medicines && prescription.medicines.length > 0\">\n        <table class=\"medicine-table\">\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Concentración</th>\n              <th>Presentación</th>\n              <th>Dosis</th>\n              <th>Frecuencia</th>\n              <th>Duración</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"medicine in prescription.medicines\" :key=\"medicine.idMedicine\">\n              <td>{{ medicine.name }}</td>\n              <td>{{ medicine.concentration }}</td>\n              <td>{{ medicine.presentacion }}</td>\n              <td>{{ medicine.dosis }}</td>\n              <td>{{ medicine.frecuencia }}</td>\n              <td>{{ medicine.duracion }} días</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div v-else>\n      <p>Cargando receta...</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\n\nconst route = useRoute();\nconst prescription = ref(null);\nconst errorMessage = ref('');\nconst ip = process.env.VUE_APP_API_IP || 'localhost';\n\nconst fetchPrescription = async () => {\n  try {\n    const prescriptionId = route.params.id;\n    // Fetch all prescription medicines as in Prescriptions.vue\n    const response = await axios.get(`http://${ip}:8081/api2/prescription_medicines`);\n    const allData = response.data;\n    // Filtrar solo las recetas que coinciden con el id de la receta\n    const filtered = allData.filter(p => p.id.prescriptionId == prescriptionId);\n\n    if (filtered.length > 0) {\n      // Agrupar los datos por prescriptionId para consolidar las medicinas\n      const grouped = {};\n      filtered.forEach(p => {\n        const prescId = p.id.prescriptionId;\n        if (!grouped[prescId]) {\n          grouped[prescId] = {\n            ...p, // Copy all properties of p (including idPrescription, approved, hospital, user, etc.)\n            medicines: []\n          };\n        }\n        grouped[prescId].medicines.push({\n          ...p.medicine,\n          dosis: p.dosis,\n          frecuencia: p.frecuencia,\n          duracion: p.duracion\n        });\n      });\n      prescription.value = grouped[prescriptionId];\n      console.log(prescription.id:.value)\n    } else {\n      errorMessage.value = 'No se encontró la receta.';\n    }\n  } catch (error) {\n    console.error('Error al obtener la receta:', error);\n    errorMessage.value = 'Error al obtener la receta. Por favor, inténtelo de nuevo.';\n  }\n};\n\nonMounted(() => {\n  fetchPrescription();\n});\n</script>\n\n<style scoped>\n.prescription-pay-container {\n  padding: 50px;\n  background-color: #f8f9fa;\n}\n\n.medicine-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\n\n.medicine-table th, .medicine-table td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: center;\n}\n\n.medicine-table th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAA4B;;EADzCC,GAAA;EAK6BD,KAAK,EAAC;;;EALnCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAiBeD,KAAK,EAAC;AAAgB;;EAjBrCC,GAAA;AAAA;;uBACEC,mBAAA,CA2CM,OA3CNC,UA2CM,G,0BA1CJC,mBAAA,CAAuF;IAAnFJ,KAAK,EAAC;EAAmD,GAAC,sBAAoB,sBAElFK,mBAAA,gCAAmC,EACxBC,IAAA,CAAAC,YAAY,I,cAAvBL,mBAAA,CAEM,OAFNM,UAEM,EAAAC,gBAAA,CADDH,IAAA,CAAAC,YAAY,oBANrBF,mBAAA,gBASIA,mBAAA,wCAA2C,EAChCC,IAAA,CAAAI,YAAY,I,cAAvBR,mBAAA,CA8BM,OAxCVS,UAAA,GAWMP,mBAAA,CAAoE,Y,0BAAjEA,mBAAA,CAA2B,gBAAnB,YAAU,sBAX3BQ,gBAAA,CAWoC,GAAC,GAAAH,gBAAA,CAAGH,IAAA,CAAAI,YAAY,CAACG,cAAc,iB,GAC7DT,mBAAA,CAAsF,Y,0BAAnFA,mBAAA,CAA6B,gBAArB,cAAY,sBAZ7BQ,gBAAA,CAYsC,GAAC,GAAAH,gBAAA,CAAGH,IAAA,CAAAI,YAAY,CAACI,SAAS,sC,GAC1DV,mBAAA,CAAyE,Y,0BAAtEA,mBAAA,CAAuB,gBAAf,QAAM,sBAbvBQ,gBAAA,CAagC,GAAC,GAAAH,gBAAA,CAAGH,IAAA,CAAAI,YAAY,CAACK,IAAI,oC,GAE/CV,mBAAA,mCAAsC,EAC3BC,IAAA,CAAAI,YAAY,CAACM,SAAS,IAAIV,IAAA,CAAAI,YAAY,CAACM,SAAS,CAACC,MAAM,Q,cAAlEf,mBAAA,CAuBM,OAvCZgB,UAAA,GAiBQd,mBAAA,CAqBQ,SArBRe,UAqBQ,G,0BApBNf,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAiB,YAAb,UAAQ,E,wBAGhBA,mBAAA,CASQ,iB,kBARNF,mBAAA,CAOKkB,SAAA,QApCjBC,WAAA,CA6BmCf,IAAA,CAAAI,YAAY,CAACM,SAAS,EAAlCM,QAAQ;yBAAnBpB,mBAAA,CAOK;MAP2CD,GAAG,EAAEqB,QAAQ,CAACC;QAC5DnB,mBAAA,CAA4B,YAAAK,gBAAA,CAArBa,QAAQ,CAACE,IAAI,kBACpBpB,mBAAA,CAAqC,YAAAK,gBAAA,CAA9Ba,QAAQ,CAACG,aAAa,kBAC7BrB,mBAAA,CAAoC,YAAAK,gBAAA,CAA7Ba,QAAQ,CAACI,YAAY,kBAC5BtB,mBAAA,CAA6B,YAAAK,gBAAA,CAAtBa,QAAQ,CAACK,KAAK,kBACrBvB,mBAAA,CAAkC,YAAAK,gBAAA,CAA3Ba,QAAQ,CAACM,UAAU,kBAC1BxB,mBAAA,CAAqC,YAAAK,gBAAA,CAA9Ba,QAAQ,CAACO,QAAQ,IAAG,OAAK,gB;0CAnC9CxB,mBAAA,e,oBAyCIH,mBAAA,CAEM,OA3CV4B,UAAA,EAAAC,MAAA,QAAAA,MAAA,OA0CM3B,mBAAA,CAAyB,WAAtB,oBAAkB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}