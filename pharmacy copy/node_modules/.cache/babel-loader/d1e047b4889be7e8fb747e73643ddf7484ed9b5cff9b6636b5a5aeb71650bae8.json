{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useUserStore } from '@/stores/userStore';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n\n// Control del men√∫ m√≥vil\n\nexport default {\n  __name: 'Header',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const mobileMenuOpen = ref(false);\n    const toggleMenu = () => {\n      mobileMenuOpen.value = !mobileMenuOpen.value;\n    };\n\n    // Store de usuario\n    const userStore = useUserStore();\n    const router = useRouter();\n\n    // Verifica si hay usuario loggeado\n    const isLoggedIn = computed(() => userStore.user !== null);\n\n    // Variable local para mostrar el rol del usuario\n    const userRole = ref('');\n\n    // Cuando se monta el componente, si el usuario est√° loggeado, llama al API para obtener el rol\n    onMounted(() => {\n      if (isLoggedIn.value) {\n        getUserRole();\n      }\n    });\n\n    /**\n     * Ejemplo de funci√≥n que llama a la API para obtener el rol del usuario.\n     * Ajusta la URL y la forma en que recibes el rol seg√∫n tu backend.\n     */\n    async function getUserRole() {\n      try {\n        // Si tu backend requiere token, agr√©galo en los headers\n        const response = await axios.get('http://localhost:8080/api2/getUserRole');\n        // Asume que la respuesta viene como { role: \"admin\" } o similar\n        userRole.value = response.data.role;\n      } catch (error) {\n        console.error('Error obteniendo rol del usuario:', error);\n        // En caso de error, podr√≠as mostrar un mensaje o manejarlo seg√∫n tu l√≥gica\n      }\n    }\n\n    // Cerrar sesi√≥n\n    const logout = () => {\n      userStore.logout();\n      router.push('/');\n    };\n    const __returned__ = {\n      mobileMenuOpen,\n      toggleMenu,\n      userStore,\n      router,\n      isLoggedIn,\n      userRole,\n      getUserRole,\n      logout,\n      ref,\n      computed,\n      onMounted,\n      get useUserStore() {\n        return useUserStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useUserStore","useRouter","axios","mobileMenuOpen","toggleMenu","value","userStore","router","isLoggedIn","user","userRole","getUserRole","response","get","data","role","error","console","logout","push"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/components/Header.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <header class=\"navbar\">\n    <div class=\"navbar-content\">\n      <!-- Logo -->\n      <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\" />\n\n      <!-- Men√∫ de Navegaci√≥n (versi√≥n desktop) -->\n      <nav class=\"nav-links hidden md:flex\">\n        <router-link to=\"/\" class=\"nav-item\">Inicio</router-link>\n        <router-link to=\"/ofertas\" class=\"nav-item\">Ofertas</router-link>\n        <router-link to=\"/catalogo\" class=\"nav-item\">Cat√°logo de Productos</router-link>\n        <router-link to=\"/receta\" class=\"nav-item\">Receta</router-link>\n        <router-link to=\"/contact\" class=\"nav-item\">Contacto</router-link>\n\n        <!-- Si el usuario est√° loggeado -->\n        <template v-if=\"isLoggedIn\">\n          <!-- Muestra el rol -->\n          <span class=\"logged-user-message\">\n            Usted est√° loggeado como: {{ userRole }}\n          </span>\n          <!-- Bot√≥n para cerrar sesi√≥n -->\n          <button @click=\"logout\" class=\"login-button\">Cerrar Sesi√≥n</button>\n        </template>\n\n        <!-- Si NO est√° loggeado, muestra el bot√≥n de Iniciar Sesi√≥n -->\n        <template v-else>\n          <router-link to=\"/login\" class=\"login-button\">üîë Iniciar Sesi√≥n</router-link>\n        </template>\n      </nav>\n\n      <!-- Bot√≥n de men√∫ hamburguesa (m√≥vil) -->\n      <button @click=\"toggleMenu\" class=\"menu-button md:hidden\">‚ò∞</button>\n    </div>\n\n    <!-- Men√∫ desplegable en m√≥viles -->\n    <div v-if=\"mobileMenuOpen\" class=\"mobile-menu\">\n      <router-link to=\"/\" class=\"mobile-item\" @click=\"toggleMenu\">Inicio</router-link>\n      <router-link to=\"/ofertas\" class=\"mobile-item\" @click=\"toggleMenu\">Ofertas</router-link>\n      <router-link to=\"/catalogo\" class=\"mobile-item\" @click=\"toggleMenu\">Cat√°logo de Productos</router-link>\n      <router-link to=\"/contact\" class=\"mobile-item\" @click=\"toggleMenu\">Contacto</router-link>\n\n      <!-- Si est√° loggeado, muestra rol y bot√≥n de logout en el men√∫ m√≥vil -->\n      <template v-if=\"isLoggedIn\">\n        <span class=\"logged-user-message\" style=\"color:white;\">\n          Usted est√° loggeado como: {{ userRole }}\n        </span>\n        <button @click=\"logout; toggleMenu()\" class=\"mobile-login\">Cerrar Sesi√≥n</button>\n      </template>\n      <!-- Si NO est√° loggeado, muestra bot√≥n de login en el men√∫ m√≥vil -->\n      <template v-else>\n        <router-link to=\"/login\" class=\"mobile-login\" @click=\"toggleMenu\">üîë Iniciar Sesi√≥n</router-link>\n      </template>\n    </div>\n  </header>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useUserStore } from '@/stores/userStore';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n\n// Control del men√∫ m√≥vil\nconst mobileMenuOpen = ref(false);\nconst toggleMenu = () => {\n  mobileMenuOpen.value = !mobileMenuOpen.value;\n};\n\n// Store de usuario\nconst userStore = useUserStore();\nconst router = useRouter();\n\n// Verifica si hay usuario loggeado\nconst isLoggedIn = computed(() => userStore.user !== null);\n\n// Variable local para mostrar el rol del usuario\nconst userRole = ref('');\n\n// Cuando se monta el componente, si el usuario est√° loggeado, llama al API para obtener el rol\nonMounted(() => {\n  if (isLoggedIn.value) {\n    getUserRole();\n  }\n});\n\n/**\n * Ejemplo de funci√≥n que llama a la API para obtener el rol del usuario.\n * Ajusta la URL y la forma en que recibes el rol seg√∫n tu backend.\n */\nasync function getUserRole() {\n  try {\n    // Si tu backend requiere token, agr√©galo en los headers\n    const response = await axios.get('http://localhost:8080/api2/getUserRole');\n    // Asume que la respuesta viene como { role: \"admin\" } o similar\n    userRole.value = response.data.role;\n  } catch (error) {\n    console.error('Error obteniendo rol del usuario:', error);\n    // En caso de error, podr√≠as mostrar un mensaje o manejarlo seg√∫n tu l√≥gica\n  }\n}\n\n// Cerrar sesi√≥n\nconst logout = () => {\n  userStore.logout();\n  router.push('/');\n};\n</script>\n\n<style scoped>\n/* Estilos del Navbar */\n.navbar {\n  background: #1e40af; /* Azul fuerte */\n  padding: 15px 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* Contenedor del navbar */\n.navbar-content {\n  width: 100%;\n  max-width: 1200px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n/* Logo */\n.logo {\n  height: 50px;\n}\n\n/* Enlaces del men√∫ */\n.nav-links {\n  display: flex;\n  gap: 20px;\n}\n\n.nav-item {\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n  text-decoration: none;\n  transition: color 0.3s;\n}\n\n.nav-item:hover {\n  color: yellow;\n}\n\n/* Bot√≥n de iniciar sesi√≥n */\n.login-button {\n  background: white;\n  color: #1e40af;\n  padding: 8px 15px;\n  border-radius: 5px;\n  font-weight: bold;\n  transition: background 0.3s, color 0.3s;\n  text-decoration: none;\n  margin-left: 1rem;\n}\n\n.login-button:hover {\n  background: #f3f3f3;\n}\n\n/* Mensaje de usuario logueado */\n.logged-user-message {\n  color: white;\n  font-weight: bold;\n  margin-right: 1rem;\n}\n\n/* Men√∫ hamburguesa */\n.menu-button {\n  font-size: 24px;\n  color: white;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n}\n\n/* Men√∫ desplegable en m√≥viles */\n.mobile-menu {\n  background: #1e40af;\n  position: absolute;\n  top: 60px;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding: 15px 0;\n}\n\n.mobile-item {\n  color: white;\n  font-size: 18px;\n  padding: 10px;\n  text-decoration: none;\n}\n\n.mobile-item:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.mobile-login {\n  background: white;\n  color: #1e40af;\n  padding: 10px;\n  text-decoration: none;\n  font-weight: bold;\n  margin-top: 0.5rem;\n}\n</style>"],"mappings":";AA0DA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,cAAc,GAAGN,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMO,UAAU,GAAGA,CAAA,KAAM;MACvBD,cAAc,CAACE,KAAK,GAAG,CAACF,cAAc,CAACE,KAAK;IAC9C,CAAC;;IAED;IACA,MAAMC,SAAS,GAAGN,YAAY,CAAC,CAAC;IAChC,MAAMO,MAAM,GAAGN,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMO,UAAU,GAAGV,QAAQ,CAAC,MAAMQ,SAAS,CAACG,IAAI,KAAK,IAAI,CAAC;;IAE1D;IACA,MAAMC,QAAQ,GAAGb,GAAG,CAAC,EAAE,CAAC;;IAExB;IACAE,SAAS,CAAC,MAAM;MACd,IAAIS,UAAU,CAACH,KAAK,EAAE;QACpBM,WAAW,CAAC,CAAC;MACf;IACF,CAAC,CAAC;;IAEF;AACA;AACA;AACA;IACA,eAAeA,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,wCAAwC,CAAC;QAC1E;QACAH,QAAQ,CAACL,KAAK,GAAGO,QAAQ,CAACE,IAAI,CAACC,IAAI;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzD;MACF;IACF;;IAEA;IACA,MAAME,MAAM,GAAGA,CAAA,KAAM;MACnBZ,SAAS,CAACY,MAAM,CAAC,CAAC;MAClBX,MAAM,CAACY,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}