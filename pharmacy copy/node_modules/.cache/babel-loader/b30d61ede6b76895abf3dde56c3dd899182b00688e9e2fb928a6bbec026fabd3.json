{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../pages/Home.vue'; // Ajustar rutas relativas\nimport Login from '../pages/Login.vue';\nimport Dashboard from '../pages/Dashboard.vue';\nimport Register from '../pages/Register.vue';\nimport Catalogo from '../pages/Catalogo.vue';\nimport Aseguradoras from '@/pages/Aseguradoras.vue';\nimport Ofertas from '@/pages/Ofertas.vue';\nimport ProductoDetalle from '@/pages/ProductoDetalle.vue'; // new import\nimport Receta from '@/components/Receta.vue';\nimport CreateProduct from '@/pages/CreateProduct.vue';\nimport Prescriptions from '@/pages/Prescriptions.vue';\nimport { authService } from '@/services/authService';\nimport PrescriptionPay from \"@/pages/PrescriptionPay.vue\";\n\n// Rutas para usuarios públicos y autenticados\nconst userRoutes = [{\n  path: '/',\n  component: Home\n}, {\n  path: '/login',\n  component: Login\n}, {\n  path: '/register',\n  component: Register\n}, {\n  path: '/catalogo',\n  component: Catalogo\n}, {\n  path: '/aseguradoras',\n  component: Aseguradoras\n}, {\n  path: '/ofertas',\n  component: Ofertas\n}, {\n  path: '/producto/:id',\n  name: 'ProductoDetalle',\n  component: ProductoDetalle\n}, {\n  path: '/receta',\n  component: Receta\n}, {\n  path: '/create-product',\n  name: 'CreateProduct',\n  component: CreateProduct\n}, {\n  path: '/prescriptions',\n  name: 'Prescriptions',\n  component: Prescriptions\n}, {\n  path: '/dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/prescriptionpay/:id',\n  name: 'PrescriptionPay',\n  component: PrescriptionPay\n}];\n\n// Rutas exclusivas para administradores\nconst adminRoutes = [{\n  path: '/admin/create-product',\n  name: 'AdminCreateProduct',\n  component: CreateProduct,\n  meta: {\n    admin: true\n  }\n}];\nconst routes = [...userRoutes, ...adminRoutes];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const adminOnly = to.matched.some(record => record.meta.admin);\n  const currentUser = authService.getCurrentUser();\n  if (requiresAuth && !currentUser) {\n    next('/login');\n  } else if (adminOnly) {\n    if (currentUser && currentUser.role === 'admin') {\n      next();\n    } else {\n      next('/'); // Redirige o muestra una página de acceso denegado\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","Dashboard","Register","Catalogo","Aseguradoras","Ofertas","ProductoDetalle","Receta","CreateProduct","Prescriptions","authService","PrescriptionPay","userRoutes","path","component","name","meta","requiresAuth","adminRoutes","admin","routes","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","adminOnly","currentUser","getCurrentUser","role"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../pages/Home.vue'; // Ajustar rutas relativas\nimport Login from '../pages/Login.vue';\nimport Dashboard from '../pages/Dashboard.vue';\nimport Register from '../pages/Register.vue';\nimport Catalogo from '../pages/Catalogo.vue';\nimport Aseguradoras from '@/pages/Aseguradoras.vue';\nimport Ofertas from '@/pages/Ofertas.vue';\nimport ProductoDetalle from '@/pages/ProductoDetalle.vue'; // new import\nimport Receta from '@/components/Receta.vue';\nimport CreateProduct from '@/pages/CreateProduct.vue';\nimport Prescriptions from '@/pages/Prescriptions.vue';\nimport { authService } from '@/services/authService';\nimport PrescriptionPay from \"@/pages/PrescriptionPay.vue\";\n\n// Rutas para usuarios públicos y autenticados\nconst userRoutes = [\n  { path: '/', component: Home },\n  { path: '/login', component: Login },\n  { path: '/register', component: Register },\n  { path: '/catalogo', component: Catalogo },\n  { path: '/aseguradoras', component: Aseguradoras },\n  { path: '/ofertas', component: Ofertas },\n  { path: '/producto/:id', name: 'ProductoDetalle', component: ProductoDetalle },\n  { path: '/receta', component: Receta },\n  { path: '/create-product', name: 'CreateProduct', component: CreateProduct },\n  { path: '/prescriptions', name: 'Prescriptions', component: Prescriptions },\n  { path: '/dashboard', component: Dashboard, meta: { requiresAuth: true } },\n  { path: '/prescriptionpay/:id', name:'PrescriptionPay', component: PrescriptionPay}\n];\n\n// Rutas exclusivas para administradores\nconst adminRoutes = [\n  {\n    path: '/admin/create-product',\n    name: 'AdminCreateProduct',\n    component: CreateProduct,\n    meta: { admin: true }\n  }\n];\n\nconst routes = [\n  ...userRoutes,\n  ...adminRoutes\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const adminOnly = to.matched.some(record => record.meta.admin);\n  const currentUser = authService.getCurrentUser();\n\n  if (requiresAuth && !currentUser) {\n    next('/login');\n  } else if (adminOnly) {\n    if (currentUser && currentUser.role === 'admin') {\n      next();\n    } else {\n      next('/'); // Redirige o muestra una página de acceso denegado\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}