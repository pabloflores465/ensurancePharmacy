{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed } from 'vue';\nimport axios from 'axios';\nimport { useUserStore } from '@/stores/userStore';\nimport ProductComments from './Comentarios.vue';\nexport default {\n  name: 'ProductComments',\n  // Renamed from 'Comentarios ' to 'ProductComments'\n  props: {\n    initialComments: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const comments = ref([...props.initialComments]);\n    const newCommentText = ref('');\n    const userStore = useUserStore();\n    const isAdmin = computed(() => userStore.user && userStore.user.role === 'admin');\n    const filteredComments = computed(() => comments.value.filter(comment => comment.enabled !== false));\n    const addComment = () => {\n      // Use the client's name from userStore; default to 'Anónimo' if not available\n      const author = userStore.user && userStore.user.name ? userStore.user.name : 'Anónimo';\n      if (newCommentText.value) {\n        comments.value.push({\n          id: Date.now(),\n          author: author,\n          text: newCommentText.value,\n          enabled: true,\n          children: []\n        });\n        newCommentText.value = '';\n      }\n    };\n    const deleteComment = comment => {\n      // Opcional: Enviar petición PUT a la API para actualizar el comentario\n      axios.put(`http://tu-api-url/comments/${comment.id}`, {\n        enabled: false\n      }).then(() => {\n        comment.enabled = false;\n      }).catch(error => {\n        console.error('Error al eliminar el comentario:', error);\n      });\n    };\n    return {\n      comments,\n      filteredComments,\n      newCommentText,\n      addComment,\n      deleteComment,\n      isAdmin,\n      ProductComments\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","axios","useUserStore","ProductComments","name","props","initialComments","type","Array","default","setup","comments","newCommentText","userStore","isAdmin","user","role","filteredComments","value","filter","comment","enabled","addComment","author","push","id","Date","now","text","children","deleteComment","put","then","catch","error","console"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/components/Comentarios.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div class=\"comments-container\">\n    <h3>Comentarios</h3>\n    <div v-if=\"filteredComments.length\">\n      <div v-for=\"comment in filteredComments\" :key=\"comment.id\" class=\"comment\">\n        <p><strong>{{ comment.author }}</strong>:</p>\n        <p>{{ comment.text }}</p>\n        <button v-if=\"isAdmin\" @click=\"deleteComment(comment)\">Eliminar</button>\n        <!-- Renderizado recursivo de comentarios hijos -->\n        <ProductComments v-if=\"comment.children && comment.children.length\" :initialComments=\"comment.children\" />\n      </div>\n    </div>\n    <div v-else>\n      <p>No hay comentarios aún.</p>\n    </div>\n    <div class=\"add-comment\">\n      <textarea v-model=\"newCommentText\" placeholder=\"Escribe un comentario...\"></textarea>\n      <button @click=\"addComment\">Agregar Comentario</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\nimport axios from 'axios';\nimport { useUserStore } from '@/stores/userStore';\nimport ProductComments from './Comentarios.vue';\n\nexport default {\n  name: 'ProductComments', // Renamed from 'Comentarios ' to 'ProductComments'\n  props: {\n    initialComments: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const comments = ref([...props.initialComments]);\n    const newCommentText = ref('');\n\n    const userStore = useUserStore();\n\n    const isAdmin = computed(() => userStore.user && userStore.user.role === 'admin');\n\n    const filteredComments = computed(() =>\n      comments.value.filter(comment => comment.enabled !== false)\n    );\n\n    const addComment = () => {\n      // Use the client's name from userStore; default to 'Anónimo' if not available\n      const author = userStore.user && userStore.user.name ? userStore.user.name : 'Anónimo';\n      if (newCommentText.value) {\n        comments.value.push({\n          id: Date.now(),\n          author: author,\n          text: newCommentText.value,\n          enabled: true,\n          children: []\n        });\n        newCommentText.value = '';\n      }\n    };\n\n    const deleteComment = (comment) => {\n      // Opcional: Enviar petición PUT a la API para actualizar el comentario\n      axios.put(`http://tu-api-url/comments/${comment.id}`, { enabled: false })\n        .then(() => {\n          comment.enabled = false;\n        })\n        .catch(error => {\n          console.error('Error al eliminar el comentario:', error);\n        });\n    };\n\n    return {\n      comments,\n      filteredComments,\n      newCommentText,\n      addComment,\n      deleteComment,\n      isAdmin,\n      ProductComments\n    };\n  }\n};\n</script>\n\n<style scoped>\n.comments-container {\n  margin-top: 20px;\n}\n\n.comment {\n  margin-left: 20px;\n  border-left: 1px solid #ccc;\n  padding-left: 10px;\n  margin-bottom: 10px;\n}\n\n.add-comment {\n  margin-top: 20px;\n}\n\n.add-comment textarea {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.add-comment button {\n  padding: 10px 15px;\n  background: #1e40af;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.add-comment button:hover {\n  background: #1e3a8a;\n}\n</style>\n"],"mappings":";;;AAwBA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,YAAW,QAAS,oBAAoB;AACjD,OAAOC,eAAc,MAAO,mBAAmB;AAE/C,eAAe;EACbC,IAAI,EAAE,iBAAiB;EAAE;EACzBC,KAAK,EAAE;IACLC,eAAe,EAAE;MACfC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,QAAO,GAAIZ,GAAG,CAAC,CAAC,GAAGM,KAAK,CAACC,eAAe,CAAC,CAAC;IAChD,MAAMM,cAAa,GAAIb,GAAG,CAAC,EAAE,CAAC;IAE9B,MAAMc,SAAQ,GAAIX,YAAY,CAAC,CAAC;IAEhC,MAAMY,OAAM,GAAId,QAAQ,CAAC,MAAMa,SAAS,CAACE,IAAG,IAAKF,SAAS,CAACE,IAAI,CAACC,IAAG,KAAM,OAAO,CAAC;IAEjF,MAAMC,gBAAe,GAAIjB,QAAQ,CAAC,MAChCW,QAAQ,CAACO,KAAK,CAACC,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACC,OAAM,KAAM,KAAK,CAC5D,CAAC;IAED,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvB;MACA,MAAMC,MAAK,GAAIV,SAAS,CAACE,IAAG,IAAKF,SAAS,CAACE,IAAI,CAACX,IAAG,GAAIS,SAAS,CAACE,IAAI,CAACX,IAAG,GAAI,SAAS;MACtF,IAAIQ,cAAc,CAACM,KAAK,EAAE;QACxBP,QAAQ,CAACO,KAAK,CAACM,IAAI,CAAC;UAClBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UACdJ,MAAM,EAAEA,MAAM;UACdK,IAAI,EAAEhB,cAAc,CAACM,KAAK;UAC1BG,OAAO,EAAE,IAAI;UACbQ,QAAQ,EAAE;QACZ,CAAC,CAAC;QACFjB,cAAc,CAACM,KAAI,GAAI,EAAE;MAC3B;IACF,CAAC;IAED,MAAMY,aAAY,GAAKV,OAAO,IAAK;MACjC;MACAnB,KAAK,CAAC8B,GAAG,CAAC,8BAA8BX,OAAO,CAACK,EAAE,EAAE,EAAE;QAAEJ,OAAO,EAAE;MAAM,CAAC,EACrEW,IAAI,CAAC,MAAM;QACVZ,OAAO,CAACC,OAAM,GAAI,KAAK;MACzB,CAAC,EACAY,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC;IAED,OAAO;MACLvB,QAAQ;MACRM,gBAAgB;MAChBL,cAAc;MACdU,UAAU;MACVQ,aAAa;MACbhB,OAAO;MACPX;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}