{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n\n// IMPORTA tu userStore\nimport { useUserStore } from '@/stores/userStore';\n\n// Ejemplo: si usas variable de entorno para la IP\n// Si no, puedes poner la IP/PUERTO directamente en la URL\n\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ip = process.env.VUE_APP_IP || 'localhost';\n    const router = useRouter();\n    const userStore = useUserStore();\n\n    // Campos reactivamente enlazados al formulario\n    const email = ref('');\n    const password = ref('');\n    const errorMessage = ref('');\n    const showModal = ref(false);\n    const userType = ref('');\n\n    // Funci√≥n principal de login\n    const login = async () => {\n      errorMessage.value = '';\n      try {\n        // Petici√≥n POST al backend (ajusta la URL a la tuya)\n        const response = await axios.post(`http://${ip}:8081/api2/login`, {\n          email: email.value,\n          password: password.value\n        });\n\n        // Supongamos que tu backend responde algo como:\n        // {\n        //   \"Object\": {\n        //       \"idUser\": 3,\n        //       \"name\": \"Rodrigo\",\n        //       \"role\": \"admin\",\n        //       ...\n        //   }\n        // }\n        // Ajusta a c√≥mo venga tu data\n        console.log(\"Login exitoso:\", response.data);\n\n        // Extrae el objeto que viene del backend\n        const userData = response.data.Object;\n        // O si tu backend retorna directamente => const userData = response.data; \n\n        // Verifica que exista userData\n        if (userData) {\n          // 1. Guarda en localStorage\n          localStorage.setItem('user', JSON.stringify(userData));\n          // 2. Guarda en el userStore (as√≠ isLoggedIn = true)\n          userStore.setUser(userData);\n          userType.value = userData.role;\n          showModal.value = true;\n        }\n\n        // Redirige a la p√°gina principal\n        router.push('/');\n      } catch (error) {\n        console.error(\"Error en el login:\", error);\n        errorMessage.value = 'Credenciales incorrectas o error en el servidor.';\n      }\n    };\n    const __returned__ = {\n      ip,\n      router,\n      userStore,\n      email,\n      password,\n      errorMessage,\n      showModal,\n      userType,\n      login,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","useUserStore","ip","process","env","VUE_APP_IP","router","userStore","email","password","errorMessage","showModal","userType","login","value","response","post","console","log","data","userData","Object","localStorage","setItem","JSON","stringify","setUser","role","push","error"],"sources":["/Users/nohelestradap/Documents/VsCode/ensurancePharmacy/pharmacy/src/pages/Login.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div class=\"login-container\">\n    <div class=\"login-image\"></div>\n\n    <div class=\"login-box\">\n      <div class=\"logo-container\">\n        <img src=\"@/assets/logo.png\" alt=\"Farmacia Logo\" class=\"logo\" />\n      </div>\n\n      <h2 class=\"text-2xl font-bold text-center text-blue-800 mb-4\">\n        Iniciar Sesi√≥n\n      </h2>\n\n      <!-- Mensaje de error si lo hay -->\n      <div v-if=\"errorMessage\" class=\"mb-4 text-red-600 text-center\">\n        {{ errorMessage }}\n      </div>\n\n      <!-- Formulario -->\n      <form @submit.prevent=\"login\">\n        <!-- E-mail -->\n        <div class=\"mb-4\">\n          <label class=\"block text-gray-700\">E-mail</label>\n          <div class=\"input-group\">\n            <input\n              v-model=\"email\"\n              type=\"text\"\n              class=\"input-field\"\n              required\n            />\n            <span class=\"icon\">üë§</span>\n          </div>\n        </div>\n        \n        <!-- Contrase√±a -->\n        <div class=\"mb-4\">\n          <label class=\"block text-gray-700\">Contrase√±a</label>\n          <div class=\"input-group\">\n            <input\n              v-model=\"password\"\n              type=\"password\"\n              class=\"input-field\"\n              required\n            />\n            <span class=\"icon\">üîí</span>\n          </div>\n        </div>\n\n        <!-- Bot√≥n de inicio de sesi√≥n -->\n        <button type=\"submit\" class=\"login-button\">Iniciar sesi√≥n ‚Üí</button>\n      </form>\n\n      <!-- Enlace para registrarse -->\n      <div class=\"text-center mt-4\">\n        <router-link to=\"/register\" class=\"text-blue-500 hover:underline\">\n          Reg√≠strarse aqu√≠\n        </router-link>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modal para mostrar el tipo de usuario -->\n  <div v-if=\"showModal\" class=\"modal\">\n    <div class=\"modal-content\">\n      <span class=\"close\" @click=\"showModal = false\">&times;</span>\n      <p>Tipo de usuario: {{ userType }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n\n// IMPORTA tu userStore\nimport { useUserStore } from '@/stores/userStore';\n\n// Ejemplo: si usas variable de entorno para la IP\n// Si no, puedes poner la IP/PUERTO directamente en la URL\nconst ip = process.env.VUE_APP_IP || 'localhost';\n\nconst router = useRouter();\nconst userStore = useUserStore();\n\n// Campos reactivamente enlazados al formulario\nconst email = ref('');\nconst password = ref('');\nconst errorMessage = ref('');\nconst showModal = ref(false);\nconst userType = ref('');\n\n// Funci√≥n principal de login\nconst login = async () => {\n  errorMessage.value = '';\n  \n  try {\n    // Petici√≥n POST al backend (ajusta la URL a la tuya)\n    const response = await axios.post(`http://${ip}:8081/api2/login`, {\n      email: email.value,\n      password: password.value\n    });\n    \n    // Supongamos que tu backend responde algo como:\n    // {\n    //   \"Object\": {\n    //       \"idUser\": 3,\n    //       \"name\": \"Rodrigo\",\n    //       \"role\": \"admin\",\n    //       ...\n    //   }\n    // }\n    // Ajusta a c√≥mo venga tu data\n    console.log(\"Login exitoso:\", response.data);\n\n    // Extrae el objeto que viene del backend\n    const userData = response.data.Object; \n    // O si tu backend retorna directamente => const userData = response.data; \n\n    // Verifica que exista userData\n    if (userData) {\n      // 1. Guarda en localStorage\n      localStorage.setItem('user', JSON.stringify(userData));\n      // 2. Guarda en el userStore (as√≠ isLoggedIn = true)\n      userStore.setUser(userData);\n      userType.value = userData.role;\n      showModal.value = true;\n    }\n\n    // Redirige a la p√°gina principal\n    router.push('/');\n  } catch (error) {\n    console.error(\"Error en el login:\", error);\n    errorMessage.value = 'Credenciales incorrectas o error en el servidor.';\n  }\n};\n</script>\n\n<style scoped>\n/* Ejemplo de estilos, ajusta a tu gusto. */\n.login-container {\n  display: flex;\n  height: 100vh;\n  background-color: #f8f9fa;\n}\n.login-image {\n  flex: 1;\n  background-image: url(@/assets/farmacialog.jpg);\n  background-position: center;\n  background-size: cover;\n}\n.login-box {\n  flex: 1;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 50px;\n}\n.logo {\n  max-width: 150px;\n}\n.input-group {\n  position: relative;\n  width: 100%;\n}\n.input-field {\n  width: 100%;\n  padding: 12px 40px 12px 12px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  font-size: 16px;\n}\n.icon {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n}\n.login-button {\n  width: 100%;\n  background: #1e40af;\n  color: white;\n  padding: 12px;\n  border-radius: 8px;\n  font-size: 18px;\n  font-weight: bold;\n  cursor: pointer;\n  margin-top: 1rem;\n}\n.login-button:hover {\n  background: #1e3a8a;\n}\n\n.modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.close {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  cursor: pointer;\n}\n</style>"],"mappings":";AAwEA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA;;;;;;;;IACA,MAAMC,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,WAAW;IAEhD,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,SAAS,GAAGN,YAAY,CAAC,CAAC;;IAEhC;IACA,MAAMO,KAAK,GAAGV,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMW,QAAQ,GAAGX,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMY,YAAY,GAAGZ,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMa,SAAS,GAAGb,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMc,QAAQ,GAAGd,GAAG,CAAC,EAAE,CAAC;;IAExB;IACA,MAAMe,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxBH,YAAY,CAACI,KAAK,GAAG,EAAE;MAEvB,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,UAAUd,EAAE,kBAAkB,EAAE;UAChEM,KAAK,EAAEA,KAAK,CAACM,KAAK;UAClBL,QAAQ,EAAEA,QAAQ,CAACK;QACrB,CAAC,CAAC;;QAEF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC;;QAE5C;QACA,MAAMC,QAAQ,GAAGL,QAAQ,CAACI,IAAI,CAACE,MAAM;QACrC;;QAEA;QACA,IAAID,QAAQ,EAAE;UACZ;UACAE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;UACtD;UACAb,SAAS,CAACmB,OAAO,CAACN,QAAQ,CAAC;UAC3BR,QAAQ,CAACE,KAAK,GAAGM,QAAQ,CAACO,IAAI;UAC9BhB,SAAS,CAACG,KAAK,GAAG,IAAI;QACxB;;QAEA;QACAR,MAAM,CAACsB,IAAI,CAAC,GAAG,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CnB,YAAY,CAACI,KAAK,GAAG,kDAAkD;MACzE;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}