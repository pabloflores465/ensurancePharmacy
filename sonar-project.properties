# ============================================================================
# SonarQube Configuration - Ensurance Pharmacy Multi-Environment System
# ============================================================================
# Configuración para análisis de código en sistema unificado con Docker
# Soporta análisis por rama: dev, qa, main
# ============================================================================

# --- Identidad del proyecto ---
sonar.projectKey=ensurance-pharmacy
sonar.projectName=Ensurance Pharmacy System
sonar.sourceEncoding=UTF-8

# --- Rutas a analizar (código de producción) ---
# Backends Java
sonar.sources=backv4/src/main/java,backv5/src/main/java,ensurance/src,pharmacy/src

# --- Rutas de tests ---
# Tests de Java y Frontend
sonar.tests=backv4/src/test/java,backv5/src/test/java,ensurance/tests,pharmacy/tests

# Patrones de archivos de test para JS/TS/Vue
sonar.test.inclusions=**/__tests__/**,**/*.test.*,**/*.spec.*,**/tests/**

# --- Exclusiones de código fuente ---
sonar.exclusions=**/build/**,**/target/**,**/node_modules/**,**/dist/**,**/coverage/**,**/*.min.js,**/databases/**,**/logs/**

# --- Configuración Java ---
sonar.java.binaries=backv4/target/classes,backv5/target/classes
sonar.coverage.jacoco.xmlReportPaths=backv4/target/site/jacoco/jacoco.xml,backv5/target/site/jacoco/jacoco.xml

# --- Configuración JavaScript/TypeScript ---
sonar.javascript.lcov.reportPaths=ensurance/coverage/lcov.info,pharmacy/coverage/lcov.info

# --- Configuración por ambiente ---
# Estas propiedades se pueden sobrescribir desde Jenkins por rama
sonar.branch.name=${BRANCH_NAME}
sonar.projectVersion=${BUILD_NUMBER}

# --- Configuración de calidad ---
sonar.qualitygate.wait=true
sonar.qualitygate.timeout=300
