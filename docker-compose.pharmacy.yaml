services:
  # Servicio de limpieza que se ejecuta antes que los demÃ¡s
  cleanup:
    image: docker:24-cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c "
        echo 'ðŸ§¹ Limpiando contenedores en puertos del backend de farmacia...';
        docker ps -q --filter 'publish=${PHARM_BACKEND_HOST_PORT:-8082}' | xargs -r docker stop;
        docker ps -aq --filter 'publish=${PHARM_BACKEND_HOST_PORT:-8082}' | xargs -r docker rm;
        echo 'ðŸ§¹ Limpiando contenedores en puerto 8089 (frontend farmacia)...';
        docker ps -q --filter 'publish=8089' | xargs -r docker stop;
        docker ps -aq --filter 'publish=8089' | xargs -r docker rm;
        echo 'âœ… Limpieza completada para servicios de farmacia';
      "
    profiles:
      - cleanup

  pharmacy-backend:
    build:
      context: .
      dockerfile: Dockerfile.pharmacy.backend   # backv5 (HTTP default 8081)
    environment:
      SERVER_HOST: "0.0.0.0"
      SERVER_PORT: "8081"
      # Variables para comunicaciÃ³n interna entre backends  
      ENS_BACKEND_API_URL: "${ENS_BACKEND_API_URL:-http://localhost:8081/api}"
      HOSPITAL_API_URL: "${HOSPITAL_API_URL:-http://localhost:8000/api}"
    ports:
      - "${PHARM_BACKEND_HOST_PORT:-8082}:8081" # host -> container:8081
    restart: unless-stopped

  pharmacy-frontend:
    build:
      context: .
      dockerfile: Dockerfile.pharmacy.frontend  # Vue/SPA dev server (EXPOSE 8080)
    ports:
      - "8089:8080"                             # http://localhost:8089
    environment:
      # Bases de API para conexiÃ³n frontend -> backend
      VUE_APP_PHARMACY_API_URL:  "${VUE_APP_PHARMACY_API_URL:-http://localhost:8082/api2}"
      VUE_APP_ENSURANCE_API_URL: "${VUE_APP_ENSURANCE_API_URL:-http://localhost:8081/api}"
    depends_on:
      - pharmacy-backend
    restart: unless-stopped

