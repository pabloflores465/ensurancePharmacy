services:
  k6:
    image: grafana/k6:0.49.0
    container_name: ensurance-k6
    user: "0:0"
    command:
      - "run"
      - "--out"
      - "json=/results/k6-results.json"
      - "--out"
      - "web-dashboard=http://0.0.0.0:5665"
      - "--summary-export=/results/summary.json"
      - "/scripts/${TEST_SCRIPT:-sample-script.js}"
    environment:
      K6_WEB_DASHBOARD_EXPORT: "/results/k6-dashboard"
      BACKV4_URL: "${BACKV4_URL:-http://host.docker.internal:3002}"
      BACKV5_URL: "${BACKV5_URL:-http://host.docker.internal:3003}"
    volumes:
      - ../stress/k6/scripts:/scripts:ro
      - k6_results:/results
    ports:
      - "5665:5665"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: "no"
    networks:
      - stress-test-network

  jmeter:
    image: alpine/jmeter:5.6.3
    container_name: ensurance-jmeter
    entrypoint: ["/custom-entrypoint.sh"]
    command:
      - "-n"
      - "-t"
      - "/testplans/${JMETER_PLAN:-sample-plan.jmx}"
      - "-l"
      - "/results/results.jtl"
      - "-e"
      - "-o"
      - "/results/report"
      - "-JBACKV4_URL=${BACKV4_URL:-http://host.docker.internal:3002}"
      - "-JBACKV5_URL=${BACKV5_URL:-http://host.docker.internal:3003}"
      - "-JUSERS=${USERS:-50}"
      - "-JRAMP_TIME=${RAMP_TIME:-30}"
      - "-JDURATION=${DURATION:-300}"
    volumes:
      - ../stress/jmeter/test-plans:/testplans:ro
      - jmeter_results:/results
      - ./jmeter-entrypoint.sh:/custom-entrypoint.sh:ro
    ports:
      - "8085:8085"
    restart: "no"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - stress-test-network

  k6-report:
    image: python:3.9-alpine
    container_name: ensurance-k6-report
    working_dir: /results
    command: python -m http.server 5666
    volumes:
      - k6_results:/results
    ports:
      - "5666:5666"
    restart: unless-stopped
    networks:
      - stress-test-network
    labels:
      - "com.ensurance.service=k6-report"
      - "com.ensurance.description=K6 HTML Dashboard Server"

  jmeter-report:
    image: python:3.9-alpine
    container_name: ensurance-jmeter-report
    working_dir: /results/report
    command: python -m http.server 8085
    volumes:
      - jmeter_results:/results
    ports:
      - "8085:8085"
    restart: unless-stopped
    networks:
      - stress-test-network
    labels:
      - "com.ensurance.service=jmeter-report"
      - "com.ensurance.description=JMeter HTML Report Server"

networks:
  stress-test-network:
    driver: bridge

volumes:
  k6_results:
  jmeter_results:
