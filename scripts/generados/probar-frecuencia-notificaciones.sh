#!/bin/bash

# Script para confirmar que las frecuencias de notificaci√≥n funcionan correctamente

echo "=========================================="
echo "‚è∞ PRUEBA DE FRECUENCIA DE NOTIFICACIONES"
echo "=========================================="
echo "Hora: $(date '+%H:%M:%S')"
echo ""

echo "Este script probar√° que:"
echo "  üî¥ Aplicaciones ca√≠das ‚Üí cada 2 horas"
echo "  üî¥ Otras cr√≠ticas ‚Üí cada 5 minutos"
echo "  ‚ö†Ô∏è  Warnings ‚Üí cada 1 hora"
echo ""

read -p "¬øContinuar? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 1
fi

echo ""
echo "==========================================="
echo "TEST: Alerta Cr√≠tica (NO aplicaci√≥n ca√≠da)"
echo "==========================================="
echo ""
echo "Vamos a disparar: K6HighErrorRate"
echo "Esta alerta deber√≠a repetirse cada 5 minutos"
echo ""

# Limpiar m√©tricas anteriores
curl -s -X DELETE http://localhost:9093/metrics/job/test-frecuencia > /dev/null 2>&1
sleep 2

# Enviar m√©trica que dispare alerta CR√çTICA (pero no de aplicaci√≥n ca√≠da)
echo "üì§ Enviando m√©trica: 20% error rate (umbral: 5%)"
echo "k6_http_req_failed 0.20" | curl --data-binary @- http://localhost:9093/metrics/job/test-frecuencia 2>/dev/null
echo "‚úÖ M√©trica enviada"
echo ""

echo "‚è±Ô∏è  Esperando 90 segundos para que se dispare..."
sleep 90

# Verificar alerta
ALERT_STATE=$(curl -s http://localhost:9090/api/v1/alerts | jq -r '.data.alerts[] | select(.labels.alertname=="K6HighErrorRate") | .state')

if [ "$ALERT_STATE" == "firing" ]; then
    echo "‚úÖ K6HighErrorRate est√° FIRING"
    echo ""
    
    echo "‚è±Ô∏è  Esperando 60s para que Alertmanager procese..."
    sleep 60
    
    echo ""
    echo "üìä Verificando en Alertmanager..."
    AM_ALERT=$(curl -s http://localhost:9094/api/v2/alerts 2>/dev/null | jq -r '.[] | select(.labels.alertname=="K6HighErrorRate") | {alertname, state: .status.state, inhibited: .status.inhibitedBy}')
    
    if [ ! -z "$AM_ALERT" ] && [ "$AM_ALERT" != "null" ]; then
        echo "$AM_ALERT" | jq .
        echo ""
        echo "‚úÖ Alerta en Alertmanager"
    else
        echo "‚ö†Ô∏è  Alerta no encontrada en Alertmanager a√∫n"
    fi
    
    echo ""
    echo "üìã Logs de notificaci√≥n:"
    docker compose -f docker-compose.full.yml logs --tail=50 alertmanager 2>&1 | \
        grep -iE "(K6HighErrorRate|notify.*success)" | \
        grep -v "WARN.*version" | \
        tail -10
    
else
    echo "‚ö†Ô∏è  Alerta a√∫n no est√° en FIRING"
    echo "   Estado actual: $ALERT_STATE"
fi

echo ""
echo "==========================================="
echo "üìß PRIMERA NOTIFICACI√ìN"
echo "==========================================="
echo ""
echo "Si la alerta est√° activa, deber√≠as recibir:"
echo "  üìß Email en: rfloresm@unis.edu.gt, jflores@unis.edu.gt"
echo "  üí¨ Slack en: #ensurance-alerts"
echo "  üìõ Asunto: [CR√çTICO] Alerta Urgente - Ensurance Pharmacy"
echo "  üìù Contenido: K6HighErrorRate"
echo ""
echo "‚è∞ SEGUNDA NOTIFICACI√ìN en 5 minutos (01:$(date -d '+5 minutes' '+%M'))"
echo "‚è∞ TERCERA NOTIFICACI√ìN en 10 minutos (01:$(date -d '+10 minutes' '+%M'))"
echo ""

read -p "¬øEsperar 5 minutos para confirmar segunda notificaci√≥n? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "‚è±Ô∏è  Esperando 5 minutos..."
    for i in {1..30}; do
        echo -n "   $(( 10 * i ))s..."
        sleep 10
    done
    echo " 300s ‚úì"
    echo ""
    
    echo "üìã Logs de SEGUNDA notificaci√≥n:"
    docker compose -f docker-compose.full.yml logs --tail=50 alertmanager 2>&1 | \
        grep -iE "(K6HighErrorRate|notify.*success)" | \
        grep -v "WARN.*version" | \
        tail -10
    echo ""
    
    echo "‚úÖ Si ves 'Notify success' arriba, la SEGUNDA notificaci√≥n se envi√≥"
    echo "   Confirma en tu email y Slack"
fi

echo ""
echo "==========================================="
echo "üìä RESUMEN"
echo "==========================================="
echo ""

# Contar alertas activas
TOTAL_ALERTS=$(curl -s http://localhost:9090/api/v1/alerts | jq '.data.alerts | length')
K6_ALERTS=$(curl -s http://localhost:9090/api/v1/alerts | jq -r '[.data.alerts[] | select(.labels.alertname | test("K6"))] | length')

echo "Alertas activas totales: $TOTAL_ALERTS"
echo "Alertas K6 activas: $K6_ALERTS"
echo ""

echo "üîç Alertas de aplicaciones ca√≠das (repeat: 2h):"
curl -s http://localhost:9090/api/v1/alerts | \
    jq -r '.data.alerts[] | select(.labels.alertname | test("BackendDown|FrontendDown")) | "   ‚Ä¢ \(.labels.alertname)"'
echo ""

echo "üîç Otras alertas cr√≠ticas (repeat: 5m):"
curl -s http://localhost:9090/api/v1/alerts | \
    jq -r '.data.alerts[] | select(.labels.severity=="critical" and (.labels.alertname | test("BackendDown|FrontendDown") | not)) | "   ‚Ä¢ \(.labels.alertname)"'
echo ""

echo "üîç Alertas warning (repeat: 1h):"
curl -s http://localhost:9090/api/v1/alerts | \
    jq -r '.data.alerts[] | select(.labels.severity=="warning") | "   ‚Ä¢ \(.labels.alertname)"' | head -5
echo ""

echo "==========================================="
echo "‚úÖ CONFIRMACI√ìN"
echo "==========================================="
echo ""
echo "Configuraci√≥n correcta si:"
echo "  ‚úÖ K6HighErrorRate envi√≥ notificaci√≥n inmediatamente"
echo "  ‚úÖ Segunda notificaci√≥n lleg√≥ despu√©s de 5 minutos"
echo "  ‚úÖ Aplicaciones ca√≠das NO enviaron nuevas notificaciones"
echo ""
echo "Pr√≥ximas notificaciones esperadas:"
echo "  üìß K6HighErrorRate: Cada 5 minutos mientras est√© activa"
echo "  üìß Aplicaciones ca√≠das: No hasta ~02:24 UTC"
echo ""

echo "üåê Interfaces √∫tiles:"
echo "   Prometheus: http://localhost:9090/alerts"
echo "   Alertmanager: http://localhost:9094"
echo ""

echo "üìÑ Ver documento completo:"
echo "   cat FRECUENCIA_NOTIFICACIONES.md"
echo ""
