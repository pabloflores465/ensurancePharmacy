name: SonarQube PR Analysis

on:
  pull_request:
    branches: [main, develop, qa]

jobs:
  sonarqube-pr-analysis:
    runs-on: ubuntu-latest
    name: SonarQube Pull Request Analysis
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Disable shallow clone for better analysis

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: "23"
          distribution: "temurin"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Frontend Dependencies
        run: |
          cd ensurance && npm ci --prefer-offline --no-audit --progress=false
          cd ../pharmacy && npm ci --prefer-offline --no-audit --progress=false

      - name: Run Backend Tests with Coverage
        run: |
          cd backv4 && mvn clean verify
          cd ../backv5 && mvn clean verify

      - name: Run Frontend Tests with Coverage
        run: |
          cd ensurance && npm run test:coverage
          cd ../pharmacy && npm run test:unit:coverage

      - name: Run SonarQube Scanner for PR - Backend DEV
        if: github.base_ref == 'develop'
        run: |
          cd backv4 && mvn sonar:sonar \
            -Dsonar.projectKey=ensurance-backend-dev \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300
          cd ../backv5 && mvn sonar:sonar \
            -Dsonar.projectKey=ensurance-backend-dev \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300

      - name: Run SonarQube Scanner for PR - Backend QA
        if: github.base_ref == 'qa'
        run: |
          cd backv4 && mvn sonar:sonar \
            -Dsonar.projectKey=ensurance-backend-qa \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300
          cd ../backv5 && mvn sonar:sonar \
            -Dsonar.projectKey=ensurance-backend-qa \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300

      - name: Run SonarQube Scanner for PR - Backend MAIN
        if: github.base_ref == 'main'
        run: |
          cd backv4 && mvn sonar:sonar \
            -Dsonar.projectKey=ensurance-backend-main \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300
          cd ../backv5 && mvn sonar:sonar \
            -Dsonar.projectKey=ensurance-backend-main \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300

      - name: Run SonarQube Analysis - Frontend Ensurance PR
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: ./ensurance
          args: >
            -Dsonar.projectKey=${{ github.base_ref == 'main' && 'ensurance-frontend-main' || github.base_ref == 'qa' && 'ensurance-frontend-qa' || 'ensurance-frontend-dev' }}
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300

      - name: Run SonarQube Analysis - Frontend Pharmacy PR
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: ./pharmacy
          args: >
            -Dsonar.projectKey=${{ github.base_ref == 'main' && 'pharmacy-frontend-main' || github.base_ref == 'qa' && 'pharmacy-frontend-qa' || 'pharmacy-frontend-dev' }}
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
